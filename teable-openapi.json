{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Teable App",
    "description": "Manage Data as easy as drink a cup of tea"
  },
  "servers": [
    {
      "url": "https://app.teable.io/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "/table/{tableId}/record/{recordId}": {
      "get": {
        "summary": "Get record",
        "description": "Retrieve a single record by its ID with options to specify field projections and output format.",
        "tags": [
          "record"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "recordId",
            "in": "path"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "If you want to get only some fields, pass in this parameter, otherwise all visible fields will be obtained, The parameter value depends on the specified fieldKeyType to determine whether it is name or id"
            },
            "required": false,
            "name": "projection",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "json",
                "text"
              ],
              "default": "json",
              "description": "Define the return value formate, you can set it to text if you only need simple string value"
            },
            "required": false,
            "name": "cellFormat",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name"
              ],
              "default": "name",
              "description": "Define the key type of record.fields[key], You can click \"systemInfo\" in the field edit box to get fieldId or enter the table design screen with all the field details"
            },
            "required": false,
            "name": "fieldKeyType",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The record id."
                    },
                    "name": {
                      "type": "string",
                      "description": "primary field value"
                    },
                    "fields": {
                      "type": "object",
                      "additionalProperties": {
                        "nullable": true
                      },
                      "description": "Objects with a fields key mapping fieldId or field name to value for that field."
                    },
                    "autoNumber": {
                      "type": "number",
                      "description": "Auto number, a unique identifier for each record"
                    },
                    "createdTime": {
                      "type": "string",
                      "description": "Created time, date ISO string (new Date().toISOString)."
                    },
                    "lastModifiedTime": {
                      "type": "string",
                      "description": "Last modified time, date ISO string (new Date().toISOString)."
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "Created by, user name"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "Last modified by, user name"
                    }
                  },
                  "required": [
                    "id",
                    "fields"
                  ]
                }
              }
            }
          }
        },
        "operationId": "getGetRecord"
      },
      "patch": {
        "summary": "Update record",
        "description": "Update a single record by its ID with support for field value typecast and record reordering.",
        "tags": [
          "record"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "recordId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fieldKeyType": {
                    "type": "string",
                    "enum": [
                      "id",
                      "name"
                    ],
                    "default": "name",
                    "description": "Define the key type of record.fields[key], You can click \"systemInfo\" in the field edit box to get fieldId or enter the table design screen with all the field details"
                  },
                  "typecast": {
                    "type": "boolean",
                    "description": "Automatic data conversion from cellValues if the typecast parameter is passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for integrating with 3rd party data sources."
                  },
                  "record": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "object",
                        "additionalProperties": {
                          "nullable": true
                        },
                        "description": "Objects with a fields key mapping fieldId or field name to value for that field."
                      }
                    },
                    "required": [
                      "fields"
                    ]
                  },
                  "order": {
                    "type": "object",
                    "properties": {
                      "viewId": {
                        "type": "string",
                        "description": "You can only specify order in one view when create record (will create a order index automatically)"
                      },
                      "anchorId": {
                        "type": "string",
                        "description": "The record id to anchor to"
                      },
                      "position": {
                        "type": "string",
                        "enum": [
                          "before",
                          "after"
                        ]
                      }
                    },
                    "required": [
                      "viewId",
                      "anchorId",
                      "position"
                    ],
                    "description": "Where this record to insert to (Optional)"
                  }
                },
                "required": [
                  "record"
                ],
                "description": "Update record by id"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns record data after update.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The record id."
                    },
                    "name": {
                      "type": "string",
                      "description": "primary field value"
                    },
                    "fields": {
                      "type": "object",
                      "additionalProperties": {
                        "nullable": true
                      },
                      "description": "Objects with a fields key mapping fieldId or field name to value for that field."
                    },
                    "autoNumber": {
                      "type": "number",
                      "description": "Auto number, a unique identifier for each record"
                    },
                    "createdTime": {
                      "type": "string",
                      "description": "Created time, date ISO string (new Date().toISOString)."
                    },
                    "lastModifiedTime": {
                      "type": "string",
                      "description": "Last modified time, date ISO string (new Date().toISOString)."
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "Created by, user name"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "Last modified by, user name"
                    }
                  },
                  "required": [
                    "id",
                    "fields"
                  ]
                }
              }
            }
          }
        },
        "operationId": "modifyUpdateRecord"
      },
      "delete": {
        "summary": "Delete record",
        "description": "Permanently delete a single record by its ID.",
        "tags": [
          "record"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "recordId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          }
        },
        "operationId": "deleteDeleteRecord"
      },
      "post": {
        "summary": "Duplicate record",
        "description": "Create a copy of an existing record with optional custom positioning in the view.",
        "tags": [
          "record"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "recordId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "viewId": {
                    "type": "string",
                    "description": "You can only specify order in one view when create record (will create a order index automatically)"
                  },
                  "anchorId": {
                    "type": "string",
                    "description": "The record id to anchor to"
                  },
                  "position": {
                    "type": "string",
                    "enum": [
                      "before",
                      "after"
                    ]
                  }
                },
                "required": [
                  "viewId",
                  "anchorId",
                  "position"
                ],
                "description": "Where this record to insert to (Optional)"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful duplicate",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The record id."
                          },
                          "name": {
                            "type": "string",
                            "description": "primary field value"
                          },
                          "fields": {
                            "type": "object",
                            "additionalProperties": {
                              "nullable": true
                            },
                            "description": "Objects with a fields key mapping fieldId or field name to value for that field."
                          },
                          "autoNumber": {
                            "type": "number",
                            "description": "Auto number, a unique identifier for each record"
                          },
                          "createdTime": {
                            "type": "string",
                            "description": "Created time, date ISO string (new Date().toISOString)."
                          },
                          "lastModifiedTime": {
                            "type": "string",
                            "description": "Last modified time, date ISO string (new Date().toISOString)."
                          },
                          "createdBy": {
                            "type": "string",
                            "description": "Created by, user name"
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "Last modified by, user name"
                          }
                        },
                        "required": [
                          "id",
                          "fields"
                        ]
                      },
                      "description": "Array of record objects ",
                      "example": [
                        {
                          "id": "recXXXXXXX",
                          "fields": {
                            "single line text": "text value"
                          }
                        }
                      ]
                    },
                    "extra": {
                      "type": "object",
                      "properties": {
                        "groupPoints": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "number",
                                    "enum": [
                                      0
                                    ]
                                  },
                                  "depth": {
                                    "type": "number",
                                    "maximum": 2,
                                    "minimum": 0
                                  },
                                  "value": {
                                    "nullable": true
                                  },
                                  "isCollapsed": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "id",
                                  "type",
                                  "depth",
                                  "isCollapsed"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "number",
                                    "enum": [
                                      1
                                    ]
                                  },
                                  "count": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "type",
                                  "count"
                                ]
                              }
                            ]
                          },
                          "description": "Group points for the view"
                        }
                      }
                    }
                  },
                  "required": [
                    "records"
                  ]
                }
              }
            }
          }
        },
        "operationId": "createDuplicateRecord"
      }
    },
    "/table/{tableId}/record": {
      "get": {
        "summary": "List records",
        "description": "Retrieve a list of records with support for filtering, sorting, grouping, and pagination. The response includes record data and optional group information.",
        "tags": [
          "record"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "If you want to get only some fields, pass in this parameter, otherwise all visible fields will be obtained, The parameter value depends on the specified fieldKeyType to determine whether it is name or id"
            },
            "required": false,
            "name": "projection",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "json",
                "text"
              ],
              "default": "json",
              "description": "Define the return value formate, you can set it to text if you only need simple string value"
            },
            "required": false,
            "name": "cellFormat",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name"
              ],
              "default": "name",
              "description": "Define the key type of record.fields[key], You can click \"systemInfo\" in the field edit box to get fieldId or enter the table design screen with all the field details"
            },
            "required": false,
            "name": "fieldKeyType",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Set the view you want to fetch, default is first view. result will filter and sort by view options.",
              "example": "viwXXXXXXX"
            },
            "required": false,
            "name": "viewId",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                }
              ],
              "description": "When a viewId is specified, configure this to true will ignore the view's filter, sort, etc"
            },
            "required": false,
            "name": "ignoreViewQuery",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "example": "{field} = 'Completed' AND {field} > 5",
              "deprecated": true
            },
            "required": false,
            "name": "filterByTql",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
            },
            "required": false,
            "name": "filter",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "maxItems": 1
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                },
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      }
                    ]
                  },
                  "minItems": 3,
                  "maxItems": 3
                }
              ],
              "default": [
                "searchValue",
                "fieldIdOrName",
                false
              ],
              "description": "Search for records that match the specified field and value"
            },
            "required": false,
            "name": "search",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                },
                {
                  "type": "string"
                }
              ],
              "description": "Filter out the records that can be selected by a given link cell from the relational table. For example, if the specified field is one to many or one to one relationship, recordId for which the field has already been selected will not appear.",
              "example": [
                "fldXXXXXXX",
                "recXXXXXXX"
              ]
            },
            "required": false,
            "name": "filterLinkCellCandidate",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                },
                {
                  "type": "string"
                }
              ],
              "description": "Filter out selected records based on this link cell from the relational table. Note that viewId, filter, and orderBy will not take effect in this case because selected records has it own order. Ignoring recordId gets all the selected records for the field",
              "example": [
                "fldXXXXXXX",
                "recXXXXXXX"
              ]
            },
            "required": false,
            "name": "filterLinkCellSelected",
            "in": "query"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Filter selected records by record ids"
            },
            "required": false,
            "name": "selectedRecordIds",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "An array of sort objects that specifies how the records should be ordered."
            },
            "required": false,
            "name": "orderBy",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "An array of group objects that specifies how the records should be grouped."
            },
            "required": false,
            "name": "groupBy",
            "in": "query"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "An array of group ids that specifies which groups are collapsed"
            },
            "required": false,
            "name": "collapsedGroupIds",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "description": "The record count you want to take, maximum is 2000",
              "example": 100
            },
            "required": false,
            "name": "take",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "description": "The records count you want to skip",
              "example": 0
            },
            "required": false,
            "name": "skip",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The record id."
                          },
                          "name": {
                            "type": "string",
                            "description": "primary field value"
                          },
                          "fields": {
                            "type": "object",
                            "additionalProperties": {
                              "nullable": true
                            },
                            "description": "Objects with a fields key mapping fieldId or field name to value for that field."
                          },
                          "autoNumber": {
                            "type": "number",
                            "description": "Auto number, a unique identifier for each record"
                          },
                          "createdTime": {
                            "type": "string",
                            "description": "Created time, date ISO string (new Date().toISOString)."
                          },
                          "lastModifiedTime": {
                            "type": "string",
                            "description": "Last modified time, date ISO string (new Date().toISOString)."
                          },
                          "createdBy": {
                            "type": "string",
                            "description": "Created by, user name"
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "Last modified by, user name"
                          }
                        },
                        "required": [
                          "id",
                          "fields"
                        ]
                      },
                      "description": "Array of record objects ",
                      "example": [
                        {
                          "id": "recXXXXXXX",
                          "fields": {
                            "single line text": "text value"
                          }
                        }
                      ]
                    },
                    "offset": {
                      "type": "string",
                      "description": "If more records exist, the response includes an offset. Use this offset for fetching the next page of records."
                    },
                    "extra": {
                      "type": "object",
                      "properties": {
                        "groupPoints": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "number",
                                    "enum": [
                                      0
                                    ]
                                  },
                                  "depth": {
                                    "type": "number",
                                    "maximum": 2,
                                    "minimum": 0
                                  },
                                  "value": {
                                    "nullable": true
                                  },
                                  "isCollapsed": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "id",
                                  "type",
                                  "depth",
                                  "isCollapsed"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "number",
                                    "enum": [
                                      1
                                    ]
                                  },
                                  "count": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "type",
                                  "count"
                                ]
                              }
                            ]
                          },
                          "description": "Group points for the view"
                        }
                      }
                    }
                  },
                  "required": [
                    "records"
                  ]
                }
              }
            }
          }
        },
        "operationId": "getListRecords"
      },
      "post": {
        "summary": "Create records",
        "description": "Create one or multiple records with support for field value typecast and custom record ordering.",
        "tags": [
          "record"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fieldKeyType": {
                    "type": "string",
                    "enum": [
                      "id",
                      "name"
                    ],
                    "default": "name",
                    "description": "Define the key type of record.fields[key], You can click \"systemInfo\" in the field edit box to get fieldId or enter the table design screen with all the field details"
                  },
                  "typecast": {
                    "type": "boolean",
                    "description": "Automatic data conversion from cellValues if the typecast parameter is passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for integrating with 3rd party data sources."
                  },
                  "order": {
                    "type": "object",
                    "properties": {
                      "viewId": {
                        "type": "string",
                        "description": "You can only specify order in one view when create record (will create a order index automatically)"
                      },
                      "anchorId": {
                        "type": "string",
                        "description": "The record id to anchor to"
                      },
                      "position": {
                        "type": "string",
                        "enum": [
                          "before",
                          "after"
                        ]
                      }
                    },
                    "required": [
                      "viewId",
                      "anchorId",
                      "position"
                    ],
                    "description": "Where this record to insert to (Optional)"
                  },
                  "records": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "object",
                          "additionalProperties": {
                            "nullable": true
                          },
                          "description": "Objects with a fields key mapping fieldId or field name to value for that field."
                        }
                      },
                      "required": [
                        "fields"
                      ]
                    },
                    "description": "Array of record objects ",
                    "example": [
                      {
                        "fields": {
                          "single line text": "text value"
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "records"
                ],
                "description": "Multiple Create records"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns data about the records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The record id."
                          },
                          "name": {
                            "type": "string",
                            "description": "primary field value"
                          },
                          "fields": {
                            "type": "object",
                            "additionalProperties": {
                              "nullable": true
                            },
                            "description": "Objects with a fields key mapping fieldId or field name to value for that field."
                          },
                          "autoNumber": {
                            "type": "number",
                            "description": "Auto number, a unique identifier for each record"
                          },
                          "createdTime": {
                            "type": "string",
                            "description": "Created time, date ISO string (new Date().toISOString)."
                          },
                          "lastModifiedTime": {
                            "type": "string",
                            "description": "Last modified time, date ISO string (new Date().toISOString)."
                          },
                          "createdBy": {
                            "type": "string",
                            "description": "Created by, user name"
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "Last modified by, user name"
                          }
                        },
                        "required": [
                          "id",
                          "fields"
                        ]
                      },
                      "description": "Array of record objects ",
                      "example": [
                        {
                          "id": "recXXXXXXX",
                          "fields": {
                            "single line text": "text value"
                          }
                        }
                      ]
                    },
                    "extra": {
                      "type": "object",
                      "properties": {
                        "groupPoints": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "number",
                                    "enum": [
                                      0
                                    ]
                                  },
                                  "depth": {
                                    "type": "number",
                                    "maximum": 2,
                                    "minimum": 0
                                  },
                                  "value": {
                                    "nullable": true
                                  },
                                  "isCollapsed": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "id",
                                  "type",
                                  "depth",
                                  "isCollapsed"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "number",
                                    "enum": [
                                      1
                                    ]
                                  },
                                  "count": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "type",
                                  "count"
                                ]
                              }
                            ]
                          },
                          "description": "Group points for the view"
                        }
                      }
                    }
                  },
                  "required": [
                    "records"
                  ]
                }
              }
            }
          }
        },
        "operationId": "createCreateRecords"
      },
      "patch": {
        "summary": "Update multiple records",
        "description": "Update multiple records in a single request with support for field value typecast and record reordering.",
        "tags": [
          "record"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fieldKeyType": {
                    "type": "string",
                    "enum": [
                      "id",
                      "name"
                    ],
                    "default": "name",
                    "description": "Define the key type of record.fields[key], You can click \"systemInfo\" in the field edit box to get fieldId or enter the table design screen with all the field details"
                  },
                  "typecast": {
                    "type": "boolean",
                    "description": "Automatic data conversion from cellValues if the typecast parameter is passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for integrating with 3rd party data sources."
                  },
                  "records": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "fields": {
                          "type": "object",
                          "additionalProperties": {
                            "nullable": true
                          },
                          "description": "Objects with a fields key mapping fieldId or field name to value for that field."
                        }
                      },
                      "required": [
                        "id",
                        "fields"
                      ]
                    }
                  },
                  "order": {
                    "type": "object",
                    "properties": {
                      "viewId": {
                        "type": "string",
                        "description": "You can only specify order in one view when create record (will create a order index automatically)"
                      },
                      "anchorId": {
                        "type": "string",
                        "description": "The record id to anchor to"
                      },
                      "position": {
                        "type": "string",
                        "enum": [
                          "before",
                          "after"
                        ]
                      }
                    },
                    "required": [
                      "viewId",
                      "anchorId",
                      "position"
                    ],
                    "description": "Where this record to insert to (Optional)"
                  }
                },
                "required": [
                  "records"
                ],
                "description": "Multiple Update records"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the records data after update.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The record id."
                      },
                      "name": {
                        "type": "string",
                        "description": "primary field value"
                      },
                      "fields": {
                        "type": "object",
                        "additionalProperties": {
                          "nullable": true
                        },
                        "description": "Objects with a fields key mapping fieldId or field name to value for that field."
                      },
                      "autoNumber": {
                        "type": "number",
                        "description": "Auto number, a unique identifier for each record"
                      },
                      "createdTime": {
                        "type": "string",
                        "description": "Created time, date ISO string (new Date().toISOString)."
                      },
                      "lastModifiedTime": {
                        "type": "string",
                        "description": "Last modified time, date ISO string (new Date().toISOString)."
                      },
                      "createdBy": {
                        "type": "string",
                        "description": "Created by, user name"
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "Last modified by, user name"
                      }
                    },
                    "required": [
                      "id",
                      "fields"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "modifyUpdateMultipleRecords"
      },
      "delete": {
        "summary": "Delete records",
        "description": "Permanently delete multiple records by their IDs in a single request.",
        "tags": [
          "record"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true,
            "name": "recordIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          }
        },
        "operationId": "deleteDeleteRecords"
      }
    },
    "/table/{tableId}/field": {
      "post": {
        "summary": "Create field",
        "description": "Create a new field in the specified table with the given configuration",
        "tags": [
          "field"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "singleLineText",
                      "longText",
                      "user",
                      "attachment",
                      "checkbox",
                      "multipleSelect",
                      "singleSelect",
                      "date",
                      "number",
                      "duration",
                      "rating",
                      "formula",
                      "rollup",
                      "count",
                      "link",
                      "createdTime",
                      "lastModifiedTime",
                      "createdBy",
                      "lastModifiedBy",
                      "autoNumber",
                      "button"
                    ],
                    "description": "The field types supported by teable.",
                    "example": "singleSelect"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The name of the field. can not be duplicated in the table.",
                    "example": "Tags"
                  },
                  "unique": {
                    "type": "boolean",
                    "description": "Whether this field is not unique."
                  },
                  "notNull": {
                    "type": "boolean",
                    "description": "Whether this field is not null."
                  },
                  "dbFieldName": {
                    "type": "string",
                    "minLength": 1,
                    "pattern": "^\\w{0,63}$",
                    "description": "Field(column) name in backend database. Limitation: 1-63 characters, can only contain letters, numbers and underscore, case sensitive, cannot be duplicated with existing db field name in the table."
                  },
                  "isLookup": {
                    "type": "boolean",
                    "description": "Whether this field is lookup field. witch means cellValue and [fieldType] is looked up from the linked table."
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "description": "The description of the field.",
                    "example": "this is a summary"
                  },
                  "lookupOptions": {
                    "type": "object",
                    "properties": {
                      "foreignTableId": {
                        "type": "string",
                        "description": "the table this field is linked to"
                      },
                      "lookupFieldId": {
                        "type": "string",
                        "description": "the field in the foreign table that will be displayed as the current field"
                      },
                      "linkFieldId": {
                        "type": "string",
                        "description": "The id of Linked record field to use for lookup"
                      },
                      "filter": {
                        "type": "object",
                        "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                      }
                    },
                    "required": [
                      "foreignTableId",
                      "lookupFieldId",
                      "linkFieldId"
                    ],
                    "description": "The lookup options for field, you need to configure it when isLookup attribute is true or field type is rollup."
                  },
                  "options": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "type": "string",
                            "enum": [
                              "countall({values})",
                              "counta({values})",
                              "count({values})",
                              "sum({values})",
                              "max({values})",
                              "min({values})",
                              "and({values})",
                              "or({values})",
                              "xor({values})",
                              "array_join({values})",
                              "array_unique({values})",
                              "array_compact({values})",
                              "concatenate({values})"
                            ]
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "The time zone that should be used to format dates"
                          },
                          "formatting": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "description": "the display formatting of the date."
                                  },
                                  "time": {
                                    "type": "string",
                                    "enum": [
                                      "HH:mm",
                                      "hh:mm A",
                                      "None"
                                    ],
                                    "description": "the display formatting of the time."
                                  },
                                  "timeZone": {
                                    "type": "string",
                                    "description": "The time zone that should be used to format dates"
                                  }
                                },
                                "required": [
                                  "date",
                                  "time",
                                  "timeZone"
                                ],
                                "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "decimal"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "percent"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "currency"
                                    ]
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type",
                                  "symbol"
                                ]
                              }
                            ],
                            "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                          },
                          "showAs": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "url",
                                      "email",
                                      "phone"
                                    ],
                                    "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "ring"
                                    ],
                                    "description": "can display as bar or ring in number field with single cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  },
                                  "showValue": {
                                    "type": "boolean",
                                    "description": "whether to displays the specific value on the graph"
                                  },
                                  "maxValue": {
                                    "type": "number",
                                    "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                  }
                                },
                                "required": [
                                  "type",
                                  "color",
                                  "showValue",
                                  "maxValue"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "line"
                                    ],
                                    "description": "can display as bar or line in number field with multiple cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "color"
                                ],
                                "additionalProperties": false
                              }
                            ],
                            "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                          }
                        },
                        "required": [
                          "expression"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "type": "string",
                            "description": "The formula including fields referenced by their IDs. For example, LEFT(4, {Birthday}) input will be returned as LEFT(4, {fldXXX}) via API."
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "The time zone that should be used to format dates"
                          },
                          "formatting": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "description": "the display formatting of the date."
                                  },
                                  "time": {
                                    "type": "string",
                                    "enum": [
                                      "HH:mm",
                                      "hh:mm A",
                                      "None"
                                    ],
                                    "description": "the display formatting of the time."
                                  },
                                  "timeZone": {
                                    "type": "string",
                                    "description": "The time zone that should be used to format dates"
                                  }
                                },
                                "required": [
                                  "date",
                                  "time",
                                  "timeZone"
                                ],
                                "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "decimal"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "percent"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "currency"
                                    ]
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type",
                                  "symbol"
                                ]
                              }
                            ],
                            "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                          },
                          "showAs": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "url",
                                      "email",
                                      "phone"
                                    ],
                                    "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "ring"
                                    ],
                                    "description": "can display as bar or ring in number field with single cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  },
                                  "showValue": {
                                    "type": "boolean",
                                    "description": "whether to displays the specific value on the graph"
                                  },
                                  "maxValue": {
                                    "type": "number",
                                    "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                  }
                                },
                                "required": [
                                  "type",
                                  "color",
                                  "showValue",
                                  "maxValue"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "line"
                                    ],
                                    "description": "can display as bar or line in number field with multiple cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "color"
                                ],
                                "additionalProperties": false
                              }
                            ],
                            "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                          }
                        },
                        "required": [
                          "expression"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "baseId": {
                            "type": "string",
                            "description": "the base id of the table that this field is linked to, only required for cross base link"
                          },
                          "relationship": {
                            "type": "string",
                            "enum": [
                              "oneOne",
                              "manyMany",
                              "oneMany",
                              "manyOne"
                            ],
                            "description": "describe the relationship from this table to the foreign table"
                          },
                          "foreignTableId": {
                            "type": "string",
                            "description": "the table this field is linked to"
                          },
                          "lookupFieldId": {
                            "type": "string",
                            "description": "the field in the foreign table that will be displayed as the current field"
                          },
                          "isOneWay": {
                            "type": "boolean",
                            "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                          },
                          "fkHostTableName": {
                            "type": "string",
                            "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                          },
                          "selfKeyName": {
                            "type": "string",
                            "description": "the name of the field that stores the current table primary key"
                          },
                          "foreignKeyName": {
                            "type": "string",
                            "description": "The name of the field that stores the foreign table primary key"
                          },
                          "symmetricFieldId": {
                            "type": "string",
                            "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                          },
                          "filterByViewId": {
                            "type": "string",
                            "nullable": true,
                            "description": "the view id that limits the number of records in the link field"
                          },
                          "visibleFieldIds": {
                            "type": "array",
                            "nullable": true,
                            "items": {
                              "type": "string"
                            },
                            "description": "the fields that will be displayed in the link field"
                          },
                          "filter": {
                            "type": "object",
                            "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                          }
                        },
                        "required": [
                          "relationship",
                          "foreignTableId",
                          "lookupFieldId",
                          "fkHostTableName",
                          "selfKeyName",
                          "foreignKeyName"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "formatting": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "description": "the display formatting of the date."
                              },
                              "time": {
                                "type": "string",
                                "enum": [
                                  "HH:mm",
                                  "hh:mm A",
                                  "None"
                                ],
                                "description": "the display formatting of the time."
                              },
                              "timeZone": {
                                "type": "string",
                                "description": "The time zone that should be used to format dates"
                              }
                            },
                            "required": [
                              "date",
                              "time",
                              "timeZone"
                            ],
                            "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                          },
                          "defaultValue": {
                            "type": "string",
                            "enum": [
                              "now"
                            ],
                            "description": "Whether the new row is automatically filled with the current time, caveat: the defaultValue is just a flag, it dose not effect the storing value of the record"
                          }
                        },
                        "required": [
                          "formatting"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "defaultValue": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "showAs": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "url",
                                  "email",
                                  "phone"
                                ],
                                "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "defaultValue": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "icon": {
                            "type": "string",
                            "enum": [
                              "star",
                              "moon",
                              "sun",
                              "zap",
                              "flame",
                              "heart",
                              "apple",
                              "thumb-up"
                            ]
                          },
                          "color": {
                            "type": "string",
                            "enum": [
                              "yellowBright",
                              "redBright",
                              "tealBright"
                            ]
                          },
                          "max": {
                            "type": "integer",
                            "maximum": 10,
                            "minimum": 1
                          }
                        },
                        "required": [
                          "icon",
                          "color",
                          "max"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "isMultiple": {
                            "type": "boolean",
                            "description": "Allow adding multiple users"
                          },
                          "shouldNotify": {
                            "type": "boolean",
                            "description": "Notify users when their name is added to a cell"
                          },
                          "defaultValue": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "me"
                                ]
                              },
                              {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "enum": [
                                        "me"
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "baseId": {
                            "type": "string",
                            "description": "the base id of the table that this field is linked to, only required for cross base link"
                          },
                          "relationship": {
                            "type": "string",
                            "enum": [
                              "oneOne",
                              "manyMany",
                              "oneMany",
                              "manyOne"
                            ],
                            "description": "describe the relationship from this table to the foreign table"
                          },
                          "foreignTableId": {
                            "type": "string",
                            "description": "the table this field is linked to"
                          },
                          "isOneWay": {
                            "type": "boolean",
                            "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                          },
                          "filterByViewId": {
                            "type": "string",
                            "nullable": true,
                            "description": "the view id that limits the number of records in the link field"
                          },
                          "visibleFieldIds": {
                            "type": "array",
                            "nullable": true,
                            "items": {
                              "type": "string"
                            },
                            "description": "the fields that will be displayed in the link field"
                          },
                          "filter": {
                            "type": "object",
                            "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                          }
                        },
                        "required": [
                          "relationship",
                          "foreignTableId"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "choices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "color": {
                                  "type": "string",
                                  "enum": [
                                    "blueLight2",
                                    "blueLight1",
                                    "blueBright",
                                    "blue",
                                    "blueDark1",
                                    "cyanLight2",
                                    "cyanLight1",
                                    "cyanBright",
                                    "cyan",
                                    "cyanDark1",
                                    "grayLight2",
                                    "grayLight1",
                                    "grayBright",
                                    "gray",
                                    "grayDark1",
                                    "greenLight2",
                                    "greenLight1",
                                    "greenBright",
                                    "green",
                                    "greenDark1",
                                    "orangeLight2",
                                    "orangeLight1",
                                    "orangeBright",
                                    "orange",
                                    "orangeDark1",
                                    "pinkLight2",
                                    "pinkLight1",
                                    "pinkBright",
                                    "pink",
                                    "pinkDark1",
                                    "purpleLight2",
                                    "purpleLight1",
                                    "purpleBright",
                                    "purple",
                                    "purpleDark1",
                                    "redLight2",
                                    "redLight1",
                                    "redBright",
                                    "red",
                                    "redDark1",
                                    "tealLight2",
                                    "tealLight1",
                                    "tealBright",
                                    "teal",
                                    "tealDark1",
                                    "yellowLight2",
                                    "yellowLight1",
                                    "yellowBright",
                                    "yellow",
                                    "yellowDark1"
                                  ]
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          },
                          "defaultValue": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            ]
                          },
                          "preventAutoNewOptions": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "choices"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "formatting": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "decimal"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "percent"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "currency"
                                    ]
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type",
                                  "symbol"
                                ]
                              }
                            ]
                          },
                          "showAs": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "ring"
                                    ],
                                    "description": "can display as bar or ring in number field with single cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  },
                                  "showValue": {
                                    "type": "boolean",
                                    "description": "whether to displays the specific value on the graph"
                                  },
                                  "maxValue": {
                                    "type": "number",
                                    "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                  }
                                },
                                "required": [
                                  "type",
                                  "color",
                                  "showValue",
                                  "maxValue"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "line"
                                    ],
                                    "description": "can display as bar or line in number field with multiple cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "color"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          },
                          "defaultValue": {
                            "type": "number"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "formatting": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "description": "the display formatting of the date."
                              },
                              "time": {
                                "type": "string",
                                "enum": [
                                  "HH:mm",
                                  "hh:mm A",
                                  "None"
                                ],
                                "description": "the display formatting of the time."
                              },
                              "timeZone": {
                                "type": "string",
                                "description": "The time zone that should be used to format dates"
                              }
                            },
                            "required": [
                              "date",
                              "time",
                              "timeZone"
                            ],
                            "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                          }
                        },
                        "required": [
                          "formatting"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "formatting": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "description": "the display formatting of the date."
                              },
                              "time": {
                                "type": "string",
                                "enum": [
                                  "HH:mm",
                                  "hh:mm A",
                                  "None"
                                ],
                                "description": "the display formatting of the time."
                              },
                              "timeZone": {
                                "type": "string",
                                "description": "The time zone that should be used to format dates"
                              }
                            },
                            "required": [
                              "date",
                              "time",
                              "timeZone"
                            ],
                            "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                          }
                        },
                        "required": [
                          "formatting"
                        ],
                        "additionalProperties": false
                      }
                    ],
                    "description": "The options of the field. The configuration of the field's options depend on the it's specific type."
                  },
                  "id": {
                    "type": "string",
                    "description": "The id of the field that start with \"fld\", followed by exactly 16 alphanumeric characters `/^fld[\\da-zA-Z]{16}$/`. It is sometimes useful to specify an id at creation time",
                    "example": "fldxxxxxxxxxxxxxxxx"
                  },
                  "order": {
                    "type": "object",
                    "properties": {
                      "viewId": {
                        "type": "string",
                        "description": "You can only specify order in one view when create field"
                      },
                      "orderIndex": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "viewId",
                      "orderIndex"
                    ]
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns data about a field.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The id of the field."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the field. can not be duplicated in the table.",
                      "example": "Tags"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "singleLineText",
                        "longText",
                        "user",
                        "attachment",
                        "checkbox",
                        "multipleSelect",
                        "singleSelect",
                        "date",
                        "number",
                        "duration",
                        "rating",
                        "formula",
                        "rollup",
                        "count",
                        "link",
                        "createdTime",
                        "lastModifiedTime",
                        "createdBy",
                        "lastModifiedBy",
                        "autoNumber",
                        "button"
                      ],
                      "description": "The field types supported by teable.",
                      "example": "singleSelect"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the field.",
                      "example": "this is a summary"
                    },
                    "options": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "countall({values})",
                                "counta({values})",
                                "count({values})",
                                "sum({values})",
                                "max({values})",
                                "min({values})",
                                "and({values})",
                                "or({values})",
                                "xor({values})",
                                "array_join({values})",
                                "array_unique({values})",
                                "array_compact({values})",
                                "concatenate({values})"
                              ]
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "The time zone that should be used to format dates"
                            },
                            "formatting": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "date": {
                                      "type": "string",
                                      "description": "the display formatting of the date."
                                    },
                                    "time": {
                                      "type": "string",
                                      "enum": [
                                        "HH:mm",
                                        "hh:mm A",
                                        "None"
                                      ],
                                      "description": "the display formatting of the time."
                                    },
                                    "timeZone": {
                                      "type": "string",
                                      "description": "The time zone that should be used to format dates"
                                    }
                                  },
                                  "required": [
                                    "date",
                                    "time",
                                    "timeZone"
                                  ],
                                  "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "decimal"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "percent"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "currency"
                                      ]
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type",
                                    "symbol"
                                  ]
                                }
                              ],
                              "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                            },
                            "showAs": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "url",
                                        "email",
                                        "phone"
                                      ],
                                      "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "ring"
                                      ],
                                      "description": "can display as bar or ring in number field with single cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    },
                                    "showValue": {
                                      "type": "boolean",
                                      "description": "whether to displays the specific value on the graph"
                                    },
                                    "maxValue": {
                                      "type": "number",
                                      "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color",
                                    "showValue",
                                    "maxValue"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "line"
                                      ],
                                      "description": "can display as bar or line in number field with multiple cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                            }
                          },
                          "required": [
                            "expression"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "description": "The formula including fields referenced by their IDs. For example, LEFT(4, {Birthday}) input will be returned as LEFT(4, {fldXXX}) via API."
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "The time zone that should be used to format dates"
                            },
                            "formatting": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "date": {
                                      "type": "string",
                                      "description": "the display formatting of the date."
                                    },
                                    "time": {
                                      "type": "string",
                                      "enum": [
                                        "HH:mm",
                                        "hh:mm A",
                                        "None"
                                      ],
                                      "description": "the display formatting of the time."
                                    },
                                    "timeZone": {
                                      "type": "string",
                                      "description": "The time zone that should be used to format dates"
                                    }
                                  },
                                  "required": [
                                    "date",
                                    "time",
                                    "timeZone"
                                  ],
                                  "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "decimal"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "percent"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "currency"
                                      ]
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type",
                                    "symbol"
                                  ]
                                }
                              ],
                              "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                            },
                            "showAs": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "url",
                                        "email",
                                        "phone"
                                      ],
                                      "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "ring"
                                      ],
                                      "description": "can display as bar or ring in number field with single cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    },
                                    "showValue": {
                                      "type": "boolean",
                                      "description": "whether to displays the specific value on the graph"
                                    },
                                    "maxValue": {
                                      "type": "number",
                                      "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color",
                                    "showValue",
                                    "maxValue"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "line"
                                      ],
                                      "description": "can display as bar or line in number field with multiple cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                            }
                          },
                          "required": [
                            "expression"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "baseId": {
                              "type": "string",
                              "description": "the base id of the table that this field is linked to, only required for cross base link"
                            },
                            "relationship": {
                              "type": "string",
                              "enum": [
                                "oneOne",
                                "manyMany",
                                "oneMany",
                                "manyOne"
                              ],
                              "description": "describe the relationship from this table to the foreign table"
                            },
                            "foreignTableId": {
                              "type": "string",
                              "description": "the table this field is linked to"
                            },
                            "lookupFieldId": {
                              "type": "string",
                              "description": "the field in the foreign table that will be displayed as the current field"
                            },
                            "isOneWay": {
                              "type": "boolean",
                              "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                            },
                            "fkHostTableName": {
                              "type": "string",
                              "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                            },
                            "selfKeyName": {
                              "type": "string",
                              "description": "the name of the field that stores the current table primary key"
                            },
                            "foreignKeyName": {
                              "type": "string",
                              "description": "The name of the field that stores the foreign table primary key"
                            },
                            "symmetricFieldId": {
                              "type": "string",
                              "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                            },
                            "filterByViewId": {
                              "type": "string",
                              "nullable": true,
                              "description": "the view id that limits the number of records in the link field"
                            },
                            "visibleFieldIds": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "the fields that will be displayed in the link field"
                            },
                            "filter": {
                              "type": "object",
                              "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                            }
                          },
                          "required": [
                            "relationship",
                            "foreignTableId",
                            "lookupFieldId",
                            "fkHostTableName",
                            "selfKeyName",
                            "foreignKeyName"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "formatting": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "description": "the display formatting of the date."
                                },
                                "time": {
                                  "type": "string",
                                  "enum": [
                                    "HH:mm",
                                    "hh:mm A",
                                    "None"
                                  ],
                                  "description": "the display formatting of the time."
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone that should be used to format dates"
                                }
                              },
                              "required": [
                                "date",
                                "time",
                                "timeZone"
                              ],
                              "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                            },
                            "defaultValue": {
                              "type": "string",
                              "enum": [
                                "now"
                              ],
                              "description": "Whether the new row is automatically filled with the current time, caveat: the defaultValue is just a flag, it dose not effect the storing value of the record"
                            }
                          },
                          "required": [
                            "formatting"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "defaultValue": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "showAs": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "url",
                                    "email",
                                    "phone"
                                  ],
                                  "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                }
                              },
                              "required": [
                                "type"
                              ]
                            },
                            "defaultValue": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "icon": {
                              "type": "string",
                              "enum": [
                                "star",
                                "moon",
                                "sun",
                                "zap",
                                "flame",
                                "heart",
                                "apple",
                                "thumb-up"
                              ]
                            },
                            "color": {
                              "type": "string",
                              "enum": [
                                "yellowBright",
                                "redBright",
                                "tealBright"
                              ]
                            },
                            "max": {
                              "type": "integer",
                              "maximum": 10,
                              "minimum": 1
                            }
                          },
                          "required": [
                            "icon",
                            "color",
                            "max"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "isMultiple": {
                              "type": "boolean",
                              "description": "Allow adding multiple users"
                            },
                            "shouldNotify": {
                              "type": "boolean",
                              "description": "Notify users when their name is added to a cell"
                            },
                            "defaultValue": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "me"
                                  ]
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "me"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "baseId": {
                              "type": "string",
                              "description": "the base id of the table that this field is linked to, only required for cross base link"
                            },
                            "relationship": {
                              "type": "string",
                              "enum": [
                                "oneOne",
                                "manyMany",
                                "oneMany",
                                "manyOne"
                              ],
                              "description": "describe the relationship from this table to the foreign table"
                            },
                            "foreignTableId": {
                              "type": "string",
                              "description": "the table this field is linked to"
                            },
                            "lookupFieldId": {
                              "type": "string",
                              "description": "the field in the foreign table that will be displayed as the current field"
                            },
                            "isOneWay": {
                              "type": "boolean",
                              "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                            },
                            "fkHostTableName": {
                              "type": "string",
                              "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                            },
                            "selfKeyName": {
                              "type": "string",
                              "description": "the name of the field that stores the current table primary key"
                            },
                            "foreignKeyName": {
                              "type": "string",
                              "description": "The name of the field that stores the foreign table primary key"
                            },
                            "symmetricFieldId": {
                              "type": "string",
                              "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                            },
                            "filterByViewId": {
                              "type": "string",
                              "nullable": true,
                              "description": "the view id that limits the number of records in the link field"
                            },
                            "visibleFieldIds": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "the fields that will be displayed in the link field"
                            },
                            "filter": {
                              "type": "object",
                              "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                            }
                          },
                          "required": [
                            "relationship",
                            "foreignTableId",
                            "lookupFieldId",
                            "fkHostTableName",
                            "selfKeyName",
                            "foreignKeyName"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "choices": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "color"
                                ]
                              }
                            },
                            "defaultValue": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ]
                            },
                            "preventAutoNewOptions": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "choices"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "formatting": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "decimal"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "percent"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "currency"
                                      ]
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type",
                                    "symbol"
                                  ]
                                }
                              ]
                            },
                            "showAs": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "ring"
                                      ],
                                      "description": "can display as bar or ring in number field with single cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    },
                                    "showValue": {
                                      "type": "boolean",
                                      "description": "whether to displays the specific value on the graph"
                                    },
                                    "maxValue": {
                                      "type": "number",
                                      "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color",
                                    "showValue",
                                    "maxValue"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "line"
                                      ],
                                      "description": "can display as bar or line in number field with multiple cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "defaultValue": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "formatting"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "AUTO_NUMBER()"
                              ]
                            }
                          },
                          "required": [
                            "expression"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "CREATED_TIME()"
                              ]
                            },
                            "formatting": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "description": "the display formatting of the date."
                                },
                                "time": {
                                  "type": "string",
                                  "enum": [
                                    "HH:mm",
                                    "hh:mm A",
                                    "None"
                                  ],
                                  "description": "the display formatting of the time."
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone that should be used to format dates"
                                }
                              },
                              "required": [
                                "date",
                                "time",
                                "timeZone"
                              ],
                              "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                            }
                          },
                          "required": [
                            "expression",
                            "formatting"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "LAST_MODIFIED_TIME()"
                              ]
                            },
                            "formatting": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "description": "the display formatting of the date."
                                },
                                "time": {
                                  "type": "string",
                                  "enum": [
                                    "HH:mm",
                                    "hh:mm A",
                                    "None"
                                  ],
                                  "description": "the display formatting of the time."
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone that should be used to format dates"
                                }
                              },
                              "required": [
                                "date",
                                "time",
                                "timeZone"
                              ],
                              "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                            }
                          },
                          "required": [
                            "expression",
                            "formatting"
                          ],
                          "additionalProperties": false
                        }
                      ],
                      "description": "The configuration options of the field. The structure of the field's options depend on the field's type."
                    },
                    "isLookup": {
                      "type": "boolean",
                      "description": "Whether this field is lookup field. witch means cellValue and [fieldType] is looked up from the linked table."
                    },
                    "lookupOptions": {
                      "type": "object",
                      "properties": {
                        "foreignTableId": {
                          "type": "string",
                          "description": "the table this field is linked to"
                        },
                        "lookupFieldId": {
                          "type": "string",
                          "description": "the field in the foreign table that will be displayed as the current field"
                        },
                        "relationship": {
                          "type": "string",
                          "enum": [
                            "oneOne",
                            "manyMany",
                            "oneMany",
                            "manyOne"
                          ],
                          "description": "describe the relationship from this table to the foreign table"
                        },
                        "fkHostTableName": {
                          "type": "string",
                          "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                        },
                        "selfKeyName": {
                          "type": "string",
                          "description": "the name of the field that stores the current table primary key"
                        },
                        "foreignKeyName": {
                          "type": "string",
                          "description": "The name of the field that stores the foreign table primary key"
                        },
                        "filter": {
                          "type": "object",
                          "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                        },
                        "linkFieldId": {
                          "type": "string",
                          "description": "The id of Linked record field to use for lookup"
                        }
                      },
                      "required": [
                        "foreignTableId",
                        "lookupFieldId",
                        "relationship",
                        "fkHostTableName",
                        "selfKeyName",
                        "foreignKeyName",
                        "linkFieldId"
                      ],
                      "description": "field lookup options."
                    },
                    "notNull": {
                      "type": "boolean",
                      "description": "Whether this field is not null."
                    },
                    "unique": {
                      "type": "boolean",
                      "description": "Whether this field is not unique."
                    },
                    "isPrimary": {
                      "type": "boolean",
                      "description": "Whether this field is primary field."
                    },
                    "isComputed": {
                      "type": "boolean",
                      "description": "Whether this field is computed field, you can not modify cellValue in computed field."
                    },
                    "isPending": {
                      "type": "boolean",
                      "description": "Whether this field's calculation is pending."
                    },
                    "hasError": {
                      "type": "boolean",
                      "description": "Whether This field has a configuration error. Check the fields referenced by this field's formula or configuration."
                    },
                    "cellValueType": {
                      "type": "string",
                      "enum": [
                        "string",
                        "number",
                        "boolean",
                        "dateTime"
                      ],
                      "description": "The cell value type of the field."
                    },
                    "isMultipleCellValue": {
                      "type": "boolean",
                      "description": "Whether this field has multiple cell value."
                    },
                    "dbFieldType": {
                      "type": "string",
                      "enum": [
                        "TEXT",
                        "INTEGER",
                        "DATETIME",
                        "REAL",
                        "BLOB",
                        "JSON",
                        "BOOLEAN"
                      ],
                      "description": "The field type of database that cellValue really store."
                    },
                    "dbFieldName": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^\\w{0,63}$",
                      "description": "Field(column) name in backend database. Limitation: 1-63 characters, can only contain letters, numbers and underscore, case sensitive, cannot be duplicated with existing db field name in the table."
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "options",
                    "cellValueType",
                    "dbFieldType",
                    "dbFieldName"
                  ]
                }
              }
            }
          }
        },
        "operationId": "createCreateField"
      },
      "get": {
        "summary": "List fields",
        "description": "Retrieve a list of fields in a table with optional filtering",
        "tags": [
          "field"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "The id of the view."
            },
            "required": false,
            "name": "viewId",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "required": false,
            "name": "filterHidden",
            "in": "query"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "If you want to get only some fields, pass in this parameter, otherwise all visible fields will be obtained"
            },
            "required": false,
            "name": "projection",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of field.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id of the field."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the field. can not be duplicated in the table.",
                        "example": "Tags"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "singleLineText",
                          "longText",
                          "user",
                          "attachment",
                          "checkbox",
                          "multipleSelect",
                          "singleSelect",
                          "date",
                          "number",
                          "duration",
                          "rating",
                          "formula",
                          "rollup",
                          "count",
                          "link",
                          "createdTime",
                          "lastModifiedTime",
                          "createdBy",
                          "lastModifiedBy",
                          "autoNumber",
                          "button"
                        ],
                        "description": "The field types supported by teable.",
                        "example": "singleSelect"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the field.",
                        "example": "this is a summary"
                      },
                      "options": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "expression": {
                                "type": "string",
                                "enum": [
                                  "countall({values})",
                                  "counta({values})",
                                  "count({values})",
                                  "sum({values})",
                                  "max({values})",
                                  "min({values})",
                                  "and({values})",
                                  "or({values})",
                                  "xor({values})",
                                  "array_join({values})",
                                  "array_unique({values})",
                                  "array_compact({values})",
                                  "concatenate({values})"
                                ]
                              },
                              "timeZone": {
                                "type": "string",
                                "description": "The time zone that should be used to format dates"
                              },
                              "formatting": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "description": "the display formatting of the date."
                                      },
                                      "time": {
                                        "type": "string",
                                        "enum": [
                                          "HH:mm",
                                          "hh:mm A",
                                          "None"
                                        ],
                                        "description": "the display formatting of the time."
                                      },
                                      "timeZone": {
                                        "type": "string",
                                        "description": "The time zone that should be used to format dates"
                                      }
                                    },
                                    "required": [
                                      "date",
                                      "time",
                                      "timeZone"
                                    ],
                                    "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "precision": {
                                        "type": "number",
                                        "maximum": 5,
                                        "minimum": 0
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "decimal"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "precision",
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "precision": {
                                        "type": "number",
                                        "maximum": 5,
                                        "minimum": 0
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "percent"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "precision",
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "precision": {
                                        "type": "number",
                                        "maximum": 5,
                                        "minimum": 0
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "currency"
                                        ]
                                      },
                                      "symbol": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "precision",
                                      "type",
                                      "symbol"
                                    ]
                                  }
                                ],
                                "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                              },
                              "showAs": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "url",
                                          "email",
                                          "phone"
                                        ],
                                        "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "bar",
                                          "ring"
                                        ],
                                        "description": "can display as bar or ring in number field with single cellValue value"
                                      },
                                      "color": {
                                        "type": "string",
                                        "enum": [
                                          "blueLight2",
                                          "blueLight1",
                                          "blueBright",
                                          "blue",
                                          "blueDark1",
                                          "cyanLight2",
                                          "cyanLight1",
                                          "cyanBright",
                                          "cyan",
                                          "cyanDark1",
                                          "grayLight2",
                                          "grayLight1",
                                          "grayBright",
                                          "gray",
                                          "grayDark1",
                                          "greenLight2",
                                          "greenLight1",
                                          "greenBright",
                                          "green",
                                          "greenDark1",
                                          "orangeLight2",
                                          "orangeLight1",
                                          "orangeBright",
                                          "orange",
                                          "orangeDark1",
                                          "pinkLight2",
                                          "pinkLight1",
                                          "pinkBright",
                                          "pink",
                                          "pinkDark1",
                                          "purpleLight2",
                                          "purpleLight1",
                                          "purpleBright",
                                          "purple",
                                          "purpleDark1",
                                          "redLight2",
                                          "redLight1",
                                          "redBright",
                                          "red",
                                          "redDark1",
                                          "tealLight2",
                                          "tealLight1",
                                          "tealBright",
                                          "teal",
                                          "tealDark1",
                                          "yellowLight2",
                                          "yellowLight1",
                                          "yellowBright",
                                          "yellow",
                                          "yellowDark1"
                                        ]
                                      },
                                      "showValue": {
                                        "type": "boolean",
                                        "description": "whether to displays the specific value on the graph"
                                      },
                                      "maxValue": {
                                        "type": "number",
                                        "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "color",
                                      "showValue",
                                      "maxValue"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "bar",
                                          "line"
                                        ],
                                        "description": "can display as bar or line in number field with multiple cellValue value"
                                      },
                                      "color": {
                                        "type": "string",
                                        "enum": [
                                          "blueLight2",
                                          "blueLight1",
                                          "blueBright",
                                          "blue",
                                          "blueDark1",
                                          "cyanLight2",
                                          "cyanLight1",
                                          "cyanBright",
                                          "cyan",
                                          "cyanDark1",
                                          "grayLight2",
                                          "grayLight1",
                                          "grayBright",
                                          "gray",
                                          "grayDark1",
                                          "greenLight2",
                                          "greenLight1",
                                          "greenBright",
                                          "green",
                                          "greenDark1",
                                          "orangeLight2",
                                          "orangeLight1",
                                          "orangeBright",
                                          "orange",
                                          "orangeDark1",
                                          "pinkLight2",
                                          "pinkLight1",
                                          "pinkBright",
                                          "pink",
                                          "pinkDark1",
                                          "purpleLight2",
                                          "purpleLight1",
                                          "purpleBright",
                                          "purple",
                                          "purpleDark1",
                                          "redLight2",
                                          "redLight1",
                                          "redBright",
                                          "red",
                                          "redDark1",
                                          "tealLight2",
                                          "tealLight1",
                                          "tealBright",
                                          "teal",
                                          "tealDark1",
                                          "yellowLight2",
                                          "yellowLight1",
                                          "yellowBright",
                                          "yellow",
                                          "yellowDark1"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "color"
                                    ],
                                    "additionalProperties": false
                                  }
                                ],
                                "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                              }
                            },
                            "required": [
                              "expression"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "expression": {
                                "type": "string",
                                "description": "The formula including fields referenced by their IDs. For example, LEFT(4, {Birthday}) input will be returned as LEFT(4, {fldXXX}) via API."
                              },
                              "timeZone": {
                                "type": "string",
                                "description": "The time zone that should be used to format dates"
                              },
                              "formatting": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "description": "the display formatting of the date."
                                      },
                                      "time": {
                                        "type": "string",
                                        "enum": [
                                          "HH:mm",
                                          "hh:mm A",
                                          "None"
                                        ],
                                        "description": "the display formatting of the time."
                                      },
                                      "timeZone": {
                                        "type": "string",
                                        "description": "The time zone that should be used to format dates"
                                      }
                                    },
                                    "required": [
                                      "date",
                                      "time",
                                      "timeZone"
                                    ],
                                    "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "precision": {
                                        "type": "number",
                                        "maximum": 5,
                                        "minimum": 0
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "decimal"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "precision",
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "precision": {
                                        "type": "number",
                                        "maximum": 5,
                                        "minimum": 0
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "percent"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "precision",
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "precision": {
                                        "type": "number",
                                        "maximum": 5,
                                        "minimum": 0
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "currency"
                                        ]
                                      },
                                      "symbol": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "precision",
                                      "type",
                                      "symbol"
                                    ]
                                  }
                                ],
                                "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                              },
                              "showAs": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "url",
                                          "email",
                                          "phone"
                                        ],
                                        "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "bar",
                                          "ring"
                                        ],
                                        "description": "can display as bar or ring in number field with single cellValue value"
                                      },
                                      "color": {
                                        "type": "string",
                                        "enum": [
                                          "blueLight2",
                                          "blueLight1",
                                          "blueBright",
                                          "blue",
                                          "blueDark1",
                                          "cyanLight2",
                                          "cyanLight1",
                                          "cyanBright",
                                          "cyan",
                                          "cyanDark1",
                                          "grayLight2",
                                          "grayLight1",
                                          "grayBright",
                                          "gray",
                                          "grayDark1",
                                          "greenLight2",
                                          "greenLight1",
                                          "greenBright",
                                          "green",
                                          "greenDark1",
                                          "orangeLight2",
                                          "orangeLight1",
                                          "orangeBright",
                                          "orange",
                                          "orangeDark1",
                                          "pinkLight2",
                                          "pinkLight1",
                                          "pinkBright",
                                          "pink",
                                          "pinkDark1",
                                          "purpleLight2",
                                          "purpleLight1",
                                          "purpleBright",
                                          "purple",
                                          "purpleDark1",
                                          "redLight2",
                                          "redLight1",
                                          "redBright",
                                          "red",
                                          "redDark1",
                                          "tealLight2",
                                          "tealLight1",
                                          "tealBright",
                                          "teal",
                                          "tealDark1",
                                          "yellowLight2",
                                          "yellowLight1",
                                          "yellowBright",
                                          "yellow",
                                          "yellowDark1"
                                        ]
                                      },
                                      "showValue": {
                                        "type": "boolean",
                                        "description": "whether to displays the specific value on the graph"
                                      },
                                      "maxValue": {
                                        "type": "number",
                                        "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "color",
                                      "showValue",
                                      "maxValue"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "bar",
                                          "line"
                                        ],
                                        "description": "can display as bar or line in number field with multiple cellValue value"
                                      },
                                      "color": {
                                        "type": "string",
                                        "enum": [
                                          "blueLight2",
                                          "blueLight1",
                                          "blueBright",
                                          "blue",
                                          "blueDark1",
                                          "cyanLight2",
                                          "cyanLight1",
                                          "cyanBright",
                                          "cyan",
                                          "cyanDark1",
                                          "grayLight2",
                                          "grayLight1",
                                          "grayBright",
                                          "gray",
                                          "grayDark1",
                                          "greenLight2",
                                          "greenLight1",
                                          "greenBright",
                                          "green",
                                          "greenDark1",
                                          "orangeLight2",
                                          "orangeLight1",
                                          "orangeBright",
                                          "orange",
                                          "orangeDark1",
                                          "pinkLight2",
                                          "pinkLight1",
                                          "pinkBright",
                                          "pink",
                                          "pinkDark1",
                                          "purpleLight2",
                                          "purpleLight1",
                                          "purpleBright",
                                          "purple",
                                          "purpleDark1",
                                          "redLight2",
                                          "redLight1",
                                          "redBright",
                                          "red",
                                          "redDark1",
                                          "tealLight2",
                                          "tealLight1",
                                          "tealBright",
                                          "teal",
                                          "tealDark1",
                                          "yellowLight2",
                                          "yellowLight1",
                                          "yellowBright",
                                          "yellow",
                                          "yellowDark1"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "color"
                                    ],
                                    "additionalProperties": false
                                  }
                                ],
                                "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                              }
                            },
                            "required": [
                              "expression"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "baseId": {
                                "type": "string",
                                "description": "the base id of the table that this field is linked to, only required for cross base link"
                              },
                              "relationship": {
                                "type": "string",
                                "enum": [
                                  "oneOne",
                                  "manyMany",
                                  "oneMany",
                                  "manyOne"
                                ],
                                "description": "describe the relationship from this table to the foreign table"
                              },
                              "foreignTableId": {
                                "type": "string",
                                "description": "the table this field is linked to"
                              },
                              "lookupFieldId": {
                                "type": "string",
                                "description": "the field in the foreign table that will be displayed as the current field"
                              },
                              "isOneWay": {
                                "type": "boolean",
                                "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                              },
                              "fkHostTableName": {
                                "type": "string",
                                "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                              },
                              "selfKeyName": {
                                "type": "string",
                                "description": "the name of the field that stores the current table primary key"
                              },
                              "foreignKeyName": {
                                "type": "string",
                                "description": "The name of the field that stores the foreign table primary key"
                              },
                              "symmetricFieldId": {
                                "type": "string",
                                "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                              },
                              "filterByViewId": {
                                "type": "string",
                                "nullable": true,
                                "description": "the view id that limits the number of records in the link field"
                              },
                              "visibleFieldIds": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                  "type": "string"
                                },
                                "description": "the fields that will be displayed in the link field"
                              },
                              "filter": {
                                "type": "object",
                                "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                              }
                            },
                            "required": [
                              "relationship",
                              "foreignTableId",
                              "lookupFieldId",
                              "fkHostTableName",
                              "selfKeyName",
                              "foreignKeyName"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "formatting": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "description": "the display formatting of the date."
                                  },
                                  "time": {
                                    "type": "string",
                                    "enum": [
                                      "HH:mm",
                                      "hh:mm A",
                                      "None"
                                    ],
                                    "description": "the display formatting of the time."
                                  },
                                  "timeZone": {
                                    "type": "string",
                                    "description": "The time zone that should be used to format dates"
                                  }
                                },
                                "required": [
                                  "date",
                                  "time",
                                  "timeZone"
                                ],
                                "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                              },
                              "defaultValue": {
                                "type": "string",
                                "enum": [
                                  "now"
                                ],
                                "description": "Whether the new row is automatically filled with the current time, caveat: the defaultValue is just a flag, it dose not effect the storing value of the record"
                              }
                            },
                            "required": [
                              "formatting"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "defaultValue": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "showAs": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "url",
                                      "email",
                                      "phone"
                                    ],
                                    "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                  }
                                },
                                "required": [
                                  "type"
                                ]
                              },
                              "defaultValue": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "icon": {
                                "type": "string",
                                "enum": [
                                  "star",
                                  "moon",
                                  "sun",
                                  "zap",
                                  "flame",
                                  "heart",
                                  "apple",
                                  "thumb-up"
                                ]
                              },
                              "color": {
                                "type": "string",
                                "enum": [
                                  "yellowBright",
                                  "redBright",
                                  "tealBright"
                                ]
                              },
                              "max": {
                                "type": "integer",
                                "maximum": 10,
                                "minimum": 1
                              }
                            },
                            "required": [
                              "icon",
                              "color",
                              "max"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "isMultiple": {
                                "type": "boolean",
                                "description": "Allow adding multiple users"
                              },
                              "shouldNotify": {
                                "type": "boolean",
                                "description": "Notify users when their name is added to a cell"
                              },
                              "defaultValue": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "me"
                                    ]
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "me"
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "baseId": {
                                "type": "string",
                                "description": "the base id of the table that this field is linked to, only required for cross base link"
                              },
                              "relationship": {
                                "type": "string",
                                "enum": [
                                  "oneOne",
                                  "manyMany",
                                  "oneMany",
                                  "manyOne"
                                ],
                                "description": "describe the relationship from this table to the foreign table"
                              },
                              "foreignTableId": {
                                "type": "string",
                                "description": "the table this field is linked to"
                              },
                              "lookupFieldId": {
                                "type": "string",
                                "description": "the field in the foreign table that will be displayed as the current field"
                              },
                              "isOneWay": {
                                "type": "boolean",
                                "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                              },
                              "fkHostTableName": {
                                "type": "string",
                                "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                              },
                              "selfKeyName": {
                                "type": "string",
                                "description": "the name of the field that stores the current table primary key"
                              },
                              "foreignKeyName": {
                                "type": "string",
                                "description": "The name of the field that stores the foreign table primary key"
                              },
                              "symmetricFieldId": {
                                "type": "string",
                                "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                              },
                              "filterByViewId": {
                                "type": "string",
                                "nullable": true,
                                "description": "the view id that limits the number of records in the link field"
                              },
                              "visibleFieldIds": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                  "type": "string"
                                },
                                "description": "the fields that will be displayed in the link field"
                              },
                              "filter": {
                                "type": "object",
                                "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                              }
                            },
                            "required": [
                              "relationship",
                              "foreignTableId",
                              "lookupFieldId",
                              "fkHostTableName",
                              "selfKeyName",
                              "foreignKeyName"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "choices": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "color"
                                  ]
                                }
                              },
                              "defaultValue": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                ]
                              },
                              "preventAutoNewOptions": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "choices"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "formatting": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "precision": {
                                        "type": "number",
                                        "maximum": 5,
                                        "minimum": 0
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "decimal"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "precision",
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "precision": {
                                        "type": "number",
                                        "maximum": 5,
                                        "minimum": 0
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "percent"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "precision",
                                      "type"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "precision": {
                                        "type": "number",
                                        "maximum": 5,
                                        "minimum": 0
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "currency"
                                        ]
                                      },
                                      "symbol": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "precision",
                                      "type",
                                      "symbol"
                                    ]
                                  }
                                ]
                              },
                              "showAs": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "bar",
                                          "ring"
                                        ],
                                        "description": "can display as bar or ring in number field with single cellValue value"
                                      },
                                      "color": {
                                        "type": "string",
                                        "enum": [
                                          "blueLight2",
                                          "blueLight1",
                                          "blueBright",
                                          "blue",
                                          "blueDark1",
                                          "cyanLight2",
                                          "cyanLight1",
                                          "cyanBright",
                                          "cyan",
                                          "cyanDark1",
                                          "grayLight2",
                                          "grayLight1",
                                          "grayBright",
                                          "gray",
                                          "grayDark1",
                                          "greenLight2",
                                          "greenLight1",
                                          "greenBright",
                                          "green",
                                          "greenDark1",
                                          "orangeLight2",
                                          "orangeLight1",
                                          "orangeBright",
                                          "orange",
                                          "orangeDark1",
                                          "pinkLight2",
                                          "pinkLight1",
                                          "pinkBright",
                                          "pink",
                                          "pinkDark1",
                                          "purpleLight2",
                                          "purpleLight1",
                                          "purpleBright",
                                          "purple",
                                          "purpleDark1",
                                          "redLight2",
                                          "redLight1",
                                          "redBright",
                                          "red",
                                          "redDark1",
                                          "tealLight2",
                                          "tealLight1",
                                          "tealBright",
                                          "teal",
                                          "tealDark1",
                                          "yellowLight2",
                                          "yellowLight1",
                                          "yellowBright",
                                          "yellow",
                                          "yellowDark1"
                                        ]
                                      },
                                      "showValue": {
                                        "type": "boolean",
                                        "description": "whether to displays the specific value on the graph"
                                      },
                                      "maxValue": {
                                        "type": "number",
                                        "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "color",
                                      "showValue",
                                      "maxValue"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "bar",
                                          "line"
                                        ],
                                        "description": "can display as bar or line in number field with multiple cellValue value"
                                      },
                                      "color": {
                                        "type": "string",
                                        "enum": [
                                          "blueLight2",
                                          "blueLight1",
                                          "blueBright",
                                          "blue",
                                          "blueDark1",
                                          "cyanLight2",
                                          "cyanLight1",
                                          "cyanBright",
                                          "cyan",
                                          "cyanDark1",
                                          "grayLight2",
                                          "grayLight1",
                                          "grayBright",
                                          "gray",
                                          "grayDark1",
                                          "greenLight2",
                                          "greenLight1",
                                          "greenBright",
                                          "green",
                                          "greenDark1",
                                          "orangeLight2",
                                          "orangeLight1",
                                          "orangeBright",
                                          "orange",
                                          "orangeDark1",
                                          "pinkLight2",
                                          "pinkLight1",
                                          "pinkBright",
                                          "pink",
                                          "pinkDark1",
                                          "purpleLight2",
                                          "purpleLight1",
                                          "purpleBright",
                                          "purple",
                                          "purpleDark1",
                                          "redLight2",
                                          "redLight1",
                                          "redBright",
                                          "red",
                                          "redDark1",
                                          "tealLight2",
                                          "tealLight1",
                                          "tealBright",
                                          "teal",
                                          "tealDark1",
                                          "yellowLight2",
                                          "yellowLight1",
                                          "yellowBright",
                                          "yellow",
                                          "yellowDark1"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "color"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              },
                              "defaultValue": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "formatting"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "expression": {
                                "type": "string",
                                "enum": [
                                  "AUTO_NUMBER()"
                                ]
                              }
                            },
                            "required": [
                              "expression"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "expression": {
                                "type": "string",
                                "enum": [
                                  "CREATED_TIME()"
                                ]
                              },
                              "formatting": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "description": "the display formatting of the date."
                                  },
                                  "time": {
                                    "type": "string",
                                    "enum": [
                                      "HH:mm",
                                      "hh:mm A",
                                      "None"
                                    ],
                                    "description": "the display formatting of the time."
                                  },
                                  "timeZone": {
                                    "type": "string",
                                    "description": "The time zone that should be used to format dates"
                                  }
                                },
                                "required": [
                                  "date",
                                  "time",
                                  "timeZone"
                                ],
                                "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                              }
                            },
                            "required": [
                              "expression",
                              "formatting"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "expression": {
                                "type": "string",
                                "enum": [
                                  "LAST_MODIFIED_TIME()"
                                ]
                              },
                              "formatting": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "description": "the display formatting of the date."
                                  },
                                  "time": {
                                    "type": "string",
                                    "enum": [
                                      "HH:mm",
                                      "hh:mm A",
                                      "None"
                                    ],
                                    "description": "the display formatting of the time."
                                  },
                                  "timeZone": {
                                    "type": "string",
                                    "description": "The time zone that should be used to format dates"
                                  }
                                },
                                "required": [
                                  "date",
                                  "time",
                                  "timeZone"
                                ],
                                "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                              }
                            },
                            "required": [
                              "expression",
                              "formatting"
                            ],
                            "additionalProperties": false
                          }
                        ],
                        "description": "The configuration options of the field. The structure of the field's options depend on the field's type."
                      },
                      "isLookup": {
                        "type": "boolean",
                        "description": "Whether this field is lookup field. witch means cellValue and [fieldType] is looked up from the linked table."
                      },
                      "lookupOptions": {
                        "type": "object",
                        "properties": {
                          "foreignTableId": {
                            "type": "string",
                            "description": "the table this field is linked to"
                          },
                          "lookupFieldId": {
                            "type": "string",
                            "description": "the field in the foreign table that will be displayed as the current field"
                          },
                          "relationship": {
                            "type": "string",
                            "enum": [
                              "oneOne",
                              "manyMany",
                              "oneMany",
                              "manyOne"
                            ],
                            "description": "describe the relationship from this table to the foreign table"
                          },
                          "fkHostTableName": {
                            "type": "string",
                            "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                          },
                          "selfKeyName": {
                            "type": "string",
                            "description": "the name of the field that stores the current table primary key"
                          },
                          "foreignKeyName": {
                            "type": "string",
                            "description": "The name of the field that stores the foreign table primary key"
                          },
                          "filter": {
                            "type": "object",
                            "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                          },
                          "linkFieldId": {
                            "type": "string",
                            "description": "The id of Linked record field to use for lookup"
                          }
                        },
                        "required": [
                          "foreignTableId",
                          "lookupFieldId",
                          "relationship",
                          "fkHostTableName",
                          "selfKeyName",
                          "foreignKeyName",
                          "linkFieldId"
                        ],
                        "description": "field lookup options."
                      },
                      "notNull": {
                        "type": "boolean",
                        "description": "Whether this field is not null."
                      },
                      "unique": {
                        "type": "boolean",
                        "description": "Whether this field is not unique."
                      },
                      "isPrimary": {
                        "type": "boolean",
                        "description": "Whether this field is primary field."
                      },
                      "isComputed": {
                        "type": "boolean",
                        "description": "Whether this field is computed field, you can not modify cellValue in computed field."
                      },
                      "isPending": {
                        "type": "boolean",
                        "description": "Whether this field's calculation is pending."
                      },
                      "hasError": {
                        "type": "boolean",
                        "description": "Whether This field has a configuration error. Check the fields referenced by this field's formula or configuration."
                      },
                      "cellValueType": {
                        "type": "string",
                        "enum": [
                          "string",
                          "number",
                          "boolean",
                          "dateTime"
                        ],
                        "description": "The cell value type of the field."
                      },
                      "isMultipleCellValue": {
                        "type": "boolean",
                        "description": "Whether this field has multiple cell value."
                      },
                      "dbFieldType": {
                        "type": "string",
                        "enum": [
                          "TEXT",
                          "INTEGER",
                          "DATETIME",
                          "REAL",
                          "BLOB",
                          "JSON",
                          "BOOLEAN"
                        ],
                        "description": "The field type of database that cellValue really store."
                      },
                      "dbFieldName": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^\\w{0,63}$",
                        "description": "Field(column) name in backend database. Limitation: 1-63 characters, can only contain letters, numbers and underscore, case sensitive, cannot be duplicated with existing db field name in the table."
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "options",
                      "cellValueType",
                      "dbFieldType",
                      "dbFieldName"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "getListFields"
      }
    },
    "/table/{tableId}/field/{fieldId}": {
      "delete": {
        "summary": "Delete field",
        "description": "Permanently remove a field from the specified table",
        "tags": [
          "field"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "fieldId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          }
        },
        "operationId": "deleteDeleteField"
      },
      "get": {
        "summary": "Get a field",
        "description": "Retrieve detailed information about a specific field by its ID",
        "tags": [
          "field"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "fieldId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns data about a field.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The id of the field."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the field. can not be duplicated in the table.",
                      "example": "Tags"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "singleLineText",
                        "longText",
                        "user",
                        "attachment",
                        "checkbox",
                        "multipleSelect",
                        "singleSelect",
                        "date",
                        "number",
                        "duration",
                        "rating",
                        "formula",
                        "rollup",
                        "count",
                        "link",
                        "createdTime",
                        "lastModifiedTime",
                        "createdBy",
                        "lastModifiedBy",
                        "autoNumber",
                        "button"
                      ],
                      "description": "The field types supported by teable.",
                      "example": "singleSelect"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the field.",
                      "example": "this is a summary"
                    },
                    "options": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "countall({values})",
                                "counta({values})",
                                "count({values})",
                                "sum({values})",
                                "max({values})",
                                "min({values})",
                                "and({values})",
                                "or({values})",
                                "xor({values})",
                                "array_join({values})",
                                "array_unique({values})",
                                "array_compact({values})",
                                "concatenate({values})"
                              ]
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "The time zone that should be used to format dates"
                            },
                            "formatting": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "date": {
                                      "type": "string",
                                      "description": "the display formatting of the date."
                                    },
                                    "time": {
                                      "type": "string",
                                      "enum": [
                                        "HH:mm",
                                        "hh:mm A",
                                        "None"
                                      ],
                                      "description": "the display formatting of the time."
                                    },
                                    "timeZone": {
                                      "type": "string",
                                      "description": "The time zone that should be used to format dates"
                                    }
                                  },
                                  "required": [
                                    "date",
                                    "time",
                                    "timeZone"
                                  ],
                                  "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "decimal"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "percent"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "currency"
                                      ]
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type",
                                    "symbol"
                                  ]
                                }
                              ],
                              "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                            },
                            "showAs": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "url",
                                        "email",
                                        "phone"
                                      ],
                                      "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "ring"
                                      ],
                                      "description": "can display as bar or ring in number field with single cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    },
                                    "showValue": {
                                      "type": "boolean",
                                      "description": "whether to displays the specific value on the graph"
                                    },
                                    "maxValue": {
                                      "type": "number",
                                      "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color",
                                    "showValue",
                                    "maxValue"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "line"
                                      ],
                                      "description": "can display as bar or line in number field with multiple cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                            }
                          },
                          "required": [
                            "expression"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "description": "The formula including fields referenced by their IDs. For example, LEFT(4, {Birthday}) input will be returned as LEFT(4, {fldXXX}) via API."
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "The time zone that should be used to format dates"
                            },
                            "formatting": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "date": {
                                      "type": "string",
                                      "description": "the display formatting of the date."
                                    },
                                    "time": {
                                      "type": "string",
                                      "enum": [
                                        "HH:mm",
                                        "hh:mm A",
                                        "None"
                                      ],
                                      "description": "the display formatting of the time."
                                    },
                                    "timeZone": {
                                      "type": "string",
                                      "description": "The time zone that should be used to format dates"
                                    }
                                  },
                                  "required": [
                                    "date",
                                    "time",
                                    "timeZone"
                                  ],
                                  "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "decimal"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "percent"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "currency"
                                      ]
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type",
                                    "symbol"
                                  ]
                                }
                              ],
                              "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                            },
                            "showAs": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "url",
                                        "email",
                                        "phone"
                                      ],
                                      "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "ring"
                                      ],
                                      "description": "can display as bar or ring in number field with single cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    },
                                    "showValue": {
                                      "type": "boolean",
                                      "description": "whether to displays the specific value on the graph"
                                    },
                                    "maxValue": {
                                      "type": "number",
                                      "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color",
                                    "showValue",
                                    "maxValue"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "line"
                                      ],
                                      "description": "can display as bar or line in number field with multiple cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                            }
                          },
                          "required": [
                            "expression"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "baseId": {
                              "type": "string",
                              "description": "the base id of the table that this field is linked to, only required for cross base link"
                            },
                            "relationship": {
                              "type": "string",
                              "enum": [
                                "oneOne",
                                "manyMany",
                                "oneMany",
                                "manyOne"
                              ],
                              "description": "describe the relationship from this table to the foreign table"
                            },
                            "foreignTableId": {
                              "type": "string",
                              "description": "the table this field is linked to"
                            },
                            "lookupFieldId": {
                              "type": "string",
                              "description": "the field in the foreign table that will be displayed as the current field"
                            },
                            "isOneWay": {
                              "type": "boolean",
                              "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                            },
                            "fkHostTableName": {
                              "type": "string",
                              "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                            },
                            "selfKeyName": {
                              "type": "string",
                              "description": "the name of the field that stores the current table primary key"
                            },
                            "foreignKeyName": {
                              "type": "string",
                              "description": "The name of the field that stores the foreign table primary key"
                            },
                            "symmetricFieldId": {
                              "type": "string",
                              "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                            },
                            "filterByViewId": {
                              "type": "string",
                              "nullable": true,
                              "description": "the view id that limits the number of records in the link field"
                            },
                            "visibleFieldIds": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "the fields that will be displayed in the link field"
                            },
                            "filter": {
                              "type": "object",
                              "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                            }
                          },
                          "required": [
                            "relationship",
                            "foreignTableId",
                            "lookupFieldId",
                            "fkHostTableName",
                            "selfKeyName",
                            "foreignKeyName"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "formatting": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "description": "the display formatting of the date."
                                },
                                "time": {
                                  "type": "string",
                                  "enum": [
                                    "HH:mm",
                                    "hh:mm A",
                                    "None"
                                  ],
                                  "description": "the display formatting of the time."
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone that should be used to format dates"
                                }
                              },
                              "required": [
                                "date",
                                "time",
                                "timeZone"
                              ],
                              "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                            },
                            "defaultValue": {
                              "type": "string",
                              "enum": [
                                "now"
                              ],
                              "description": "Whether the new row is automatically filled with the current time, caveat: the defaultValue is just a flag, it dose not effect the storing value of the record"
                            }
                          },
                          "required": [
                            "formatting"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "defaultValue": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "showAs": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "url",
                                    "email",
                                    "phone"
                                  ],
                                  "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                }
                              },
                              "required": [
                                "type"
                              ]
                            },
                            "defaultValue": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "icon": {
                              "type": "string",
                              "enum": [
                                "star",
                                "moon",
                                "sun",
                                "zap",
                                "flame",
                                "heart",
                                "apple",
                                "thumb-up"
                              ]
                            },
                            "color": {
                              "type": "string",
                              "enum": [
                                "yellowBright",
                                "redBright",
                                "tealBright"
                              ]
                            },
                            "max": {
                              "type": "integer",
                              "maximum": 10,
                              "minimum": 1
                            }
                          },
                          "required": [
                            "icon",
                            "color",
                            "max"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "isMultiple": {
                              "type": "boolean",
                              "description": "Allow adding multiple users"
                            },
                            "shouldNotify": {
                              "type": "boolean",
                              "description": "Notify users when their name is added to a cell"
                            },
                            "defaultValue": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "me"
                                  ]
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "me"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "baseId": {
                              "type": "string",
                              "description": "the base id of the table that this field is linked to, only required for cross base link"
                            },
                            "relationship": {
                              "type": "string",
                              "enum": [
                                "oneOne",
                                "manyMany",
                                "oneMany",
                                "manyOne"
                              ],
                              "description": "describe the relationship from this table to the foreign table"
                            },
                            "foreignTableId": {
                              "type": "string",
                              "description": "the table this field is linked to"
                            },
                            "lookupFieldId": {
                              "type": "string",
                              "description": "the field in the foreign table that will be displayed as the current field"
                            },
                            "isOneWay": {
                              "type": "boolean",
                              "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                            },
                            "fkHostTableName": {
                              "type": "string",
                              "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                            },
                            "selfKeyName": {
                              "type": "string",
                              "description": "the name of the field that stores the current table primary key"
                            },
                            "foreignKeyName": {
                              "type": "string",
                              "description": "The name of the field that stores the foreign table primary key"
                            },
                            "symmetricFieldId": {
                              "type": "string",
                              "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                            },
                            "filterByViewId": {
                              "type": "string",
                              "nullable": true,
                              "description": "the view id that limits the number of records in the link field"
                            },
                            "visibleFieldIds": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "the fields that will be displayed in the link field"
                            },
                            "filter": {
                              "type": "object",
                              "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                            }
                          },
                          "required": [
                            "relationship",
                            "foreignTableId",
                            "lookupFieldId",
                            "fkHostTableName",
                            "selfKeyName",
                            "foreignKeyName"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "choices": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "color"
                                ]
                              }
                            },
                            "defaultValue": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ]
                            },
                            "preventAutoNewOptions": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "choices"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "formatting": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "decimal"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "percent"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "currency"
                                      ]
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type",
                                    "symbol"
                                  ]
                                }
                              ]
                            },
                            "showAs": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "ring"
                                      ],
                                      "description": "can display as bar or ring in number field with single cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    },
                                    "showValue": {
                                      "type": "boolean",
                                      "description": "whether to displays the specific value on the graph"
                                    },
                                    "maxValue": {
                                      "type": "number",
                                      "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color",
                                    "showValue",
                                    "maxValue"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "line"
                                      ],
                                      "description": "can display as bar or line in number field with multiple cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "defaultValue": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "formatting"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "AUTO_NUMBER()"
                              ]
                            }
                          },
                          "required": [
                            "expression"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "CREATED_TIME()"
                              ]
                            },
                            "formatting": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "description": "the display formatting of the date."
                                },
                                "time": {
                                  "type": "string",
                                  "enum": [
                                    "HH:mm",
                                    "hh:mm A",
                                    "None"
                                  ],
                                  "description": "the display formatting of the time."
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone that should be used to format dates"
                                }
                              },
                              "required": [
                                "date",
                                "time",
                                "timeZone"
                              ],
                              "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                            }
                          },
                          "required": [
                            "expression",
                            "formatting"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "LAST_MODIFIED_TIME()"
                              ]
                            },
                            "formatting": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "description": "the display formatting of the date."
                                },
                                "time": {
                                  "type": "string",
                                  "enum": [
                                    "HH:mm",
                                    "hh:mm A",
                                    "None"
                                  ],
                                  "description": "the display formatting of the time."
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone that should be used to format dates"
                                }
                              },
                              "required": [
                                "date",
                                "time",
                                "timeZone"
                              ],
                              "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                            }
                          },
                          "required": [
                            "expression",
                            "formatting"
                          ],
                          "additionalProperties": false
                        }
                      ],
                      "description": "The configuration options of the field. The structure of the field's options depend on the field's type."
                    },
                    "isLookup": {
                      "type": "boolean",
                      "description": "Whether this field is lookup field. witch means cellValue and [fieldType] is looked up from the linked table."
                    },
                    "lookupOptions": {
                      "type": "object",
                      "properties": {
                        "foreignTableId": {
                          "type": "string",
                          "description": "the table this field is linked to"
                        },
                        "lookupFieldId": {
                          "type": "string",
                          "description": "the field in the foreign table that will be displayed as the current field"
                        },
                        "relationship": {
                          "type": "string",
                          "enum": [
                            "oneOne",
                            "manyMany",
                            "oneMany",
                            "manyOne"
                          ],
                          "description": "describe the relationship from this table to the foreign table"
                        },
                        "fkHostTableName": {
                          "type": "string",
                          "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                        },
                        "selfKeyName": {
                          "type": "string",
                          "description": "the name of the field that stores the current table primary key"
                        },
                        "foreignKeyName": {
                          "type": "string",
                          "description": "The name of the field that stores the foreign table primary key"
                        },
                        "filter": {
                          "type": "object",
                          "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                        },
                        "linkFieldId": {
                          "type": "string",
                          "description": "The id of Linked record field to use for lookup"
                        }
                      },
                      "required": [
                        "foreignTableId",
                        "lookupFieldId",
                        "relationship",
                        "fkHostTableName",
                        "selfKeyName",
                        "foreignKeyName",
                        "linkFieldId"
                      ],
                      "description": "field lookup options."
                    },
                    "notNull": {
                      "type": "boolean",
                      "description": "Whether this field is not null."
                    },
                    "unique": {
                      "type": "boolean",
                      "description": "Whether this field is not unique."
                    },
                    "isPrimary": {
                      "type": "boolean",
                      "description": "Whether this field is primary field."
                    },
                    "isComputed": {
                      "type": "boolean",
                      "description": "Whether this field is computed field, you can not modify cellValue in computed field."
                    },
                    "isPending": {
                      "type": "boolean",
                      "description": "Whether this field's calculation is pending."
                    },
                    "hasError": {
                      "type": "boolean",
                      "description": "Whether This field has a configuration error. Check the fields referenced by this field's formula or configuration."
                    },
                    "cellValueType": {
                      "type": "string",
                      "enum": [
                        "string",
                        "number",
                        "boolean",
                        "dateTime"
                      ],
                      "description": "The cell value type of the field."
                    },
                    "isMultipleCellValue": {
                      "type": "boolean",
                      "description": "Whether this field has multiple cell value."
                    },
                    "dbFieldType": {
                      "type": "string",
                      "enum": [
                        "TEXT",
                        "INTEGER",
                        "DATETIME",
                        "REAL",
                        "BLOB",
                        "JSON",
                        "BOOLEAN"
                      ],
                      "description": "The field type of database that cellValue really store."
                    },
                    "dbFieldName": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^\\w{0,63}$",
                      "description": "Field(column) name in backend database. Limitation: 1-63 characters, can only contain letters, numbers and underscore, case sensitive, cannot be duplicated with existing db field name in the table."
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "options",
                    "cellValueType",
                    "dbFieldType",
                    "dbFieldName"
                  ]
                }
              }
            }
          }
        },
        "operationId": "getGetAField"
      },
      "patch": {
        "summary": "Update field",
        "description": "Update common properties of a field (name, description, dbFieldName). For other property changes, use the convert field API",
        "tags": [
          "field"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "fieldId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The name of the field. can not be duplicated in the table.",
                    "example": "Tags"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "description": "The description of the field.",
                    "example": "this is a summary"
                  },
                  "dbFieldName": {
                    "type": "string",
                    "minLength": 1,
                    "pattern": "^\\w{0,63}$",
                    "description": "Field(column) name in backend database. Limitation: 1-63 characters, can only contain letters, numbers and underscore, case sensitive, cannot be duplicated with existing db field name in the table."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Successfully"
          }
        },
        "operationId": "modifyUpdateField"
      }
    },
    "/table/{tableId}/field/{fieldId}/convert": {
      "put": {
        "summary": "Convert field type",
        "description": "Convert field to a different type with automatic type casting and symmetric field handling",
        "tags": [
          "field"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "fieldId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "singleLineText",
                      "longText",
                      "user",
                      "attachment",
                      "checkbox",
                      "multipleSelect",
                      "singleSelect",
                      "date",
                      "number",
                      "duration",
                      "rating",
                      "formula",
                      "rollup",
                      "count",
                      "link",
                      "createdTime",
                      "lastModifiedTime",
                      "createdBy",
                      "lastModifiedBy",
                      "autoNumber",
                      "button"
                    ],
                    "description": "The field types supported by teable.",
                    "example": "singleSelect"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The name of the field. can not be duplicated in the table.",
                    "example": "Tags"
                  },
                  "unique": {
                    "type": "boolean",
                    "description": "Whether this field is not unique."
                  },
                  "notNull": {
                    "type": "boolean",
                    "description": "Whether this field is not null."
                  },
                  "dbFieldName": {
                    "type": "string",
                    "minLength": 1,
                    "pattern": "^\\w{0,63}$",
                    "description": "Field(column) name in backend database. Limitation: 1-63 characters, can only contain letters, numbers and underscore, case sensitive, cannot be duplicated with existing db field name in the table."
                  },
                  "isLookup": {
                    "type": "boolean",
                    "description": "Whether this field is lookup field. witch means cellValue and [fieldType] is looked up from the linked table."
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "description": "The description of the field.",
                    "example": "this is a summary"
                  },
                  "lookupOptions": {
                    "type": "object",
                    "properties": {
                      "foreignTableId": {
                        "type": "string",
                        "description": "the table this field is linked to"
                      },
                      "lookupFieldId": {
                        "type": "string",
                        "description": "the field in the foreign table that will be displayed as the current field"
                      },
                      "linkFieldId": {
                        "type": "string",
                        "description": "The id of Linked record field to use for lookup"
                      },
                      "filter": {
                        "type": "object",
                        "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                      }
                    },
                    "required": [
                      "foreignTableId",
                      "lookupFieldId",
                      "linkFieldId"
                    ],
                    "description": "The lookup options for field, you need to configure it when isLookup attribute is true or field type is rollup."
                  },
                  "options": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "type": "string",
                            "enum": [
                              "countall({values})",
                              "counta({values})",
                              "count({values})",
                              "sum({values})",
                              "max({values})",
                              "min({values})",
                              "and({values})",
                              "or({values})",
                              "xor({values})",
                              "array_join({values})",
                              "array_unique({values})",
                              "array_compact({values})",
                              "concatenate({values})"
                            ]
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "The time zone that should be used to format dates"
                          },
                          "formatting": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "description": "the display formatting of the date."
                                  },
                                  "time": {
                                    "type": "string",
                                    "enum": [
                                      "HH:mm",
                                      "hh:mm A",
                                      "None"
                                    ],
                                    "description": "the display formatting of the time."
                                  },
                                  "timeZone": {
                                    "type": "string",
                                    "description": "The time zone that should be used to format dates"
                                  }
                                },
                                "required": [
                                  "date",
                                  "time",
                                  "timeZone"
                                ],
                                "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "decimal"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "percent"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "currency"
                                    ]
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type",
                                  "symbol"
                                ]
                              }
                            ],
                            "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                          },
                          "showAs": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "url",
                                      "email",
                                      "phone"
                                    ],
                                    "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "ring"
                                    ],
                                    "description": "can display as bar or ring in number field with single cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  },
                                  "showValue": {
                                    "type": "boolean",
                                    "description": "whether to displays the specific value on the graph"
                                  },
                                  "maxValue": {
                                    "type": "number",
                                    "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                  }
                                },
                                "required": [
                                  "type",
                                  "color",
                                  "showValue",
                                  "maxValue"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "line"
                                    ],
                                    "description": "can display as bar or line in number field with multiple cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "color"
                                ],
                                "additionalProperties": false
                              }
                            ],
                            "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                          }
                        },
                        "required": [
                          "expression"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "type": "string",
                            "description": "The formula including fields referenced by their IDs. For example, LEFT(4, {Birthday}) input will be returned as LEFT(4, {fldXXX}) via API."
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "The time zone that should be used to format dates"
                          },
                          "formatting": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "description": "the display formatting of the date."
                                  },
                                  "time": {
                                    "type": "string",
                                    "enum": [
                                      "HH:mm",
                                      "hh:mm A",
                                      "None"
                                    ],
                                    "description": "the display formatting of the time."
                                  },
                                  "timeZone": {
                                    "type": "string",
                                    "description": "The time zone that should be used to format dates"
                                  }
                                },
                                "required": [
                                  "date",
                                  "time",
                                  "timeZone"
                                ],
                                "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "decimal"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "percent"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "currency"
                                    ]
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type",
                                  "symbol"
                                ]
                              }
                            ],
                            "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                          },
                          "showAs": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "url",
                                      "email",
                                      "phone"
                                    ],
                                    "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "ring"
                                    ],
                                    "description": "can display as bar or ring in number field with single cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  },
                                  "showValue": {
                                    "type": "boolean",
                                    "description": "whether to displays the specific value on the graph"
                                  },
                                  "maxValue": {
                                    "type": "number",
                                    "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                  }
                                },
                                "required": [
                                  "type",
                                  "color",
                                  "showValue",
                                  "maxValue"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "line"
                                    ],
                                    "description": "can display as bar or line in number field with multiple cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "color"
                                ],
                                "additionalProperties": false
                              }
                            ],
                            "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                          }
                        },
                        "required": [
                          "expression"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "baseId": {
                            "type": "string",
                            "description": "the base id of the table that this field is linked to, only required for cross base link"
                          },
                          "relationship": {
                            "type": "string",
                            "enum": [
                              "oneOne",
                              "manyMany",
                              "oneMany",
                              "manyOne"
                            ],
                            "description": "describe the relationship from this table to the foreign table"
                          },
                          "foreignTableId": {
                            "type": "string",
                            "description": "the table this field is linked to"
                          },
                          "lookupFieldId": {
                            "type": "string",
                            "description": "the field in the foreign table that will be displayed as the current field"
                          },
                          "isOneWay": {
                            "type": "boolean",
                            "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                          },
                          "fkHostTableName": {
                            "type": "string",
                            "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                          },
                          "selfKeyName": {
                            "type": "string",
                            "description": "the name of the field that stores the current table primary key"
                          },
                          "foreignKeyName": {
                            "type": "string",
                            "description": "The name of the field that stores the foreign table primary key"
                          },
                          "symmetricFieldId": {
                            "type": "string",
                            "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                          },
                          "filterByViewId": {
                            "type": "string",
                            "nullable": true,
                            "description": "the view id that limits the number of records in the link field"
                          },
                          "visibleFieldIds": {
                            "type": "array",
                            "nullable": true,
                            "items": {
                              "type": "string"
                            },
                            "description": "the fields that will be displayed in the link field"
                          },
                          "filter": {
                            "type": "object",
                            "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                          }
                        },
                        "required": [
                          "relationship",
                          "foreignTableId",
                          "lookupFieldId",
                          "fkHostTableName",
                          "selfKeyName",
                          "foreignKeyName"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "formatting": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "description": "the display formatting of the date."
                              },
                              "time": {
                                "type": "string",
                                "enum": [
                                  "HH:mm",
                                  "hh:mm A",
                                  "None"
                                ],
                                "description": "the display formatting of the time."
                              },
                              "timeZone": {
                                "type": "string",
                                "description": "The time zone that should be used to format dates"
                              }
                            },
                            "required": [
                              "date",
                              "time",
                              "timeZone"
                            ],
                            "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                          },
                          "defaultValue": {
                            "type": "string",
                            "enum": [
                              "now"
                            ],
                            "description": "Whether the new row is automatically filled with the current time, caveat: the defaultValue is just a flag, it dose not effect the storing value of the record"
                          }
                        },
                        "required": [
                          "formatting"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "defaultValue": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "showAs": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "url",
                                  "email",
                                  "phone"
                                ],
                                "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "defaultValue": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "icon": {
                            "type": "string",
                            "enum": [
                              "star",
                              "moon",
                              "sun",
                              "zap",
                              "flame",
                              "heart",
                              "apple",
                              "thumb-up"
                            ]
                          },
                          "color": {
                            "type": "string",
                            "enum": [
                              "yellowBright",
                              "redBright",
                              "tealBright"
                            ]
                          },
                          "max": {
                            "type": "integer",
                            "maximum": 10,
                            "minimum": 1
                          }
                        },
                        "required": [
                          "icon",
                          "color",
                          "max"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "isMultiple": {
                            "type": "boolean",
                            "description": "Allow adding multiple users"
                          },
                          "shouldNotify": {
                            "type": "boolean",
                            "description": "Notify users when their name is added to a cell"
                          },
                          "defaultValue": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "me"
                                ]
                              },
                              {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "enum": [
                                        "me"
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "baseId": {
                            "type": "string",
                            "description": "the base id of the table that this field is linked to, only required for cross base link"
                          },
                          "relationship": {
                            "type": "string",
                            "enum": [
                              "oneOne",
                              "manyMany",
                              "oneMany",
                              "manyOne"
                            ],
                            "description": "describe the relationship from this table to the foreign table"
                          },
                          "foreignTableId": {
                            "type": "string",
                            "description": "the table this field is linked to"
                          },
                          "isOneWay": {
                            "type": "boolean",
                            "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                          },
                          "filterByViewId": {
                            "type": "string",
                            "nullable": true,
                            "description": "the view id that limits the number of records in the link field"
                          },
                          "visibleFieldIds": {
                            "type": "array",
                            "nullable": true,
                            "items": {
                              "type": "string"
                            },
                            "description": "the fields that will be displayed in the link field"
                          },
                          "filter": {
                            "type": "object",
                            "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                          }
                        },
                        "required": [
                          "relationship",
                          "foreignTableId"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "choices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "color": {
                                  "type": "string",
                                  "enum": [
                                    "blueLight2",
                                    "blueLight1",
                                    "blueBright",
                                    "blue",
                                    "blueDark1",
                                    "cyanLight2",
                                    "cyanLight1",
                                    "cyanBright",
                                    "cyan",
                                    "cyanDark1",
                                    "grayLight2",
                                    "grayLight1",
                                    "grayBright",
                                    "gray",
                                    "grayDark1",
                                    "greenLight2",
                                    "greenLight1",
                                    "greenBright",
                                    "green",
                                    "greenDark1",
                                    "orangeLight2",
                                    "orangeLight1",
                                    "orangeBright",
                                    "orange",
                                    "orangeDark1",
                                    "pinkLight2",
                                    "pinkLight1",
                                    "pinkBright",
                                    "pink",
                                    "pinkDark1",
                                    "purpleLight2",
                                    "purpleLight1",
                                    "purpleBright",
                                    "purple",
                                    "purpleDark1",
                                    "redLight2",
                                    "redLight1",
                                    "redBright",
                                    "red",
                                    "redDark1",
                                    "tealLight2",
                                    "tealLight1",
                                    "tealBright",
                                    "teal",
                                    "tealDark1",
                                    "yellowLight2",
                                    "yellowLight1",
                                    "yellowBright",
                                    "yellow",
                                    "yellowDark1"
                                  ]
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          },
                          "defaultValue": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            ]
                          },
                          "preventAutoNewOptions": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "choices"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "formatting": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "decimal"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "percent"
                                    ]
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "precision": {
                                    "type": "number",
                                    "maximum": 5,
                                    "minimum": 0
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "currency"
                                    ]
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "precision",
                                  "type",
                                  "symbol"
                                ]
                              }
                            ]
                          },
                          "showAs": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "ring"
                                    ],
                                    "description": "can display as bar or ring in number field with single cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  },
                                  "showValue": {
                                    "type": "boolean",
                                    "description": "whether to displays the specific value on the graph"
                                  },
                                  "maxValue": {
                                    "type": "number",
                                    "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                  }
                                },
                                "required": [
                                  "type",
                                  "color",
                                  "showValue",
                                  "maxValue"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "bar",
                                      "line"
                                    ],
                                    "description": "can display as bar or line in number field with multiple cellValue value"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "color"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          },
                          "defaultValue": {
                            "type": "number"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "formatting": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "description": "the display formatting of the date."
                              },
                              "time": {
                                "type": "string",
                                "enum": [
                                  "HH:mm",
                                  "hh:mm A",
                                  "None"
                                ],
                                "description": "the display formatting of the time."
                              },
                              "timeZone": {
                                "type": "string",
                                "description": "The time zone that should be used to format dates"
                              }
                            },
                            "required": [
                              "date",
                              "time",
                              "timeZone"
                            ],
                            "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                          }
                        },
                        "required": [
                          "formatting"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "formatting": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "description": "the display formatting of the date."
                              },
                              "time": {
                                "type": "string",
                                "enum": [
                                  "HH:mm",
                                  "hh:mm A",
                                  "None"
                                ],
                                "description": "the display formatting of the time."
                              },
                              "timeZone": {
                                "type": "string",
                                "description": "The time zone that should be used to format dates"
                              }
                            },
                            "required": [
                              "date",
                              "time",
                              "timeZone"
                            ],
                            "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                          }
                        },
                        "required": [
                          "formatting"
                        ],
                        "additionalProperties": false
                      }
                    ],
                    "description": "The options of the field. The configuration of the field's options depend on the it's specific type."
                  }
                },
                "required": [
                  "type"
                ],
                "description": "Provide the complete field configuration including all properties, modified or not"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns field data after update.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The id of the field."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the field. can not be duplicated in the table.",
                      "example": "Tags"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "singleLineText",
                        "longText",
                        "user",
                        "attachment",
                        "checkbox",
                        "multipleSelect",
                        "singleSelect",
                        "date",
                        "number",
                        "duration",
                        "rating",
                        "formula",
                        "rollup",
                        "count",
                        "link",
                        "createdTime",
                        "lastModifiedTime",
                        "createdBy",
                        "lastModifiedBy",
                        "autoNumber",
                        "button"
                      ],
                      "description": "The field types supported by teable.",
                      "example": "singleSelect"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the field.",
                      "example": "this is a summary"
                    },
                    "options": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "countall({values})",
                                "counta({values})",
                                "count({values})",
                                "sum({values})",
                                "max({values})",
                                "min({values})",
                                "and({values})",
                                "or({values})",
                                "xor({values})",
                                "array_join({values})",
                                "array_unique({values})",
                                "array_compact({values})",
                                "concatenate({values})"
                              ]
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "The time zone that should be used to format dates"
                            },
                            "formatting": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "date": {
                                      "type": "string",
                                      "description": "the display formatting of the date."
                                    },
                                    "time": {
                                      "type": "string",
                                      "enum": [
                                        "HH:mm",
                                        "hh:mm A",
                                        "None"
                                      ],
                                      "description": "the display formatting of the time."
                                    },
                                    "timeZone": {
                                      "type": "string",
                                      "description": "The time zone that should be used to format dates"
                                    }
                                  },
                                  "required": [
                                    "date",
                                    "time",
                                    "timeZone"
                                  ],
                                  "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "decimal"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "percent"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "currency"
                                      ]
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type",
                                    "symbol"
                                  ]
                                }
                              ],
                              "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                            },
                            "showAs": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "url",
                                        "email",
                                        "phone"
                                      ],
                                      "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "ring"
                                      ],
                                      "description": "can display as bar or ring in number field with single cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    },
                                    "showValue": {
                                      "type": "boolean",
                                      "description": "whether to displays the specific value on the graph"
                                    },
                                    "maxValue": {
                                      "type": "number",
                                      "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color",
                                    "showValue",
                                    "maxValue"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "line"
                                      ],
                                      "description": "can display as bar or line in number field with multiple cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                            }
                          },
                          "required": [
                            "expression"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "description": "The formula including fields referenced by their IDs. For example, LEFT(4, {Birthday}) input will be returned as LEFT(4, {fldXXX}) via API."
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "The time zone that should be used to format dates"
                            },
                            "formatting": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "date": {
                                      "type": "string",
                                      "description": "the display formatting of the date."
                                    },
                                    "time": {
                                      "type": "string",
                                      "enum": [
                                        "HH:mm",
                                        "hh:mm A",
                                        "None"
                                      ],
                                      "description": "the display formatting of the time."
                                    },
                                    "timeZone": {
                                      "type": "string",
                                      "description": "The time zone that should be used to format dates"
                                    }
                                  },
                                  "required": [
                                    "date",
                                    "time",
                                    "timeZone"
                                  ],
                                  "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "decimal"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "percent"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "currency"
                                      ]
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type",
                                    "symbol"
                                  ]
                                }
                              ],
                              "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                            },
                            "showAs": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "url",
                                        "email",
                                        "phone"
                                      ],
                                      "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "ring"
                                      ],
                                      "description": "can display as bar or ring in number field with single cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    },
                                    "showValue": {
                                      "type": "boolean",
                                      "description": "whether to displays the specific value on the graph"
                                    },
                                    "maxValue": {
                                      "type": "number",
                                      "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color",
                                    "showValue",
                                    "maxValue"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "line"
                                      ],
                                      "description": "can display as bar or line in number field with multiple cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                            }
                          },
                          "required": [
                            "expression"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "baseId": {
                              "type": "string",
                              "description": "the base id of the table that this field is linked to, only required for cross base link"
                            },
                            "relationship": {
                              "type": "string",
                              "enum": [
                                "oneOne",
                                "manyMany",
                                "oneMany",
                                "manyOne"
                              ],
                              "description": "describe the relationship from this table to the foreign table"
                            },
                            "foreignTableId": {
                              "type": "string",
                              "description": "the table this field is linked to"
                            },
                            "lookupFieldId": {
                              "type": "string",
                              "description": "the field in the foreign table that will be displayed as the current field"
                            },
                            "isOneWay": {
                              "type": "boolean",
                              "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                            },
                            "fkHostTableName": {
                              "type": "string",
                              "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                            },
                            "selfKeyName": {
                              "type": "string",
                              "description": "the name of the field that stores the current table primary key"
                            },
                            "foreignKeyName": {
                              "type": "string",
                              "description": "The name of the field that stores the foreign table primary key"
                            },
                            "symmetricFieldId": {
                              "type": "string",
                              "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                            },
                            "filterByViewId": {
                              "type": "string",
                              "nullable": true,
                              "description": "the view id that limits the number of records in the link field"
                            },
                            "visibleFieldIds": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "the fields that will be displayed in the link field"
                            },
                            "filter": {
                              "type": "object",
                              "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                            }
                          },
                          "required": [
                            "relationship",
                            "foreignTableId",
                            "lookupFieldId",
                            "fkHostTableName",
                            "selfKeyName",
                            "foreignKeyName"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "formatting": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "description": "the display formatting of the date."
                                },
                                "time": {
                                  "type": "string",
                                  "enum": [
                                    "HH:mm",
                                    "hh:mm A",
                                    "None"
                                  ],
                                  "description": "the display formatting of the time."
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone that should be used to format dates"
                                }
                              },
                              "required": [
                                "date",
                                "time",
                                "timeZone"
                              ],
                              "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                            },
                            "defaultValue": {
                              "type": "string",
                              "enum": [
                                "now"
                              ],
                              "description": "Whether the new row is automatically filled with the current time, caveat: the defaultValue is just a flag, it dose not effect the storing value of the record"
                            }
                          },
                          "required": [
                            "formatting"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "defaultValue": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "showAs": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "url",
                                    "email",
                                    "phone"
                                  ],
                                  "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                }
                              },
                              "required": [
                                "type"
                              ]
                            },
                            "defaultValue": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "icon": {
                              "type": "string",
                              "enum": [
                                "star",
                                "moon",
                                "sun",
                                "zap",
                                "flame",
                                "heart",
                                "apple",
                                "thumb-up"
                              ]
                            },
                            "color": {
                              "type": "string",
                              "enum": [
                                "yellowBright",
                                "redBright",
                                "tealBright"
                              ]
                            },
                            "max": {
                              "type": "integer",
                              "maximum": 10,
                              "minimum": 1
                            }
                          },
                          "required": [
                            "icon",
                            "color",
                            "max"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "isMultiple": {
                              "type": "boolean",
                              "description": "Allow adding multiple users"
                            },
                            "shouldNotify": {
                              "type": "boolean",
                              "description": "Notify users when their name is added to a cell"
                            },
                            "defaultValue": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "me"
                                  ]
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "me"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "baseId": {
                              "type": "string",
                              "description": "the base id of the table that this field is linked to, only required for cross base link"
                            },
                            "relationship": {
                              "type": "string",
                              "enum": [
                                "oneOne",
                                "manyMany",
                                "oneMany",
                                "manyOne"
                              ],
                              "description": "describe the relationship from this table to the foreign table"
                            },
                            "foreignTableId": {
                              "type": "string",
                              "description": "the table this field is linked to"
                            },
                            "lookupFieldId": {
                              "type": "string",
                              "description": "the field in the foreign table that will be displayed as the current field"
                            },
                            "isOneWay": {
                              "type": "boolean",
                              "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                            },
                            "fkHostTableName": {
                              "type": "string",
                              "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                            },
                            "selfKeyName": {
                              "type": "string",
                              "description": "the name of the field that stores the current table primary key"
                            },
                            "foreignKeyName": {
                              "type": "string",
                              "description": "The name of the field that stores the foreign table primary key"
                            },
                            "symmetricFieldId": {
                              "type": "string",
                              "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                            },
                            "filterByViewId": {
                              "type": "string",
                              "nullable": true,
                              "description": "the view id that limits the number of records in the link field"
                            },
                            "visibleFieldIds": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "the fields that will be displayed in the link field"
                            },
                            "filter": {
                              "type": "object",
                              "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                            }
                          },
                          "required": [
                            "relationship",
                            "foreignTableId",
                            "lookupFieldId",
                            "fkHostTableName",
                            "selfKeyName",
                            "foreignKeyName"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "choices": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "color"
                                ]
                              }
                            },
                            "defaultValue": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ]
                            },
                            "preventAutoNewOptions": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "choices"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "formatting": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "decimal"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "percent"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "number",
                                      "maximum": 5,
                                      "minimum": 0
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "currency"
                                      ]
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "precision",
                                    "type",
                                    "symbol"
                                  ]
                                }
                              ]
                            },
                            "showAs": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "ring"
                                      ],
                                      "description": "can display as bar or ring in number field with single cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    },
                                    "showValue": {
                                      "type": "boolean",
                                      "description": "whether to displays the specific value on the graph"
                                    },
                                    "maxValue": {
                                      "type": "number",
                                      "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color",
                                    "showValue",
                                    "maxValue"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bar",
                                        "line"
                                      ],
                                      "description": "can display as bar or line in number field with multiple cellValue value"
                                    },
                                    "color": {
                                      "type": "string",
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "color"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "defaultValue": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "formatting"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "AUTO_NUMBER()"
                              ]
                            }
                          },
                          "required": [
                            "expression"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "CREATED_TIME()"
                              ]
                            },
                            "formatting": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "description": "the display formatting of the date."
                                },
                                "time": {
                                  "type": "string",
                                  "enum": [
                                    "HH:mm",
                                    "hh:mm A",
                                    "None"
                                  ],
                                  "description": "the display formatting of the time."
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone that should be used to format dates"
                                }
                              },
                              "required": [
                                "date",
                                "time",
                                "timeZone"
                              ],
                              "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                            }
                          },
                          "required": [
                            "expression",
                            "formatting"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "enum": [
                                "LAST_MODIFIED_TIME()"
                              ]
                            },
                            "formatting": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "description": "the display formatting of the date."
                                },
                                "time": {
                                  "type": "string",
                                  "enum": [
                                    "HH:mm",
                                    "hh:mm A",
                                    "None"
                                  ],
                                  "description": "the display formatting of the time."
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone that should be used to format dates"
                                }
                              },
                              "required": [
                                "date",
                                "time",
                                "timeZone"
                              ],
                              "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                            }
                          },
                          "required": [
                            "expression",
                            "formatting"
                          ],
                          "additionalProperties": false
                        }
                      ],
                      "description": "The configuration options of the field. The structure of the field's options depend on the field's type."
                    },
                    "isLookup": {
                      "type": "boolean",
                      "description": "Whether this field is lookup field. witch means cellValue and [fieldType] is looked up from the linked table."
                    },
                    "lookupOptions": {
                      "type": "object",
                      "properties": {
                        "foreignTableId": {
                          "type": "string",
                          "description": "the table this field is linked to"
                        },
                        "lookupFieldId": {
                          "type": "string",
                          "description": "the field in the foreign table that will be displayed as the current field"
                        },
                        "relationship": {
                          "type": "string",
                          "enum": [
                            "oneOne",
                            "manyMany",
                            "oneMany",
                            "manyOne"
                          ],
                          "description": "describe the relationship from this table to the foreign table"
                        },
                        "fkHostTableName": {
                          "type": "string",
                          "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                        },
                        "selfKeyName": {
                          "type": "string",
                          "description": "the name of the field that stores the current table primary key"
                        },
                        "foreignKeyName": {
                          "type": "string",
                          "description": "The name of the field that stores the foreign table primary key"
                        },
                        "filter": {
                          "type": "object",
                          "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                        },
                        "linkFieldId": {
                          "type": "string",
                          "description": "The id of Linked record field to use for lookup"
                        }
                      },
                      "required": [
                        "foreignTableId",
                        "lookupFieldId",
                        "relationship",
                        "fkHostTableName",
                        "selfKeyName",
                        "foreignKeyName",
                        "linkFieldId"
                      ],
                      "description": "field lookup options."
                    },
                    "notNull": {
                      "type": "boolean",
                      "description": "Whether this field is not null."
                    },
                    "unique": {
                      "type": "boolean",
                      "description": "Whether this field is not unique."
                    },
                    "isPrimary": {
                      "type": "boolean",
                      "description": "Whether this field is primary field."
                    },
                    "isComputed": {
                      "type": "boolean",
                      "description": "Whether this field is computed field, you can not modify cellValue in computed field."
                    },
                    "isPending": {
                      "type": "boolean",
                      "description": "Whether this field's calculation is pending."
                    },
                    "hasError": {
                      "type": "boolean",
                      "description": "Whether This field has a configuration error. Check the fields referenced by this field's formula or configuration."
                    },
                    "cellValueType": {
                      "type": "string",
                      "enum": [
                        "string",
                        "number",
                        "boolean",
                        "dateTime"
                      ],
                      "description": "The cell value type of the field."
                    },
                    "isMultipleCellValue": {
                      "type": "boolean",
                      "description": "Whether this field has multiple cell value."
                    },
                    "dbFieldType": {
                      "type": "string",
                      "enum": [
                        "TEXT",
                        "INTEGER",
                        "DATETIME",
                        "REAL",
                        "BLOB",
                        "JSON",
                        "BOOLEAN"
                      ],
                      "description": "The field type of database that cellValue really store."
                    },
                    "dbFieldName": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^\\w{0,63}$",
                      "description": "Field(column) name in backend database. Limitation: 1-63 characters, can only contain letters, numbers and underscore, case sensitive, cannot be duplicated with existing db field name in the table."
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "options",
                    "cellValueType",
                    "dbFieldType",
                    "dbFieldName"
                  ]
                }
              }
            }
          }
        },
        "operationId": "updateConvertFieldType"
      }
    },
    "/table/{tableId}/view": {
      "post": {
        "description": "Create a view",
        "tags": [
          "view"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "grid",
                      "calendar",
                      "kanban",
                      "form",
                      "gallery",
                      "gantt",
                      "plugin"
                    ]
                  },
                  "description": {
                    "type": "string"
                  },
                  "order": {
                    "type": "number"
                  },
                  "options": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "rowHeight": {
                            "type": "string",
                            "enum": [
                              "short",
                              "medium",
                              "tall",
                              "extraTall",
                              "autoFit"
                            ],
                            "description": "The row height level of row in view"
                          },
                          "frozenColumnCount": {
                            "type": "number",
                            "minimum": 0,
                            "description": "The frozen column count in view"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "stackFieldId": {
                            "type": "string",
                            "description": "The field id of the Kanban stack."
                          },
                          "coverFieldId": {
                            "type": "string",
                            "nullable": true,
                            "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each Kanban card."
                          },
                          "isCoverFit": {
                            "type": "boolean",
                            "description": "If true, cover images are resized to fit Kanban cards."
                          },
                          "isFieldNameHidden": {
                            "type": "boolean",
                            "description": "If true, hides field name in the Kanban cards."
                          },
                          "isEmptyStackHidden": {
                            "type": "boolean",
                            "description": "If true, hides empty stacks in the Kanban."
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "coverFieldId": {
                            "type": "string",
                            "nullable": true,
                            "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each gallery card."
                          },
                          "isCoverFit": {
                            "type": "boolean",
                            "description": "If true, cover images are resized to fit gallery cards."
                          },
                          "isFieldNameHidden": {
                            "type": "boolean",
                            "description": "If true, hides field name in the gallery cards."
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "startDateFieldId": {
                            "type": "string",
                            "nullable": true,
                            "description": "The start date field id."
                          },
                          "endDateFieldId": {
                            "type": "string",
                            "nullable": true,
                            "description": "The end date field id."
                          },
                          "titleFieldId": {
                            "type": "string",
                            "nullable": true,
                            "description": "The title field id."
                          },
                          "colorConfig": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "field",
                                  "custom"
                                ]
                              },
                              "fieldId": {
                                "type": "string",
                                "nullable": true,
                                "description": "The color field id."
                              },
                              "color": {
                                "type": "string",
                                "nullable": true,
                                "enum": [
                                  "blueLight2",
                                  "blueLight1",
                                  "blueBright",
                                  "blue",
                                  "blueDark1",
                                  "cyanLight2",
                                  "cyanLight1",
                                  "cyanBright",
                                  "cyan",
                                  "cyanDark1",
                                  "grayLight2",
                                  "grayLight1",
                                  "grayBright",
                                  "gray",
                                  "grayDark1",
                                  "greenLight2",
                                  "greenLight1",
                                  "greenBright",
                                  "green",
                                  "greenDark1",
                                  "orangeLight2",
                                  "orangeLight1",
                                  "orangeBright",
                                  "orange",
                                  "orangeDark1",
                                  "pinkLight2",
                                  "pinkLight1",
                                  "pinkBright",
                                  "pink",
                                  "pinkDark1",
                                  "purpleLight2",
                                  "purpleLight1",
                                  "purpleBright",
                                  "purple",
                                  "purpleDark1",
                                  "redLight2",
                                  "redLight1",
                                  "redBright",
                                  "red",
                                  "redDark1",
                                  "tealLight2",
                                  "tealLight1",
                                  "tealBright",
                                  "teal",
                                  "tealDark1",
                                  "yellowLight2",
                                  "yellowLight1",
                                  "yellowBright",
                                  "yellow",
                                  "yellowDark1"
                                ],
                                "description": "The color."
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "coverUrl": {
                            "type": "string",
                            "description": "The cover url of the form"
                          },
                          "logoUrl": {
                            "type": "string",
                            "description": "The logo url of the form"
                          },
                          "submitLabel": {
                            "type": "string",
                            "description": "The submit button text of the form"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "pluginId": {
                            "type": "string",
                            "description": "The plugin id"
                          },
                          "pluginInstallId": {
                            "type": "string",
                            "description": "The plugin install id"
                          },
                          "pluginLogo": {
                            "type": "string",
                            "description": "The plugin logo"
                          }
                        },
                        "required": [
                          "pluginId",
                          "pluginInstallId",
                          "pluginLogo"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  },
                  "sort": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "sortObjs": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldId": {
                              "type": "string",
                              "description": "The id of the field."
                            },
                            "order": {
                              "type": "string",
                              "enum": [
                                "asc",
                                "desc"
                              ]
                            }
                          },
                          "required": [
                            "fieldId",
                            "order"
                          ]
                        }
                      },
                      "manualSort": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "sortObjs"
                    ]
                  },
                  "filter": {
                    "type": "object",
                    "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                  },
                  "group": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "object",
                      "properties": {
                        "fieldId": {
                          "type": "string",
                          "description": "The id of the field."
                        },
                        "order": {
                          "type": "string",
                          "enum": [
                            "asc",
                            "desc"
                          ]
                        }
                      },
                      "required": [
                        "fieldId",
                        "order"
                      ]
                    }
                  },
                  "isLocked": {
                    "type": "boolean"
                  },
                  "shareId": {
                    "type": "string"
                  },
                  "enableShare": {
                    "type": "boolean"
                  },
                  "shareMeta": {
                    "type": "object",
                    "properties": {
                      "allowCopy": {
                        "type": "boolean"
                      },
                      "includeHiddenField": {
                        "type": "boolean"
                      },
                      "password": {
                        "type": "string",
                        "minLength": 3
                      },
                      "includeRecords": {
                        "type": "boolean"
                      },
                      "submit": {
                        "type": "object",
                        "properties": {
                          "allow": {
                            "type": "boolean"
                          },
                          "requireLogin": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "columnMeta": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "order": {
                              "type": "number",
                              "description": "Order is a floating number, column will sort by it in the view."
                            },
                            "width": {
                              "type": "number",
                              "description": "Column width in the view."
                            },
                            "hidden": {
                              "type": "boolean",
                              "description": "If column hidden in the view."
                            },
                            "statisticFunc": {
                              "type": "string",
                              "nullable": true,
                              "enum": [
                                "count",
                                "empty",
                                "filled",
                                "unique",
                                "max",
                                "min",
                                "sum",
                                "average",
                                "checked",
                                "unChecked",
                                "percentEmpty",
                                "percentFilled",
                                "percentUnique",
                                "percentChecked",
                                "percentUnChecked",
                                "earliestDate",
                                "latestDate",
                                "dateRangeOfDays",
                                "dateRangeOfMonths",
                                "totalAttachmentSize"
                              ],
                              "description": "Statistic function of the column in the view."
                            }
                          },
                          "required": [
                            "order"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "order": {
                              "type": "number",
                              "description": "Order is a floating number, column will sort by it in the view."
                            },
                            "visible": {
                              "type": "boolean",
                              "description": "If column visible in the kanban view."
                            }
                          },
                          "required": [
                            "order"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "order": {
                              "type": "number",
                              "description": "Order is a floating number, column will sort by it in the view."
                            },
                            "visible": {
                              "type": "boolean",
                              "description": "If column visible in the gallery view."
                            }
                          },
                          "required": [
                            "order"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "order": {
                              "type": "number",
                              "description": "Order is a floating number, column will sort by it in the view."
                            },
                            "visible": {
                              "type": "boolean",
                              "description": "If column visible in the view."
                            },
                            "required": {
                              "type": "boolean",
                              "description": "If column is required."
                            }
                          },
                          "required": [
                            "order"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "order": {
                              "type": "number",
                              "description": "Order is a floating number, column will sort by it in the view."
                            },
                            "hidden": {
                              "type": "boolean",
                              "description": "If column hidden in the view."
                            }
                          },
                          "required": [
                            "order"
                          ]
                        }
                      ]
                    },
                    "description": "A mapping of view IDs to their corresponding column metadata."
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns data about a view.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "grid",
                        "calendar",
                        "kanban",
                        "form",
                        "gallery",
                        "gantt",
                        "plugin"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "order": {
                      "type": "number"
                    },
                    "options": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "rowHeight": {
                              "type": "string",
                              "enum": [
                                "short",
                                "medium",
                                "tall",
                                "extraTall",
                                "autoFit"
                              ],
                              "description": "The row height level of row in view"
                            },
                            "frozenColumnCount": {
                              "type": "number",
                              "minimum": 0,
                              "description": "The frozen column count in view"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "stackFieldId": {
                              "type": "string",
                              "description": "The field id of the Kanban stack."
                            },
                            "coverFieldId": {
                              "type": "string",
                              "nullable": true,
                              "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each Kanban card."
                            },
                            "isCoverFit": {
                              "type": "boolean",
                              "description": "If true, cover images are resized to fit Kanban cards."
                            },
                            "isFieldNameHidden": {
                              "type": "boolean",
                              "description": "If true, hides field name in the Kanban cards."
                            },
                            "isEmptyStackHidden": {
                              "type": "boolean",
                              "description": "If true, hides empty stacks in the Kanban."
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "coverFieldId": {
                              "type": "string",
                              "nullable": true,
                              "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each gallery card."
                            },
                            "isCoverFit": {
                              "type": "boolean",
                              "description": "If true, cover images are resized to fit gallery cards."
                            },
                            "isFieldNameHidden": {
                              "type": "boolean",
                              "description": "If true, hides field name in the gallery cards."
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "startDateFieldId": {
                              "type": "string",
                              "nullable": true,
                              "description": "The start date field id."
                            },
                            "endDateFieldId": {
                              "type": "string",
                              "nullable": true,
                              "description": "The end date field id."
                            },
                            "titleFieldId": {
                              "type": "string",
                              "nullable": true,
                              "description": "The title field id."
                            },
                            "colorConfig": {
                              "type": "object",
                              "nullable": true,
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "field",
                                    "custom"
                                  ]
                                },
                                "fieldId": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The color field id."
                                },
                                "color": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "blueLight2",
                                    "blueLight1",
                                    "blueBright",
                                    "blue",
                                    "blueDark1",
                                    "cyanLight2",
                                    "cyanLight1",
                                    "cyanBright",
                                    "cyan",
                                    "cyanDark1",
                                    "grayLight2",
                                    "grayLight1",
                                    "grayBright",
                                    "gray",
                                    "grayDark1",
                                    "greenLight2",
                                    "greenLight1",
                                    "greenBright",
                                    "green",
                                    "greenDark1",
                                    "orangeLight2",
                                    "orangeLight1",
                                    "orangeBright",
                                    "orange",
                                    "orangeDark1",
                                    "pinkLight2",
                                    "pinkLight1",
                                    "pinkBright",
                                    "pink",
                                    "pinkDark1",
                                    "purpleLight2",
                                    "purpleLight1",
                                    "purpleBright",
                                    "purple",
                                    "purpleDark1",
                                    "redLight2",
                                    "redLight1",
                                    "redBright",
                                    "red",
                                    "redDark1",
                                    "tealLight2",
                                    "tealLight1",
                                    "tealBright",
                                    "teal",
                                    "tealDark1",
                                    "yellowLight2",
                                    "yellowLight1",
                                    "yellowBright",
                                    "yellow",
                                    "yellowDark1"
                                  ],
                                  "description": "The color."
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "coverUrl": {
                              "type": "string",
                              "description": "The cover url of the form"
                            },
                            "logoUrl": {
                              "type": "string",
                              "description": "The logo url of the form"
                            },
                            "submitLabel": {
                              "type": "string",
                              "description": "The submit button text of the form"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "pluginId": {
                              "type": "string",
                              "description": "The plugin id"
                            },
                            "pluginInstallId": {
                              "type": "string",
                              "description": "The plugin install id"
                            },
                            "pluginLogo": {
                              "type": "string",
                              "description": "The plugin logo"
                            }
                          },
                          "required": [
                            "pluginId",
                            "pluginInstallId",
                            "pluginLogo"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "sort": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "sortObjs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "fieldId": {
                                "type": "string",
                                "description": "The id of the field."
                              },
                              "order": {
                                "type": "string",
                                "enum": [
                                  "asc",
                                  "desc"
                                ]
                              }
                            },
                            "required": [
                              "fieldId",
                              "order"
                            ]
                          }
                        },
                        "manualSort": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "sortObjs"
                      ]
                    },
                    "filter": {
                      "type": "object",
                      "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                    },
                    "group": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "fieldId": {
                            "type": "string",
                            "description": "The id of the field."
                          },
                          "order": {
                            "type": "string",
                            "enum": [
                              "asc",
                              "desc"
                            ]
                          }
                        },
                        "required": [
                          "fieldId",
                          "order"
                        ]
                      }
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "shareId": {
                      "type": "string"
                    },
                    "enableShare": {
                      "type": "boolean"
                    },
                    "shareMeta": {
                      "type": "object",
                      "properties": {
                        "allowCopy": {
                          "type": "boolean"
                        },
                        "includeHiddenField": {
                          "type": "boolean"
                        },
                        "password": {
                          "type": "string",
                          "minLength": 3
                        },
                        "includeRecords": {
                          "type": "boolean"
                        },
                        "submit": {
                          "type": "object",
                          "properties": {
                            "allow": {
                              "type": "boolean"
                            },
                            "requireLogin": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "type": "string"
                    },
                    "createdTime": {
                      "type": "string"
                    },
                    "lastModifiedTime": {
                      "type": "string"
                    },
                    "columnMeta": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "order": {
                                "type": "number",
                                "description": "Order is a floating number, column will sort by it in the view."
                              },
                              "width": {
                                "type": "number",
                                "description": "Column width in the view."
                              },
                              "hidden": {
                                "type": "boolean",
                                "description": "If column hidden in the view."
                              },
                              "statisticFunc": {
                                "type": "string",
                                "nullable": true,
                                "enum": [
                                  "count",
                                  "empty",
                                  "filled",
                                  "unique",
                                  "max",
                                  "min",
                                  "sum",
                                  "average",
                                  "checked",
                                  "unChecked",
                                  "percentEmpty",
                                  "percentFilled",
                                  "percentUnique",
                                  "percentChecked",
                                  "percentUnChecked",
                                  "earliestDate",
                                  "latestDate",
                                  "dateRangeOfDays",
                                  "dateRangeOfMonths",
                                  "totalAttachmentSize"
                                ],
                                "description": "Statistic function of the column in the view."
                              }
                            },
                            "required": [
                              "order"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "order": {
                                "type": "number",
                                "description": "Order is a floating number, column will sort by it in the view."
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "If column visible in the kanban view."
                              }
                            },
                            "required": [
                              "order"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "order": {
                                "type": "number",
                                "description": "Order is a floating number, column will sort by it in the view."
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "If column visible in the gallery view."
                              }
                            },
                            "required": [
                              "order"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "order": {
                                "type": "number",
                                "description": "Order is a floating number, column will sort by it in the view."
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "If column visible in the view."
                              },
                              "required": {
                                "type": "boolean",
                                "description": "If column is required."
                              }
                            },
                            "required": [
                              "order"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "order": {
                                "type": "number",
                                "description": "Order is a floating number, column will sort by it in the view."
                              },
                              "hidden": {
                                "type": "boolean",
                                "description": "If column hidden in the view."
                              }
                            },
                            "required": [
                              "order"
                            ]
                          }
                        ]
                      },
                      "description": "A mapping of view IDs to their corresponding column metadata."
                    },
                    "pluginId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "createdBy",
                    "createdTime",
                    "columnMeta"
                  ]
                }
              }
            }
          }
        },
        "operationId": "createView"
      },
      "get": {
        "summary": "Get view list",
        "description": "Get view list",
        "tags": [
          "view"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of view.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "grid",
                          "calendar",
                          "kanban",
                          "form",
                          "gallery",
                          "gantt",
                          "plugin"
                        ]
                      },
                      "description": {
                        "type": "string"
                      },
                      "order": {
                        "type": "number"
                      },
                      "options": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "rowHeight": {
                                "type": "string",
                                "enum": [
                                  "short",
                                  "medium",
                                  "tall",
                                  "extraTall",
                                  "autoFit"
                                ],
                                "description": "The row height level of row in view"
                              },
                              "frozenColumnCount": {
                                "type": "number",
                                "minimum": 0,
                                "description": "The frozen column count in view"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "stackFieldId": {
                                "type": "string",
                                "description": "The field id of the Kanban stack."
                              },
                              "coverFieldId": {
                                "type": "string",
                                "nullable": true,
                                "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each Kanban card."
                              },
                              "isCoverFit": {
                                "type": "boolean",
                                "description": "If true, cover images are resized to fit Kanban cards."
                              },
                              "isFieldNameHidden": {
                                "type": "boolean",
                                "description": "If true, hides field name in the Kanban cards."
                              },
                              "isEmptyStackHidden": {
                                "type": "boolean",
                                "description": "If true, hides empty stacks in the Kanban."
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "coverFieldId": {
                                "type": "string",
                                "nullable": true,
                                "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each gallery card."
                              },
                              "isCoverFit": {
                                "type": "boolean",
                                "description": "If true, cover images are resized to fit gallery cards."
                              },
                              "isFieldNameHidden": {
                                "type": "boolean",
                                "description": "If true, hides field name in the gallery cards."
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "startDateFieldId": {
                                "type": "string",
                                "nullable": true,
                                "description": "The start date field id."
                              },
                              "endDateFieldId": {
                                "type": "string",
                                "nullable": true,
                                "description": "The end date field id."
                              },
                              "titleFieldId": {
                                "type": "string",
                                "nullable": true,
                                "description": "The title field id."
                              },
                              "colorConfig": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "field",
                                      "custom"
                                    ]
                                  },
                                  "fieldId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The color field id."
                                  },
                                  "color": {
                                    "type": "string",
                                    "nullable": true,
                                    "enum": [
                                      "blueLight2",
                                      "blueLight1",
                                      "blueBright",
                                      "blue",
                                      "blueDark1",
                                      "cyanLight2",
                                      "cyanLight1",
                                      "cyanBright",
                                      "cyan",
                                      "cyanDark1",
                                      "grayLight2",
                                      "grayLight1",
                                      "grayBright",
                                      "gray",
                                      "grayDark1",
                                      "greenLight2",
                                      "greenLight1",
                                      "greenBright",
                                      "green",
                                      "greenDark1",
                                      "orangeLight2",
                                      "orangeLight1",
                                      "orangeBright",
                                      "orange",
                                      "orangeDark1",
                                      "pinkLight2",
                                      "pinkLight1",
                                      "pinkBright",
                                      "pink",
                                      "pinkDark1",
                                      "purpleLight2",
                                      "purpleLight1",
                                      "purpleBright",
                                      "purple",
                                      "purpleDark1",
                                      "redLight2",
                                      "redLight1",
                                      "redBright",
                                      "red",
                                      "redDark1",
                                      "tealLight2",
                                      "tealLight1",
                                      "tealBright",
                                      "teal",
                                      "tealDark1",
                                      "yellowLight2",
                                      "yellowLight1",
                                      "yellowBright",
                                      "yellow",
                                      "yellowDark1"
                                    ],
                                    "description": "The color."
                                  }
                                },
                                "required": [
                                  "type"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "coverUrl": {
                                "type": "string",
                                "description": "The cover url of the form"
                              },
                              "logoUrl": {
                                "type": "string",
                                "description": "The logo url of the form"
                              },
                              "submitLabel": {
                                "type": "string",
                                "description": "The submit button text of the form"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "pluginId": {
                                "type": "string",
                                "description": "The plugin id"
                              },
                              "pluginInstallId": {
                                "type": "string",
                                "description": "The plugin install id"
                              },
                              "pluginLogo": {
                                "type": "string",
                                "description": "The plugin logo"
                              }
                            },
                            "required": [
                              "pluginId",
                              "pluginInstallId",
                              "pluginLogo"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "sort": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "sortObjs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "fieldId": {
                                  "type": "string",
                                  "description": "The id of the field."
                                },
                                "order": {
                                  "type": "string",
                                  "enum": [
                                    "asc",
                                    "desc"
                                  ]
                                }
                              },
                              "required": [
                                "fieldId",
                                "order"
                              ]
                            }
                          },
                          "manualSort": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "sortObjs"
                        ]
                      },
                      "filter": {
                        "type": "object",
                        "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                      },
                      "group": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldId": {
                              "type": "string",
                              "description": "The id of the field."
                            },
                            "order": {
                              "type": "string",
                              "enum": [
                                "asc",
                                "desc"
                              ]
                            }
                          },
                          "required": [
                            "fieldId",
                            "order"
                          ]
                        }
                      },
                      "isLocked": {
                        "type": "boolean"
                      },
                      "shareId": {
                        "type": "string"
                      },
                      "enableShare": {
                        "type": "boolean"
                      },
                      "shareMeta": {
                        "type": "object",
                        "properties": {
                          "allowCopy": {
                            "type": "boolean"
                          },
                          "includeHiddenField": {
                            "type": "boolean"
                          },
                          "password": {
                            "type": "string",
                            "minLength": 3
                          },
                          "includeRecords": {
                            "type": "boolean"
                          },
                          "submit": {
                            "type": "object",
                            "properties": {
                              "allow": {
                                "type": "boolean"
                              },
                              "requireLogin": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "lastModifiedBy": {
                        "type": "string"
                      },
                      "createdTime": {
                        "type": "string"
                      },
                      "lastModifiedTime": {
                        "type": "string"
                      },
                      "columnMeta": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "order": {
                                  "type": "number",
                                  "description": "Order is a floating number, column will sort by it in the view."
                                },
                                "width": {
                                  "type": "number",
                                  "description": "Column width in the view."
                                },
                                "hidden": {
                                  "type": "boolean",
                                  "description": "If column hidden in the view."
                                },
                                "statisticFunc": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "count",
                                    "empty",
                                    "filled",
                                    "unique",
                                    "max",
                                    "min",
                                    "sum",
                                    "average",
                                    "checked",
                                    "unChecked",
                                    "percentEmpty",
                                    "percentFilled",
                                    "percentUnique",
                                    "percentChecked",
                                    "percentUnChecked",
                                    "earliestDate",
                                    "latestDate",
                                    "dateRangeOfDays",
                                    "dateRangeOfMonths",
                                    "totalAttachmentSize"
                                  ],
                                  "description": "Statistic function of the column in the view."
                                }
                              },
                              "required": [
                                "order"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "order": {
                                  "type": "number",
                                  "description": "Order is a floating number, column will sort by it in the view."
                                },
                                "visible": {
                                  "type": "boolean",
                                  "description": "If column visible in the kanban view."
                                }
                              },
                              "required": [
                                "order"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "order": {
                                  "type": "number",
                                  "description": "Order is a floating number, column will sort by it in the view."
                                },
                                "visible": {
                                  "type": "boolean",
                                  "description": "If column visible in the gallery view."
                                }
                              },
                              "required": [
                                "order"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "order": {
                                  "type": "number",
                                  "description": "Order is a floating number, column will sort by it in the view."
                                },
                                "visible": {
                                  "type": "boolean",
                                  "description": "If column visible in the view."
                                },
                                "required": {
                                  "type": "boolean",
                                  "description": "If column is required."
                                }
                              },
                              "required": [
                                "order"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "order": {
                                  "type": "number",
                                  "description": "Order is a floating number, column will sort by it in the view."
                                },
                                "hidden": {
                                  "type": "boolean",
                                  "description": "If column hidden in the view."
                                }
                              },
                              "required": [
                                "order"
                              ]
                            }
                          ]
                        },
                        "description": "A mapping of view IDs to their corresponding column metadata."
                      },
                      "pluginId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "createdBy",
                      "createdTime",
                      "columnMeta"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "getGetViewList"
      }
    },
    "/table/{tableId}/view/{viewId}": {
      "delete": {
        "description": "Delete a view",
        "tags": [
          "view"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "viewId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          }
        },
        "operationId": "deleteView"
      },
      "get": {
        "description": "Get a view",
        "tags": [
          "view"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "viewId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns data about a view.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "grid",
                        "calendar",
                        "kanban",
                        "form",
                        "gallery",
                        "gantt",
                        "plugin"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "order": {
                      "type": "number"
                    },
                    "options": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "rowHeight": {
                              "type": "string",
                              "enum": [
                                "short",
                                "medium",
                                "tall",
                                "extraTall",
                                "autoFit"
                              ],
                              "description": "The row height level of row in view"
                            },
                            "frozenColumnCount": {
                              "type": "number",
                              "minimum": 0,
                              "description": "The frozen column count in view"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "stackFieldId": {
                              "type": "string",
                              "description": "The field id of the Kanban stack."
                            },
                            "coverFieldId": {
                              "type": "string",
                              "nullable": true,
                              "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each Kanban card."
                            },
                            "isCoverFit": {
                              "type": "boolean",
                              "description": "If true, cover images are resized to fit Kanban cards."
                            },
                            "isFieldNameHidden": {
                              "type": "boolean",
                              "description": "If true, hides field name in the Kanban cards."
                            },
                            "isEmptyStackHidden": {
                              "type": "boolean",
                              "description": "If true, hides empty stacks in the Kanban."
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "coverFieldId": {
                              "type": "string",
                              "nullable": true,
                              "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each gallery card."
                            },
                            "isCoverFit": {
                              "type": "boolean",
                              "description": "If true, cover images are resized to fit gallery cards."
                            },
                            "isFieldNameHidden": {
                              "type": "boolean",
                              "description": "If true, hides field name in the gallery cards."
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "startDateFieldId": {
                              "type": "string",
                              "nullable": true,
                              "description": "The start date field id."
                            },
                            "endDateFieldId": {
                              "type": "string",
                              "nullable": true,
                              "description": "The end date field id."
                            },
                            "titleFieldId": {
                              "type": "string",
                              "nullable": true,
                              "description": "The title field id."
                            },
                            "colorConfig": {
                              "type": "object",
                              "nullable": true,
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "field",
                                    "custom"
                                  ]
                                },
                                "fieldId": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The color field id."
                                },
                                "color": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "blueLight2",
                                    "blueLight1",
                                    "blueBright",
                                    "blue",
                                    "blueDark1",
                                    "cyanLight2",
                                    "cyanLight1",
                                    "cyanBright",
                                    "cyan",
                                    "cyanDark1",
                                    "grayLight2",
                                    "grayLight1",
                                    "grayBright",
                                    "gray",
                                    "grayDark1",
                                    "greenLight2",
                                    "greenLight1",
                                    "greenBright",
                                    "green",
                                    "greenDark1",
                                    "orangeLight2",
                                    "orangeLight1",
                                    "orangeBright",
                                    "orange",
                                    "orangeDark1",
                                    "pinkLight2",
                                    "pinkLight1",
                                    "pinkBright",
                                    "pink",
                                    "pinkDark1",
                                    "purpleLight2",
                                    "purpleLight1",
                                    "purpleBright",
                                    "purple",
                                    "purpleDark1",
                                    "redLight2",
                                    "redLight1",
                                    "redBright",
                                    "red",
                                    "redDark1",
                                    "tealLight2",
                                    "tealLight1",
                                    "tealBright",
                                    "teal",
                                    "tealDark1",
                                    "yellowLight2",
                                    "yellowLight1",
                                    "yellowBright",
                                    "yellow",
                                    "yellowDark1"
                                  ],
                                  "description": "The color."
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "coverUrl": {
                              "type": "string",
                              "description": "The cover url of the form"
                            },
                            "logoUrl": {
                              "type": "string",
                              "description": "The logo url of the form"
                            },
                            "submitLabel": {
                              "type": "string",
                              "description": "The submit button text of the form"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "pluginId": {
                              "type": "string",
                              "description": "The plugin id"
                            },
                            "pluginInstallId": {
                              "type": "string",
                              "description": "The plugin install id"
                            },
                            "pluginLogo": {
                              "type": "string",
                              "description": "The plugin logo"
                            }
                          },
                          "required": [
                            "pluginId",
                            "pluginInstallId",
                            "pluginLogo"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "sort": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "sortObjs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "fieldId": {
                                "type": "string",
                                "description": "The id of the field."
                              },
                              "order": {
                                "type": "string",
                                "enum": [
                                  "asc",
                                  "desc"
                                ]
                              }
                            },
                            "required": [
                              "fieldId",
                              "order"
                            ]
                          }
                        },
                        "manualSort": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "sortObjs"
                      ]
                    },
                    "filter": {
                      "type": "object",
                      "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                    },
                    "group": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "fieldId": {
                            "type": "string",
                            "description": "The id of the field."
                          },
                          "order": {
                            "type": "string",
                            "enum": [
                              "asc",
                              "desc"
                            ]
                          }
                        },
                        "required": [
                          "fieldId",
                          "order"
                        ]
                      }
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "shareId": {
                      "type": "string"
                    },
                    "enableShare": {
                      "type": "boolean"
                    },
                    "shareMeta": {
                      "type": "object",
                      "properties": {
                        "allowCopy": {
                          "type": "boolean"
                        },
                        "includeHiddenField": {
                          "type": "boolean"
                        },
                        "password": {
                          "type": "string",
                          "minLength": 3
                        },
                        "includeRecords": {
                          "type": "boolean"
                        },
                        "submit": {
                          "type": "object",
                          "properties": {
                            "allow": {
                              "type": "boolean"
                            },
                            "requireLogin": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "type": "string"
                    },
                    "createdTime": {
                      "type": "string"
                    },
                    "lastModifiedTime": {
                      "type": "string"
                    },
                    "columnMeta": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "order": {
                                "type": "number",
                                "description": "Order is a floating number, column will sort by it in the view."
                              },
                              "width": {
                                "type": "number",
                                "description": "Column width in the view."
                              },
                              "hidden": {
                                "type": "boolean",
                                "description": "If column hidden in the view."
                              },
                              "statisticFunc": {
                                "type": "string",
                                "nullable": true,
                                "enum": [
                                  "count",
                                  "empty",
                                  "filled",
                                  "unique",
                                  "max",
                                  "min",
                                  "sum",
                                  "average",
                                  "checked",
                                  "unChecked",
                                  "percentEmpty",
                                  "percentFilled",
                                  "percentUnique",
                                  "percentChecked",
                                  "percentUnChecked",
                                  "earliestDate",
                                  "latestDate",
                                  "dateRangeOfDays",
                                  "dateRangeOfMonths",
                                  "totalAttachmentSize"
                                ],
                                "description": "Statistic function of the column in the view."
                              }
                            },
                            "required": [
                              "order"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "order": {
                                "type": "number",
                                "description": "Order is a floating number, column will sort by it in the view."
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "If column visible in the kanban view."
                              }
                            },
                            "required": [
                              "order"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "order": {
                                "type": "number",
                                "description": "Order is a floating number, column will sort by it in the view."
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "If column visible in the gallery view."
                              }
                            },
                            "required": [
                              "order"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "order": {
                                "type": "number",
                                "description": "Order is a floating number, column will sort by it in the view."
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "If column visible in the view."
                              },
                              "required": {
                                "type": "boolean",
                                "description": "If column is required."
                              }
                            },
                            "required": [
                              "order"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "order": {
                                "type": "number",
                                "description": "Order is a floating number, column will sort by it in the view."
                              },
                              "hidden": {
                                "type": "boolean",
                                "description": "If column hidden in the view."
                              }
                            },
                            "required": [
                              "order"
                            ]
                          }
                        ]
                      },
                      "description": "A mapping of view IDs to their corresponding column metadata."
                    },
                    "pluginId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "createdBy",
                    "createdTime",
                    "columnMeta"
                  ]
                }
              }
            }
          }
        },
        "operationId": "getView1"
      }
    },
    "/base/{baseId}/table/": {
      "post": {
        "summary": "Create table",
        "description": "Create a new table in the specified base with customizable fields, views, and initial records. Default configurations will be applied if not specified.",
        "tags": [
          "table"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "baseId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The name of the table."
                  },
                  "dbTableName": {
                    "type": "string",
                    "pattern": "^[a-z]\\w{0,62}$",
                    "description": "Table name in backend database. Limitation: 1-63 characters, start with letter, can only contain letters, numbers and underscore, case insensitive, cannot be duplicated with existing db table name in the base."
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "description": "The description of the table."
                  },
                  "icon": {
                    "type": "string",
                    "nullable": true,
                    "description": "The emoji icon string of the table."
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "singleLineText",
                            "longText",
                            "user",
                            "attachment",
                            "checkbox",
                            "multipleSelect",
                            "singleSelect",
                            "date",
                            "number",
                            "duration",
                            "rating",
                            "formula",
                            "rollup",
                            "count",
                            "link",
                            "createdTime",
                            "lastModifiedTime",
                            "createdBy",
                            "lastModifiedBy",
                            "autoNumber",
                            "button"
                          ],
                          "description": "The field types supported by teable.",
                          "example": "singleSelect"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The name of the field. can not be duplicated in the table.",
                          "example": "Tags"
                        },
                        "unique": {
                          "type": "boolean",
                          "description": "Whether this field is not unique."
                        },
                        "notNull": {
                          "type": "boolean",
                          "description": "Whether this field is not null."
                        },
                        "dbFieldName": {
                          "type": "string",
                          "minLength": 1,
                          "pattern": "^\\w{0,63}$",
                          "description": "Field(column) name in backend database. Limitation: 1-63 characters, can only contain letters, numbers and underscore, case sensitive, cannot be duplicated with existing db field name in the table."
                        },
                        "isLookup": {
                          "type": "boolean",
                          "description": "Whether this field is lookup field. witch means cellValue and [fieldType] is looked up from the linked table."
                        },
                        "description": {
                          "type": "string",
                          "nullable": true,
                          "description": "The description of the field.",
                          "example": "this is a summary"
                        },
                        "lookupOptions": {
                          "type": "object",
                          "properties": {
                            "foreignTableId": {
                              "type": "string",
                              "description": "the table this field is linked to"
                            },
                            "lookupFieldId": {
                              "type": "string",
                              "description": "the field in the foreign table that will be displayed as the current field"
                            },
                            "linkFieldId": {
                              "type": "string",
                              "description": "The id of Linked record field to use for lookup"
                            },
                            "filter": {
                              "type": "object",
                              "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                            }
                          },
                          "required": [
                            "foreignTableId",
                            "lookupFieldId",
                            "linkFieldId"
                          ],
                          "description": "The lookup options for field, you need to configure it when isLookup attribute is true or field type is rollup."
                        },
                        "options": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "expression": {
                                  "type": "string",
                                  "enum": [
                                    "countall({values})",
                                    "counta({values})",
                                    "count({values})",
                                    "sum({values})",
                                    "max({values})",
                                    "min({values})",
                                    "and({values})",
                                    "or({values})",
                                    "xor({values})",
                                    "array_join({values})",
                                    "array_unique({values})",
                                    "array_compact({values})",
                                    "concatenate({values})"
                                  ]
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone that should be used to format dates"
                                },
                                "formatting": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "type": "string",
                                          "description": "the display formatting of the date."
                                        },
                                        "time": {
                                          "type": "string",
                                          "enum": [
                                            "HH:mm",
                                            "hh:mm A",
                                            "None"
                                          ],
                                          "description": "the display formatting of the time."
                                        },
                                        "timeZone": {
                                          "type": "string",
                                          "description": "The time zone that should be used to format dates"
                                        }
                                      },
                                      "required": [
                                        "date",
                                        "time",
                                        "timeZone"
                                      ],
                                      "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "precision": {
                                          "type": "number",
                                          "maximum": 5,
                                          "minimum": 0
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "decimal"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "precision",
                                        "type"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "precision": {
                                          "type": "number",
                                          "maximum": 5,
                                          "minimum": 0
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "percent"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "precision",
                                        "type"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "precision": {
                                          "type": "number",
                                          "maximum": 5,
                                          "minimum": 0
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "currency"
                                          ]
                                        },
                                        "symbol": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "precision",
                                        "type",
                                        "symbol"
                                      ]
                                    }
                                  ],
                                  "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                                },
                                "showAs": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "url",
                                            "email",
                                            "phone"
                                          ],
                                          "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "bar",
                                            "ring"
                                          ],
                                          "description": "can display as bar or ring in number field with single cellValue value"
                                        },
                                        "color": {
                                          "type": "string",
                                          "enum": [
                                            "blueLight2",
                                            "blueLight1",
                                            "blueBright",
                                            "blue",
                                            "blueDark1",
                                            "cyanLight2",
                                            "cyanLight1",
                                            "cyanBright",
                                            "cyan",
                                            "cyanDark1",
                                            "grayLight2",
                                            "grayLight1",
                                            "grayBright",
                                            "gray",
                                            "grayDark1",
                                            "greenLight2",
                                            "greenLight1",
                                            "greenBright",
                                            "green",
                                            "greenDark1",
                                            "orangeLight2",
                                            "orangeLight1",
                                            "orangeBright",
                                            "orange",
                                            "orangeDark1",
                                            "pinkLight2",
                                            "pinkLight1",
                                            "pinkBright",
                                            "pink",
                                            "pinkDark1",
                                            "purpleLight2",
                                            "purpleLight1",
                                            "purpleBright",
                                            "purple",
                                            "purpleDark1",
                                            "redLight2",
                                            "redLight1",
                                            "redBright",
                                            "red",
                                            "redDark1",
                                            "tealLight2",
                                            "tealLight1",
                                            "tealBright",
                                            "teal",
                                            "tealDark1",
                                            "yellowLight2",
                                            "yellowLight1",
                                            "yellowBright",
                                            "yellow",
                                            "yellowDark1"
                                          ]
                                        },
                                        "showValue": {
                                          "type": "boolean",
                                          "description": "whether to displays the specific value on the graph"
                                        },
                                        "maxValue": {
                                          "type": "number",
                                          "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "color",
                                        "showValue",
                                        "maxValue"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "bar",
                                            "line"
                                          ],
                                          "description": "can display as bar or line in number field with multiple cellValue value"
                                        },
                                        "color": {
                                          "type": "string",
                                          "enum": [
                                            "blueLight2",
                                            "blueLight1",
                                            "blueBright",
                                            "blue",
                                            "blueDark1",
                                            "cyanLight2",
                                            "cyanLight1",
                                            "cyanBright",
                                            "cyan",
                                            "cyanDark1",
                                            "grayLight2",
                                            "grayLight1",
                                            "grayBright",
                                            "gray",
                                            "grayDark1",
                                            "greenLight2",
                                            "greenLight1",
                                            "greenBright",
                                            "green",
                                            "greenDark1",
                                            "orangeLight2",
                                            "orangeLight1",
                                            "orangeBright",
                                            "orange",
                                            "orangeDark1",
                                            "pinkLight2",
                                            "pinkLight1",
                                            "pinkBright",
                                            "pink",
                                            "pinkDark1",
                                            "purpleLight2",
                                            "purpleLight1",
                                            "purpleBright",
                                            "purple",
                                            "purpleDark1",
                                            "redLight2",
                                            "redLight1",
                                            "redBright",
                                            "red",
                                            "redDark1",
                                            "tealLight2",
                                            "tealLight1",
                                            "tealBright",
                                            "teal",
                                            "tealDark1",
                                            "yellowLight2",
                                            "yellowLight1",
                                            "yellowBright",
                                            "yellow",
                                            "yellowDark1"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "color"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ],
                                  "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                                }
                              },
                              "required": [
                                "expression"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "expression": {
                                  "type": "string",
                                  "description": "The formula including fields referenced by their IDs. For example, LEFT(4, {Birthday}) input will be returned as LEFT(4, {fldXXX}) via API."
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone that should be used to format dates"
                                },
                                "formatting": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "type": "string",
                                          "description": "the display formatting of the date."
                                        },
                                        "time": {
                                          "type": "string",
                                          "enum": [
                                            "HH:mm",
                                            "hh:mm A",
                                            "None"
                                          ],
                                          "description": "the display formatting of the time."
                                        },
                                        "timeZone": {
                                          "type": "string",
                                          "description": "The time zone that should be used to format dates"
                                        }
                                      },
                                      "required": [
                                        "date",
                                        "time",
                                        "timeZone"
                                      ],
                                      "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "precision": {
                                          "type": "number",
                                          "maximum": 5,
                                          "minimum": 0
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "decimal"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "precision",
                                        "type"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "precision": {
                                          "type": "number",
                                          "maximum": 5,
                                          "minimum": 0
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "percent"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "precision",
                                        "type"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "precision": {
                                          "type": "number",
                                          "maximum": 5,
                                          "minimum": 0
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "currency"
                                          ]
                                        },
                                        "symbol": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "precision",
                                        "type",
                                        "symbol"
                                      ]
                                    }
                                  ],
                                  "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                                },
                                "showAs": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "url",
                                            "email",
                                            "phone"
                                          ],
                                          "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "bar",
                                            "ring"
                                          ],
                                          "description": "can display as bar or ring in number field with single cellValue value"
                                        },
                                        "color": {
                                          "type": "string",
                                          "enum": [
                                            "blueLight2",
                                            "blueLight1",
                                            "blueBright",
                                            "blue",
                                            "blueDark1",
                                            "cyanLight2",
                                            "cyanLight1",
                                            "cyanBright",
                                            "cyan",
                                            "cyanDark1",
                                            "grayLight2",
                                            "grayLight1",
                                            "grayBright",
                                            "gray",
                                            "grayDark1",
                                            "greenLight2",
                                            "greenLight1",
                                            "greenBright",
                                            "green",
                                            "greenDark1",
                                            "orangeLight2",
                                            "orangeLight1",
                                            "orangeBright",
                                            "orange",
                                            "orangeDark1",
                                            "pinkLight2",
                                            "pinkLight1",
                                            "pinkBright",
                                            "pink",
                                            "pinkDark1",
                                            "purpleLight2",
                                            "purpleLight1",
                                            "purpleBright",
                                            "purple",
                                            "purpleDark1",
                                            "redLight2",
                                            "redLight1",
                                            "redBright",
                                            "red",
                                            "redDark1",
                                            "tealLight2",
                                            "tealLight1",
                                            "tealBright",
                                            "teal",
                                            "tealDark1",
                                            "yellowLight2",
                                            "yellowLight1",
                                            "yellowBright",
                                            "yellow",
                                            "yellowDark1"
                                          ]
                                        },
                                        "showValue": {
                                          "type": "boolean",
                                          "description": "whether to displays the specific value on the graph"
                                        },
                                        "maxValue": {
                                          "type": "number",
                                          "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "color",
                                        "showValue",
                                        "maxValue"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "bar",
                                            "line"
                                          ],
                                          "description": "can display as bar or line in number field with multiple cellValue value"
                                        },
                                        "color": {
                                          "type": "string",
                                          "enum": [
                                            "blueLight2",
                                            "blueLight1",
                                            "blueBright",
                                            "blue",
                                            "blueDark1",
                                            "cyanLight2",
                                            "cyanLight1",
                                            "cyanBright",
                                            "cyan",
                                            "cyanDark1",
                                            "grayLight2",
                                            "grayLight1",
                                            "grayBright",
                                            "gray",
                                            "grayDark1",
                                            "greenLight2",
                                            "greenLight1",
                                            "greenBright",
                                            "green",
                                            "greenDark1",
                                            "orangeLight2",
                                            "orangeLight1",
                                            "orangeBright",
                                            "orange",
                                            "orangeDark1",
                                            "pinkLight2",
                                            "pinkLight1",
                                            "pinkBright",
                                            "pink",
                                            "pinkDark1",
                                            "purpleLight2",
                                            "purpleLight1",
                                            "purpleBright",
                                            "purple",
                                            "purpleDark1",
                                            "redLight2",
                                            "redLight1",
                                            "redBright",
                                            "red",
                                            "redDark1",
                                            "tealLight2",
                                            "tealLight1",
                                            "tealBright",
                                            "teal",
                                            "tealDark1",
                                            "yellowLight2",
                                            "yellowLight1",
                                            "yellowBright",
                                            "yellow",
                                            "yellowDark1"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "color"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ],
                                  "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                                }
                              },
                              "required": [
                                "expression"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "baseId": {
                                  "type": "string",
                                  "description": "the base id of the table that this field is linked to, only required for cross base link"
                                },
                                "relationship": {
                                  "type": "string",
                                  "enum": [
                                    "oneOne",
                                    "manyMany",
                                    "oneMany",
                                    "manyOne"
                                  ],
                                  "description": "describe the relationship from this table to the foreign table"
                                },
                                "foreignTableId": {
                                  "type": "string",
                                  "description": "the table this field is linked to"
                                },
                                "lookupFieldId": {
                                  "type": "string",
                                  "description": "the field in the foreign table that will be displayed as the current field"
                                },
                                "isOneWay": {
                                  "type": "boolean",
                                  "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                                },
                                "fkHostTableName": {
                                  "type": "string",
                                  "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                                },
                                "selfKeyName": {
                                  "type": "string",
                                  "description": "the name of the field that stores the current table primary key"
                                },
                                "foreignKeyName": {
                                  "type": "string",
                                  "description": "The name of the field that stores the foreign table primary key"
                                },
                                "symmetricFieldId": {
                                  "type": "string",
                                  "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                                },
                                "filterByViewId": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "the view id that limits the number of records in the link field"
                                },
                                "visibleFieldIds": {
                                  "type": "array",
                                  "nullable": true,
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "the fields that will be displayed in the link field"
                                },
                                "filter": {
                                  "type": "object",
                                  "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                                }
                              },
                              "required": [
                                "relationship",
                                "foreignTableId",
                                "lookupFieldId",
                                "fkHostTableName",
                                "selfKeyName",
                                "foreignKeyName"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "formatting": {
                                  "type": "object",
                                  "properties": {
                                    "date": {
                                      "type": "string",
                                      "description": "the display formatting of the date."
                                    },
                                    "time": {
                                      "type": "string",
                                      "enum": [
                                        "HH:mm",
                                        "hh:mm A",
                                        "None"
                                      ],
                                      "description": "the display formatting of the time."
                                    },
                                    "timeZone": {
                                      "type": "string",
                                      "description": "The time zone that should be used to format dates"
                                    }
                                  },
                                  "required": [
                                    "date",
                                    "time",
                                    "timeZone"
                                  ],
                                  "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                },
                                "defaultValue": {
                                  "type": "string",
                                  "enum": [
                                    "now"
                                  ],
                                  "description": "Whether the new row is automatically filled with the current time, caveat: the defaultValue is just a flag, it dose not effect the storing value of the record"
                                }
                              },
                              "required": [
                                "formatting"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "defaultValue": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {},
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "showAs": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "url",
                                        "email",
                                        "phone"
                                      ],
                                      "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                },
                                "defaultValue": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "icon": {
                                  "type": "string",
                                  "enum": [
                                    "star",
                                    "moon",
                                    "sun",
                                    "zap",
                                    "flame",
                                    "heart",
                                    "apple",
                                    "thumb-up"
                                  ]
                                },
                                "color": {
                                  "type": "string",
                                  "enum": [
                                    "yellowBright",
                                    "redBright",
                                    "tealBright"
                                  ]
                                },
                                "max": {
                                  "type": "integer",
                                  "maximum": 10,
                                  "minimum": 1
                                }
                              },
                              "required": [
                                "icon",
                                "color",
                                "max"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "isMultiple": {
                                  "type": "boolean",
                                  "description": "Allow adding multiple users"
                                },
                                "shouldNotify": {
                                  "type": "boolean",
                                  "description": "Notify users when their name is added to a cell"
                                },
                                "defaultValue": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "enum": [
                                        "me"
                                      ]
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "me"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {},
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {},
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "baseId": {
                                  "type": "string",
                                  "description": "the base id of the table that this field is linked to, only required for cross base link"
                                },
                                "relationship": {
                                  "type": "string",
                                  "enum": [
                                    "oneOne",
                                    "manyMany",
                                    "oneMany",
                                    "manyOne"
                                  ],
                                  "description": "describe the relationship from this table to the foreign table"
                                },
                                "foreignTableId": {
                                  "type": "string",
                                  "description": "the table this field is linked to"
                                },
                                "isOneWay": {
                                  "type": "boolean",
                                  "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                                },
                                "filterByViewId": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "the view id that limits the number of records in the link field"
                                },
                                "visibleFieldIds": {
                                  "type": "array",
                                  "nullable": true,
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "the fields that will be displayed in the link field"
                                },
                                "filter": {
                                  "type": "object",
                                  "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                                }
                              },
                              "required": [
                                "relationship",
                                "foreignTableId"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "choices": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "color": {
                                        "type": "string",
                                        "enum": [
                                          "blueLight2",
                                          "blueLight1",
                                          "blueBright",
                                          "blue",
                                          "blueDark1",
                                          "cyanLight2",
                                          "cyanLight1",
                                          "cyanBright",
                                          "cyan",
                                          "cyanDark1",
                                          "grayLight2",
                                          "grayLight1",
                                          "grayBright",
                                          "gray",
                                          "grayDark1",
                                          "greenLight2",
                                          "greenLight1",
                                          "greenBright",
                                          "green",
                                          "greenDark1",
                                          "orangeLight2",
                                          "orangeLight1",
                                          "orangeBright",
                                          "orange",
                                          "orangeDark1",
                                          "pinkLight2",
                                          "pinkLight1",
                                          "pinkBright",
                                          "pink",
                                          "pinkDark1",
                                          "purpleLight2",
                                          "purpleLight1",
                                          "purpleBright",
                                          "purple",
                                          "purpleDark1",
                                          "redLight2",
                                          "redLight1",
                                          "redBright",
                                          "red",
                                          "redDark1",
                                          "tealLight2",
                                          "tealLight1",
                                          "tealBright",
                                          "teal",
                                          "tealDark1",
                                          "yellowLight2",
                                          "yellowLight1",
                                          "yellowBright",
                                          "yellow",
                                          "yellowDark1"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  }
                                },
                                "defaultValue": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  ]
                                },
                                "preventAutoNewOptions": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "choices"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "formatting": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "precision": {
                                          "type": "number",
                                          "maximum": 5,
                                          "minimum": 0
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "decimal"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "precision",
                                        "type"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "precision": {
                                          "type": "number",
                                          "maximum": 5,
                                          "minimum": 0
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "percent"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "precision",
                                        "type"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "precision": {
                                          "type": "number",
                                          "maximum": 5,
                                          "minimum": 0
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "currency"
                                          ]
                                        },
                                        "symbol": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "precision",
                                        "type",
                                        "symbol"
                                      ]
                                    }
                                  ]
                                },
                                "showAs": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "bar",
                                            "ring"
                                          ],
                                          "description": "can display as bar or ring in number field with single cellValue value"
                                        },
                                        "color": {
                                          "type": "string",
                                          "enum": [
                                            "blueLight2",
                                            "blueLight1",
                                            "blueBright",
                                            "blue",
                                            "blueDark1",
                                            "cyanLight2",
                                            "cyanLight1",
                                            "cyanBright",
                                            "cyan",
                                            "cyanDark1",
                                            "grayLight2",
                                            "grayLight1",
                                            "grayBright",
                                            "gray",
                                            "grayDark1",
                                            "greenLight2",
                                            "greenLight1",
                                            "greenBright",
                                            "green",
                                            "greenDark1",
                                            "orangeLight2",
                                            "orangeLight1",
                                            "orangeBright",
                                            "orange",
                                            "orangeDark1",
                                            "pinkLight2",
                                            "pinkLight1",
                                            "pinkBright",
                                            "pink",
                                            "pinkDark1",
                                            "purpleLight2",
                                            "purpleLight1",
                                            "purpleBright",
                                            "purple",
                                            "purpleDark1",
                                            "redLight2",
                                            "redLight1",
                                            "redBright",
                                            "red",
                                            "redDark1",
                                            "tealLight2",
                                            "tealLight1",
                                            "tealBright",
                                            "teal",
                                            "tealDark1",
                                            "yellowLight2",
                                            "yellowLight1",
                                            "yellowBright",
                                            "yellow",
                                            "yellowDark1"
                                          ]
                                        },
                                        "showValue": {
                                          "type": "boolean",
                                          "description": "whether to displays the specific value on the graph"
                                        },
                                        "maxValue": {
                                          "type": "number",
                                          "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "color",
                                        "showValue",
                                        "maxValue"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "bar",
                                            "line"
                                          ],
                                          "description": "can display as bar or line in number field with multiple cellValue value"
                                        },
                                        "color": {
                                          "type": "string",
                                          "enum": [
                                            "blueLight2",
                                            "blueLight1",
                                            "blueBright",
                                            "blue",
                                            "blueDark1",
                                            "cyanLight2",
                                            "cyanLight1",
                                            "cyanBright",
                                            "cyan",
                                            "cyanDark1",
                                            "grayLight2",
                                            "grayLight1",
                                            "grayBright",
                                            "gray",
                                            "grayDark1",
                                            "greenLight2",
                                            "greenLight1",
                                            "greenBright",
                                            "green",
                                            "greenDark1",
                                            "orangeLight2",
                                            "orangeLight1",
                                            "orangeBright",
                                            "orange",
                                            "orangeDark1",
                                            "pinkLight2",
                                            "pinkLight1",
                                            "pinkBright",
                                            "pink",
                                            "pinkDark1",
                                            "purpleLight2",
                                            "purpleLight1",
                                            "purpleBright",
                                            "purple",
                                            "purpleDark1",
                                            "redLight2",
                                            "redLight1",
                                            "redBright",
                                            "red",
                                            "redDark1",
                                            "tealLight2",
                                            "tealLight1",
                                            "tealBright",
                                            "teal",
                                            "tealDark1",
                                            "yellowLight2",
                                            "yellowLight1",
                                            "yellowBright",
                                            "yellow",
                                            "yellowDark1"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "color"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                "defaultValue": {
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {},
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "formatting": {
                                  "type": "object",
                                  "properties": {
                                    "date": {
                                      "type": "string",
                                      "description": "the display formatting of the date."
                                    },
                                    "time": {
                                      "type": "string",
                                      "enum": [
                                        "HH:mm",
                                        "hh:mm A",
                                        "None"
                                      ],
                                      "description": "the display formatting of the time."
                                    },
                                    "timeZone": {
                                      "type": "string",
                                      "description": "The time zone that should be used to format dates"
                                    }
                                  },
                                  "required": [
                                    "date",
                                    "time",
                                    "timeZone"
                                  ],
                                  "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                }
                              },
                              "required": [
                                "formatting"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "formatting": {
                                  "type": "object",
                                  "properties": {
                                    "date": {
                                      "type": "string",
                                      "description": "the display formatting of the date."
                                    },
                                    "time": {
                                      "type": "string",
                                      "enum": [
                                        "HH:mm",
                                        "hh:mm A",
                                        "None"
                                      ],
                                      "description": "the display formatting of the time."
                                    },
                                    "timeZone": {
                                      "type": "string",
                                      "description": "The time zone that should be used to format dates"
                                    }
                                  },
                                  "required": [
                                    "date",
                                    "time",
                                    "timeZone"
                                  ],
                                  "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                }
                              },
                              "required": [
                                "formatting"
                              ],
                              "additionalProperties": false
                            }
                          ],
                          "description": "The options of the field. The configuration of the field's options depend on the it's specific type."
                        },
                        "id": {
                          "type": "string",
                          "description": "The id of the field that start with \"fld\", followed by exactly 16 alphanumeric characters `/^fld[\\da-zA-Z]{16}$/`. It is sometimes useful to specify an id at creation time",
                          "example": "fldxxxxxxxxxxxxxxxx"
                        },
                        "order": {
                          "type": "object",
                          "properties": {
                            "viewId": {
                              "type": "string",
                              "description": "You can only specify order in one view when create field"
                            },
                            "orderIndex": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "viewId",
                            "orderIndex"
                          ]
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "description": "The fields of the table. If it is empty, 3 fields include SingleLineText, Number, SingleSelect will and 3 empty records be generated by default."
                  },
                  "views": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "grid",
                            "calendar",
                            "kanban",
                            "form",
                            "gallery",
                            "gantt",
                            "plugin"
                          ]
                        },
                        "description": {
                          "type": "string"
                        },
                        "order": {
                          "type": "number"
                        },
                        "options": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "rowHeight": {
                                  "type": "string",
                                  "enum": [
                                    "short",
                                    "medium",
                                    "tall",
                                    "extraTall",
                                    "autoFit"
                                  ],
                                  "description": "The row height level of row in view"
                                },
                                "frozenColumnCount": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "The frozen column count in view"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "stackFieldId": {
                                  "type": "string",
                                  "description": "The field id of the Kanban stack."
                                },
                                "coverFieldId": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each Kanban card."
                                },
                                "isCoverFit": {
                                  "type": "boolean",
                                  "description": "If true, cover images are resized to fit Kanban cards."
                                },
                                "isFieldNameHidden": {
                                  "type": "boolean",
                                  "description": "If true, hides field name in the Kanban cards."
                                },
                                "isEmptyStackHidden": {
                                  "type": "boolean",
                                  "description": "If true, hides empty stacks in the Kanban."
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "coverFieldId": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each gallery card."
                                },
                                "isCoverFit": {
                                  "type": "boolean",
                                  "description": "If true, cover images are resized to fit gallery cards."
                                },
                                "isFieldNameHidden": {
                                  "type": "boolean",
                                  "description": "If true, hides field name in the gallery cards."
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "startDateFieldId": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The start date field id."
                                },
                                "endDateFieldId": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The end date field id."
                                },
                                "titleFieldId": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The title field id."
                                },
                                "colorConfig": {
                                  "type": "object",
                                  "nullable": true,
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "field",
                                        "custom"
                                      ]
                                    },
                                    "fieldId": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "The color field id."
                                    },
                                    "color": {
                                      "type": "string",
                                      "nullable": true,
                                      "enum": [
                                        "blueLight2",
                                        "blueLight1",
                                        "blueBright",
                                        "blue",
                                        "blueDark1",
                                        "cyanLight2",
                                        "cyanLight1",
                                        "cyanBright",
                                        "cyan",
                                        "cyanDark1",
                                        "grayLight2",
                                        "grayLight1",
                                        "grayBright",
                                        "gray",
                                        "grayDark1",
                                        "greenLight2",
                                        "greenLight1",
                                        "greenBright",
                                        "green",
                                        "greenDark1",
                                        "orangeLight2",
                                        "orangeLight1",
                                        "orangeBright",
                                        "orange",
                                        "orangeDark1",
                                        "pinkLight2",
                                        "pinkLight1",
                                        "pinkBright",
                                        "pink",
                                        "pinkDark1",
                                        "purpleLight2",
                                        "purpleLight1",
                                        "purpleBright",
                                        "purple",
                                        "purpleDark1",
                                        "redLight2",
                                        "redLight1",
                                        "redBright",
                                        "red",
                                        "redDark1",
                                        "tealLight2",
                                        "tealLight1",
                                        "tealBright",
                                        "teal",
                                        "tealDark1",
                                        "yellowLight2",
                                        "yellowLight1",
                                        "yellowBright",
                                        "yellow",
                                        "yellowDark1"
                                      ],
                                      "description": "The color."
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "coverUrl": {
                                  "type": "string",
                                  "description": "The cover url of the form"
                                },
                                "logoUrl": {
                                  "type": "string",
                                  "description": "The logo url of the form"
                                },
                                "submitLabel": {
                                  "type": "string",
                                  "description": "The submit button text of the form"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "pluginId": {
                                  "type": "string",
                                  "description": "The plugin id"
                                },
                                "pluginInstallId": {
                                  "type": "string",
                                  "description": "The plugin install id"
                                },
                                "pluginLogo": {
                                  "type": "string",
                                  "description": "The plugin logo"
                                }
                              },
                              "required": [
                                "pluginId",
                                "pluginInstallId",
                                "pluginLogo"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "sort": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "sortObjs": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "fieldId": {
                                    "type": "string",
                                    "description": "The id of the field."
                                  },
                                  "order": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ]
                                  }
                                },
                                "required": [
                                  "fieldId",
                                  "order"
                                ]
                              }
                            },
                            "manualSort": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "sortObjs"
                          ]
                        },
                        "filter": {
                          "type": "object",
                          "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                        },
                        "group": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "fieldId": {
                                "type": "string",
                                "description": "The id of the field."
                              },
                              "order": {
                                "type": "string",
                                "enum": [
                                  "asc",
                                  "desc"
                                ]
                              }
                            },
                            "required": [
                              "fieldId",
                              "order"
                            ]
                          }
                        },
                        "isLocked": {
                          "type": "boolean"
                        },
                        "shareId": {
                          "type": "string"
                        },
                        "enableShare": {
                          "type": "boolean"
                        },
                        "shareMeta": {
                          "type": "object",
                          "properties": {
                            "allowCopy": {
                              "type": "boolean"
                            },
                            "includeHiddenField": {
                              "type": "boolean"
                            },
                            "password": {
                              "type": "string",
                              "minLength": 3
                            },
                            "includeRecords": {
                              "type": "boolean"
                            },
                            "submit": {
                              "type": "object",
                              "properties": {
                                "allow": {
                                  "type": "boolean"
                                },
                                "requireLogin": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "columnMeta": {
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "order": {
                                    "type": "number",
                                    "description": "Order is a floating number, column will sort by it in the view."
                                  },
                                  "width": {
                                    "type": "number",
                                    "description": "Column width in the view."
                                  },
                                  "hidden": {
                                    "type": "boolean",
                                    "description": "If column hidden in the view."
                                  },
                                  "statisticFunc": {
                                    "type": "string",
                                    "nullable": true,
                                    "enum": [
                                      "count",
                                      "empty",
                                      "filled",
                                      "unique",
                                      "max",
                                      "min",
                                      "sum",
                                      "average",
                                      "checked",
                                      "unChecked",
                                      "percentEmpty",
                                      "percentFilled",
                                      "percentUnique",
                                      "percentChecked",
                                      "percentUnChecked",
                                      "earliestDate",
                                      "latestDate",
                                      "dateRangeOfDays",
                                      "dateRangeOfMonths",
                                      "totalAttachmentSize"
                                    ],
                                    "description": "Statistic function of the column in the view."
                                  }
                                },
                                "required": [
                                  "order"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "order": {
                                    "type": "number",
                                    "description": "Order is a floating number, column will sort by it in the view."
                                  },
                                  "visible": {
                                    "type": "boolean",
                                    "description": "If column visible in the kanban view."
                                  }
                                },
                                "required": [
                                  "order"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "order": {
                                    "type": "number",
                                    "description": "Order is a floating number, column will sort by it in the view."
                                  },
                                  "visible": {
                                    "type": "boolean",
                                    "description": "If column visible in the gallery view."
                                  }
                                },
                                "required": [
                                  "order"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "order": {
                                    "type": "number",
                                    "description": "Order is a floating number, column will sort by it in the view."
                                  },
                                  "visible": {
                                    "type": "boolean",
                                    "description": "If column visible in the view."
                                  },
                                  "required": {
                                    "type": "boolean",
                                    "description": "If column is required."
                                  }
                                },
                                "required": [
                                  "order"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "order": {
                                    "type": "number",
                                    "description": "Order is a floating number, column will sort by it in the view."
                                  },
                                  "hidden": {
                                    "type": "boolean",
                                    "description": "If column hidden in the view."
                                  }
                                },
                                "required": [
                                  "order"
                                ]
                              }
                            ]
                          },
                          "description": "A mapping of view IDs to their corresponding column metadata."
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "description": "The views of the table. If it is empty, a grid view will be generated by default."
                  },
                  "records": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "object",
                          "additionalProperties": {
                            "nullable": true
                          },
                          "description": "Objects with a fields key mapping fieldId or field name to value for that field."
                        }
                      },
                      "required": [
                        "fields"
                      ]
                    },
                    "description": "The record data of the table. If it is empty, 3 empty records will be generated by default.",
                    "example": [
                      {
                        "fields": {
                          "single line text": "text value"
                        }
                      }
                    ]
                  },
                  "order": {
                    "type": "number"
                  },
                  "fieldKeyType": {
                    "type": "string",
                    "enum": [
                      "id",
                      "name"
                    ],
                    "default": "name",
                    "description": "Define the key type of record.fields[key], You can click \"systemInfo\" in the field edit box to get fieldId or enter the table design screen with all the field details"
                  }
                },
                "description": "params for create a table"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns data about a table.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The id of table."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the table."
                    },
                    "dbTableName": {
                      "type": "string",
                      "pattern": "^[a-z]\\w{0,62}$",
                      "description": "Table name in backend database. Limitation: 1-63 characters, start with letter, can only contain letters, numbers and underscore, case insensitive, cannot be duplicated with existing db table name in the base."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the table."
                    },
                    "icon": {
                      "type": "string",
                      "description": "The emoji icon string of the table."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The id of the field."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the field. can not be duplicated in the table.",
                            "example": "Tags"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "singleLineText",
                              "longText",
                              "user",
                              "attachment",
                              "checkbox",
                              "multipleSelect",
                              "singleSelect",
                              "date",
                              "number",
                              "duration",
                              "rating",
                              "formula",
                              "rollup",
                              "count",
                              "link",
                              "createdTime",
                              "lastModifiedTime",
                              "createdBy",
                              "lastModifiedBy",
                              "autoNumber",
                              "button"
                            ],
                            "description": "The field types supported by teable.",
                            "example": "singleSelect"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the field.",
                            "example": "this is a summary"
                          },
                          "options": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "expression": {
                                    "type": "string",
                                    "enum": [
                                      "countall({values})",
                                      "counta({values})",
                                      "count({values})",
                                      "sum({values})",
                                      "max({values})",
                                      "min({values})",
                                      "and({values})",
                                      "or({values})",
                                      "xor({values})",
                                      "array_join({values})",
                                      "array_unique({values})",
                                      "array_compact({values})",
                                      "concatenate({values})"
                                    ]
                                  },
                                  "timeZone": {
                                    "type": "string",
                                    "description": "The time zone that should be used to format dates"
                                  },
                                  "formatting": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "date": {
                                            "type": "string",
                                            "description": "the display formatting of the date."
                                          },
                                          "time": {
                                            "type": "string",
                                            "enum": [
                                              "HH:mm",
                                              "hh:mm A",
                                              "None"
                                            ],
                                            "description": "the display formatting of the time."
                                          },
                                          "timeZone": {
                                            "type": "string",
                                            "description": "The time zone that should be used to format dates"
                                          }
                                        },
                                        "required": [
                                          "date",
                                          "time",
                                          "timeZone"
                                        ],
                                        "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "precision": {
                                            "type": "number",
                                            "maximum": 5,
                                            "minimum": 0
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "decimal"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "precision",
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "precision": {
                                            "type": "number",
                                            "maximum": 5,
                                            "minimum": 0
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "percent"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "precision",
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "precision": {
                                            "type": "number",
                                            "maximum": 5,
                                            "minimum": 0
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "currency"
                                            ]
                                          },
                                          "symbol": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "precision",
                                          "type",
                                          "symbol"
                                        ]
                                      }
                                    ],
                                    "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                                  },
                                  "showAs": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "url",
                                              "email",
                                              "phone"
                                            ],
                                            "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "bar",
                                              "ring"
                                            ],
                                            "description": "can display as bar or ring in number field with single cellValue value"
                                          },
                                          "color": {
                                            "type": "string",
                                            "enum": [
                                              "blueLight2",
                                              "blueLight1",
                                              "blueBright",
                                              "blue",
                                              "blueDark1",
                                              "cyanLight2",
                                              "cyanLight1",
                                              "cyanBright",
                                              "cyan",
                                              "cyanDark1",
                                              "grayLight2",
                                              "grayLight1",
                                              "grayBright",
                                              "gray",
                                              "grayDark1",
                                              "greenLight2",
                                              "greenLight1",
                                              "greenBright",
                                              "green",
                                              "greenDark1",
                                              "orangeLight2",
                                              "orangeLight1",
                                              "orangeBright",
                                              "orange",
                                              "orangeDark1",
                                              "pinkLight2",
                                              "pinkLight1",
                                              "pinkBright",
                                              "pink",
                                              "pinkDark1",
                                              "purpleLight2",
                                              "purpleLight1",
                                              "purpleBright",
                                              "purple",
                                              "purpleDark1",
                                              "redLight2",
                                              "redLight1",
                                              "redBright",
                                              "red",
                                              "redDark1",
                                              "tealLight2",
                                              "tealLight1",
                                              "tealBright",
                                              "teal",
                                              "tealDark1",
                                              "yellowLight2",
                                              "yellowLight1",
                                              "yellowBright",
                                              "yellow",
                                              "yellowDark1"
                                            ]
                                          },
                                          "showValue": {
                                            "type": "boolean",
                                            "description": "whether to displays the specific value on the graph"
                                          },
                                          "maxValue": {
                                            "type": "number",
                                            "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "color",
                                          "showValue",
                                          "maxValue"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "bar",
                                              "line"
                                            ],
                                            "description": "can display as bar or line in number field with multiple cellValue value"
                                          },
                                          "color": {
                                            "type": "string",
                                            "enum": [
                                              "blueLight2",
                                              "blueLight1",
                                              "blueBright",
                                              "blue",
                                              "blueDark1",
                                              "cyanLight2",
                                              "cyanLight1",
                                              "cyanBright",
                                              "cyan",
                                              "cyanDark1",
                                              "grayLight2",
                                              "grayLight1",
                                              "grayBright",
                                              "gray",
                                              "grayDark1",
                                              "greenLight2",
                                              "greenLight1",
                                              "greenBright",
                                              "green",
                                              "greenDark1",
                                              "orangeLight2",
                                              "orangeLight1",
                                              "orangeBright",
                                              "orange",
                                              "orangeDark1",
                                              "pinkLight2",
                                              "pinkLight1",
                                              "pinkBright",
                                              "pink",
                                              "pinkDark1",
                                              "purpleLight2",
                                              "purpleLight1",
                                              "purpleBright",
                                              "purple",
                                              "purpleDark1",
                                              "redLight2",
                                              "redLight1",
                                              "redBright",
                                              "red",
                                              "redDark1",
                                              "tealLight2",
                                              "tealLight1",
                                              "tealBright",
                                              "teal",
                                              "tealDark1",
                                              "yellowLight2",
                                              "yellowLight1",
                                              "yellowBright",
                                              "yellow",
                                              "yellowDark1"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "color"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ],
                                    "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                                  }
                                },
                                "required": [
                                  "expression"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "expression": {
                                    "type": "string",
                                    "description": "The formula including fields referenced by their IDs. For example, LEFT(4, {Birthday}) input will be returned as LEFT(4, {fldXXX}) via API."
                                  },
                                  "timeZone": {
                                    "type": "string",
                                    "description": "The time zone that should be used to format dates"
                                  },
                                  "formatting": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "date": {
                                            "type": "string",
                                            "description": "the display formatting of the date."
                                          },
                                          "time": {
                                            "type": "string",
                                            "enum": [
                                              "HH:mm",
                                              "hh:mm A",
                                              "None"
                                            ],
                                            "description": "the display formatting of the time."
                                          },
                                          "timeZone": {
                                            "type": "string",
                                            "description": "The time zone that should be used to format dates"
                                          }
                                        },
                                        "required": [
                                          "date",
                                          "time",
                                          "timeZone"
                                        ],
                                        "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "precision": {
                                            "type": "number",
                                            "maximum": 5,
                                            "minimum": 0
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "decimal"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "precision",
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "precision": {
                                            "type": "number",
                                            "maximum": 5,
                                            "minimum": 0
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "percent"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "precision",
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "precision": {
                                            "type": "number",
                                            "maximum": 5,
                                            "minimum": 0
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "currency"
                                            ]
                                          },
                                          "symbol": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "precision",
                                          "type",
                                          "symbol"
                                        ]
                                      }
                                    ],
                                    "description": "Different cell value types are determined based on the results of expression parsing, where numbers, dates, and formatting options are provided"
                                  },
                                  "showAs": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "url",
                                              "email",
                                              "phone"
                                            ],
                                            "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "bar",
                                              "ring"
                                            ],
                                            "description": "can display as bar or ring in number field with single cellValue value"
                                          },
                                          "color": {
                                            "type": "string",
                                            "enum": [
                                              "blueLight2",
                                              "blueLight1",
                                              "blueBright",
                                              "blue",
                                              "blueDark1",
                                              "cyanLight2",
                                              "cyanLight1",
                                              "cyanBright",
                                              "cyan",
                                              "cyanDark1",
                                              "grayLight2",
                                              "grayLight1",
                                              "grayBright",
                                              "gray",
                                              "grayDark1",
                                              "greenLight2",
                                              "greenLight1",
                                              "greenBright",
                                              "green",
                                              "greenDark1",
                                              "orangeLight2",
                                              "orangeLight1",
                                              "orangeBright",
                                              "orange",
                                              "orangeDark1",
                                              "pinkLight2",
                                              "pinkLight1",
                                              "pinkBright",
                                              "pink",
                                              "pinkDark1",
                                              "purpleLight2",
                                              "purpleLight1",
                                              "purpleBright",
                                              "purple",
                                              "purpleDark1",
                                              "redLight2",
                                              "redLight1",
                                              "redBright",
                                              "red",
                                              "redDark1",
                                              "tealLight2",
                                              "tealLight1",
                                              "tealBright",
                                              "teal",
                                              "tealDark1",
                                              "yellowLight2",
                                              "yellowLight1",
                                              "yellowBright",
                                              "yellow",
                                              "yellowDark1"
                                            ]
                                          },
                                          "showValue": {
                                            "type": "boolean",
                                            "description": "whether to displays the specific value on the graph"
                                          },
                                          "maxValue": {
                                            "type": "number",
                                            "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "color",
                                          "showValue",
                                          "maxValue"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "bar",
                                              "line"
                                            ],
                                            "description": "can display as bar or line in number field with multiple cellValue value"
                                          },
                                          "color": {
                                            "type": "string",
                                            "enum": [
                                              "blueLight2",
                                              "blueLight1",
                                              "blueBright",
                                              "blue",
                                              "blueDark1",
                                              "cyanLight2",
                                              "cyanLight1",
                                              "cyanBright",
                                              "cyan",
                                              "cyanDark1",
                                              "grayLight2",
                                              "grayLight1",
                                              "grayBright",
                                              "gray",
                                              "grayDark1",
                                              "greenLight2",
                                              "greenLight1",
                                              "greenBright",
                                              "green",
                                              "greenDark1",
                                              "orangeLight2",
                                              "orangeLight1",
                                              "orangeBright",
                                              "orange",
                                              "orangeDark1",
                                              "pinkLight2",
                                              "pinkLight1",
                                              "pinkBright",
                                              "pink",
                                              "pinkDark1",
                                              "purpleLight2",
                                              "purpleLight1",
                                              "purpleBright",
                                              "purple",
                                              "purpleDark1",
                                              "redLight2",
                                              "redLight1",
                                              "redBright",
                                              "red",
                                              "redDark1",
                                              "tealLight2",
                                              "tealLight1",
                                              "tealBright",
                                              "teal",
                                              "tealDark1",
                                              "yellowLight2",
                                              "yellowLight1",
                                              "yellowBright",
                                              "yellow",
                                              "yellowDark1"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "color"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ],
                                    "description": "According to the results of expression parsing to determine different visual effects, where strings, numbers will provide customized \"show as\""
                                  }
                                },
                                "required": [
                                  "expression"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "baseId": {
                                    "type": "string",
                                    "description": "the base id of the table that this field is linked to, only required for cross base link"
                                  },
                                  "relationship": {
                                    "type": "string",
                                    "enum": [
                                      "oneOne",
                                      "manyMany",
                                      "oneMany",
                                      "manyOne"
                                    ],
                                    "description": "describe the relationship from this table to the foreign table"
                                  },
                                  "foreignTableId": {
                                    "type": "string",
                                    "description": "the table this field is linked to"
                                  },
                                  "lookupFieldId": {
                                    "type": "string",
                                    "description": "the field in the foreign table that will be displayed as the current field"
                                  },
                                  "isOneWay": {
                                    "type": "boolean",
                                    "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                                  },
                                  "fkHostTableName": {
                                    "type": "string",
                                    "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                                  },
                                  "selfKeyName": {
                                    "type": "string",
                                    "description": "the name of the field that stores the current table primary key"
                                  },
                                  "foreignKeyName": {
                                    "type": "string",
                                    "description": "The name of the field that stores the foreign table primary key"
                                  },
                                  "symmetricFieldId": {
                                    "type": "string",
                                    "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                                  },
                                  "filterByViewId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "the view id that limits the number of records in the link field"
                                  },
                                  "visibleFieldIds": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "the fields that will be displayed in the link field"
                                  },
                                  "filter": {
                                    "type": "object",
                                    "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                                  }
                                },
                                "required": [
                                  "relationship",
                                  "foreignTableId",
                                  "lookupFieldId",
                                  "fkHostTableName",
                                  "selfKeyName",
                                  "foreignKeyName"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "formatting": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "description": "the display formatting of the date."
                                      },
                                      "time": {
                                        "type": "string",
                                        "enum": [
                                          "HH:mm",
                                          "hh:mm A",
                                          "None"
                                        ],
                                        "description": "the display formatting of the time."
                                      },
                                      "timeZone": {
                                        "type": "string",
                                        "description": "The time zone that should be used to format dates"
                                      }
                                    },
                                    "required": [
                                      "date",
                                      "time",
                                      "timeZone"
                                    ],
                                    "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                  },
                                  "defaultValue": {
                                    "type": "string",
                                    "enum": [
                                      "now"
                                    ],
                                    "description": "Whether the new row is automatically filled with the current time, caveat: the defaultValue is just a flag, it dose not effect the storing value of the record"
                                  }
                                },
                                "required": [
                                  "formatting"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "defaultValue": {
                                    "type": "boolean"
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "showAs": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "url",
                                          "email",
                                          "phone"
                                        ],
                                        "description": "can display as url, email or phone in string field with a button to perform the corresponding action, start a phone call, send an email, or open a link in a new tab"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  "defaultValue": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "icon": {
                                    "type": "string",
                                    "enum": [
                                      "star",
                                      "moon",
                                      "sun",
                                      "zap",
                                      "flame",
                                      "heart",
                                      "apple",
                                      "thumb-up"
                                    ]
                                  },
                                  "color": {
                                    "type": "string",
                                    "enum": [
                                      "yellowBright",
                                      "redBright",
                                      "tealBright"
                                    ]
                                  },
                                  "max": {
                                    "type": "integer",
                                    "maximum": 10,
                                    "minimum": 1
                                  }
                                },
                                "required": [
                                  "icon",
                                  "color",
                                  "max"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "isMultiple": {
                                    "type": "boolean",
                                    "description": "Allow adding multiple users"
                                  },
                                  "shouldNotify": {
                                    "type": "boolean",
                                    "description": "Notify users when their name is added to a cell"
                                  },
                                  "defaultValue": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "me"
                                        ]
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "me"
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "baseId": {
                                    "type": "string",
                                    "description": "the base id of the table that this field is linked to, only required for cross base link"
                                  },
                                  "relationship": {
                                    "type": "string",
                                    "enum": [
                                      "oneOne",
                                      "manyMany",
                                      "oneMany",
                                      "manyOne"
                                    ],
                                    "description": "describe the relationship from this table to the foreign table"
                                  },
                                  "foreignTableId": {
                                    "type": "string",
                                    "description": "the table this field is linked to"
                                  },
                                  "lookupFieldId": {
                                    "type": "string",
                                    "description": "the field in the foreign table that will be displayed as the current field"
                                  },
                                  "isOneWay": {
                                    "type": "boolean",
                                    "description": "whether the field is a one-way link, when true, it will not generate a symmetric field, it is generally has better performance"
                                  },
                                  "fkHostTableName": {
                                    "type": "string",
                                    "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                                  },
                                  "selfKeyName": {
                                    "type": "string",
                                    "description": "the name of the field that stores the current table primary key"
                                  },
                                  "foreignKeyName": {
                                    "type": "string",
                                    "description": "The name of the field that stores the foreign table primary key"
                                  },
                                  "symmetricFieldId": {
                                    "type": "string",
                                    "description": "the symmetric field in the foreign table, empty if the field is a one-way link"
                                  },
                                  "filterByViewId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "the view id that limits the number of records in the link field"
                                  },
                                  "visibleFieldIds": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "the fields that will be displayed in the link field"
                                  },
                                  "filter": {
                                    "type": "object",
                                    "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                                  }
                                },
                                "required": [
                                  "relationship",
                                  "foreignTableId",
                                  "lookupFieldId",
                                  "fkHostTableName",
                                  "selfKeyName",
                                  "foreignKeyName"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "choices": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "color": {
                                          "type": "string",
                                          "enum": [
                                            "blueLight2",
                                            "blueLight1",
                                            "blueBright",
                                            "blue",
                                            "blueDark1",
                                            "cyanLight2",
                                            "cyanLight1",
                                            "cyanBright",
                                            "cyan",
                                            "cyanDark1",
                                            "grayLight2",
                                            "grayLight1",
                                            "grayBright",
                                            "gray",
                                            "grayDark1",
                                            "greenLight2",
                                            "greenLight1",
                                            "greenBright",
                                            "green",
                                            "greenDark1",
                                            "orangeLight2",
                                            "orangeLight1",
                                            "orangeBright",
                                            "orange",
                                            "orangeDark1",
                                            "pinkLight2",
                                            "pinkLight1",
                                            "pinkBright",
                                            "pink",
                                            "pinkDark1",
                                            "purpleLight2",
                                            "purpleLight1",
                                            "purpleBright",
                                            "purple",
                                            "purpleDark1",
                                            "redLight2",
                                            "redLight1",
                                            "redBright",
                                            "red",
                                            "redDark1",
                                            "tealLight2",
                                            "tealLight1",
                                            "tealBright",
                                            "teal",
                                            "tealDark1",
                                            "yellowLight2",
                                            "yellowLight1",
                                            "yellowBright",
                                            "yellow",
                                            "yellowDark1"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "name",
                                        "color"
                                      ]
                                    }
                                  },
                                  "defaultValue": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "preventAutoNewOptions": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "choices"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "formatting": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "precision": {
                                            "type": "number",
                                            "maximum": 5,
                                            "minimum": 0
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "decimal"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "precision",
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "precision": {
                                            "type": "number",
                                            "maximum": 5,
                                            "minimum": 0
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "percent"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "precision",
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "precision": {
                                            "type": "number",
                                            "maximum": 5,
                                            "minimum": 0
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "currency"
                                            ]
                                          },
                                          "symbol": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "precision",
                                          "type",
                                          "symbol"
                                        ]
                                      }
                                    ]
                                  },
                                  "showAs": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "bar",
                                              "ring"
                                            ],
                                            "description": "can display as bar or ring in number field with single cellValue value"
                                          },
                                          "color": {
                                            "type": "string",
                                            "enum": [
                                              "blueLight2",
                                              "blueLight1",
                                              "blueBright",
                                              "blue",
                                              "blueDark1",
                                              "cyanLight2",
                                              "cyanLight1",
                                              "cyanBright",
                                              "cyan",
                                              "cyanDark1",
                                              "grayLight2",
                                              "grayLight1",
                                              "grayBright",
                                              "gray",
                                              "grayDark1",
                                              "greenLight2",
                                              "greenLight1",
                                              "greenBright",
                                              "green",
                                              "greenDark1",
                                              "orangeLight2",
                                              "orangeLight1",
                                              "orangeBright",
                                              "orange",
                                              "orangeDark1",
                                              "pinkLight2",
                                              "pinkLight1",
                                              "pinkBright",
                                              "pink",
                                              "pinkDark1",
                                              "purpleLight2",
                                              "purpleLight1",
                                              "purpleBright",
                                              "purple",
                                              "purpleDark1",
                                              "redLight2",
                                              "redLight1",
                                              "redBright",
                                              "red",
                                              "redDark1",
                                              "tealLight2",
                                              "tealLight1",
                                              "tealBright",
                                              "teal",
                                              "tealDark1",
                                              "yellowLight2",
                                              "yellowLight1",
                                              "yellowBright",
                                              "yellow",
                                              "yellowDark1"
                                            ]
                                          },
                                          "showValue": {
                                            "type": "boolean",
                                            "description": "whether to displays the specific value on the graph"
                                          },
                                          "maxValue": {
                                            "type": "number",
                                            "description": "the value that represents a 100% maximum value, it does not represent a hard limit on the value"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "color",
                                          "showValue",
                                          "maxValue"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "bar",
                                              "line"
                                            ],
                                            "description": "can display as bar or line in number field with multiple cellValue value"
                                          },
                                          "color": {
                                            "type": "string",
                                            "enum": [
                                              "blueLight2",
                                              "blueLight1",
                                              "blueBright",
                                              "blue",
                                              "blueDark1",
                                              "cyanLight2",
                                              "cyanLight1",
                                              "cyanBright",
                                              "cyan",
                                              "cyanDark1",
                                              "grayLight2",
                                              "grayLight1",
                                              "grayBright",
                                              "gray",
                                              "grayDark1",
                                              "greenLight2",
                                              "greenLight1",
                                              "greenBright",
                                              "green",
                                              "greenDark1",
                                              "orangeLight2",
                                              "orangeLight1",
                                              "orangeBright",
                                              "orange",
                                              "orangeDark1",
                                              "pinkLight2",
                                              "pinkLight1",
                                              "pinkBright",
                                              "pink",
                                              "pinkDark1",
                                              "purpleLight2",
                                              "purpleLight1",
                                              "purpleBright",
                                              "purple",
                                              "purpleDark1",
                                              "redLight2",
                                              "redLight1",
                                              "redBright",
                                              "red",
                                              "redDark1",
                                              "tealLight2",
                                              "tealLight1",
                                              "tealBright",
                                              "teal",
                                              "tealDark1",
                                              "yellowLight2",
                                              "yellowLight1",
                                              "yellowBright",
                                              "yellow",
                                              "yellowDark1"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "color"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  "defaultValue": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "formatting"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "expression": {
                                    "type": "string",
                                    "enum": [
                                      "AUTO_NUMBER()"
                                    ]
                                  }
                                },
                                "required": [
                                  "expression"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "expression": {
                                    "type": "string",
                                    "enum": [
                                      "CREATED_TIME()"
                                    ]
                                  },
                                  "formatting": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "description": "the display formatting of the date."
                                      },
                                      "time": {
                                        "type": "string",
                                        "enum": [
                                          "HH:mm",
                                          "hh:mm A",
                                          "None"
                                        ],
                                        "description": "the display formatting of the time."
                                      },
                                      "timeZone": {
                                        "type": "string",
                                        "description": "The time zone that should be used to format dates"
                                      }
                                    },
                                    "required": [
                                      "date",
                                      "time",
                                      "timeZone"
                                    ],
                                    "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                  }
                                },
                                "required": [
                                  "expression",
                                  "formatting"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "expression": {
                                    "type": "string",
                                    "enum": [
                                      "LAST_MODIFIED_TIME()"
                                    ]
                                  },
                                  "formatting": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "description": "the display formatting of the date."
                                      },
                                      "time": {
                                        "type": "string",
                                        "enum": [
                                          "HH:mm",
                                          "hh:mm A",
                                          "None"
                                        ],
                                        "description": "the display formatting of the time."
                                      },
                                      "timeZone": {
                                        "type": "string",
                                        "description": "The time zone that should be used to format dates"
                                      }
                                    },
                                    "required": [
                                      "date",
                                      "time",
                                      "timeZone"
                                    ],
                                    "description": "caveat: the formatting is just a formatter, it dose not effect the storing value of the record"
                                  }
                                },
                                "required": [
                                  "expression",
                                  "formatting"
                                ],
                                "additionalProperties": false
                              }
                            ],
                            "description": "The configuration options of the field. The structure of the field's options depend on the field's type."
                          },
                          "isLookup": {
                            "type": "boolean",
                            "description": "Whether this field is lookup field. witch means cellValue and [fieldType] is looked up from the linked table."
                          },
                          "lookupOptions": {
                            "type": "object",
                            "properties": {
                              "foreignTableId": {
                                "type": "string",
                                "description": "the table this field is linked to"
                              },
                              "lookupFieldId": {
                                "type": "string",
                                "description": "the field in the foreign table that will be displayed as the current field"
                              },
                              "relationship": {
                                "type": "string",
                                "enum": [
                                  "oneOne",
                                  "manyMany",
                                  "oneMany",
                                  "manyOne"
                                ],
                                "description": "describe the relationship from this table to the foreign table"
                              },
                              "fkHostTableName": {
                                "type": "string",
                                "description": "the table name for storing keys, in many-to-many relationships, keys are stored in a separate intermediate table; in other relationships, keys are stored on one side as needed"
                              },
                              "selfKeyName": {
                                "type": "string",
                                "description": "the name of the field that stores the current table primary key"
                              },
                              "foreignKeyName": {
                                "type": "string",
                                "description": "The name of the field that stores the foreign table primary key"
                              },
                              "filter": {
                                "type": "object",
                                "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                              },
                              "linkFieldId": {
                                "type": "string",
                                "description": "The id of Linked record field to use for lookup"
                              }
                            },
                            "required": [
                              "foreignTableId",
                              "lookupFieldId",
                              "relationship",
                              "fkHostTableName",
                              "selfKeyName",
                              "foreignKeyName",
                              "linkFieldId"
                            ],
                            "description": "field lookup options."
                          },
                          "notNull": {
                            "type": "boolean",
                            "description": "Whether this field is not null."
                          },
                          "unique": {
                            "type": "boolean",
                            "description": "Whether this field is not unique."
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Whether this field is primary field."
                          },
                          "isComputed": {
                            "type": "boolean",
                            "description": "Whether this field is computed field, you can not modify cellValue in computed field."
                          },
                          "isPending": {
                            "type": "boolean",
                            "description": "Whether this field's calculation is pending."
                          },
                          "hasError": {
                            "type": "boolean",
                            "description": "Whether This field has a configuration error. Check the fields referenced by this field's formula or configuration."
                          },
                          "cellValueType": {
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean",
                              "dateTime"
                            ],
                            "description": "The cell value type of the field."
                          },
                          "isMultipleCellValue": {
                            "type": "boolean",
                            "description": "Whether this field has multiple cell value."
                          },
                          "dbFieldType": {
                            "type": "string",
                            "enum": [
                              "TEXT",
                              "INTEGER",
                              "DATETIME",
                              "REAL",
                              "BLOB",
                              "JSON",
                              "BOOLEAN"
                            ],
                            "description": "The field type of database that cellValue really store."
                          },
                          "dbFieldName": {
                            "type": "string",
                            "minLength": 1,
                            "pattern": "^\\w{0,63}$",
                            "description": "Field(column) name in backend database. Limitation: 1-63 characters, can only contain letters, numbers and underscore, case sensitive, cannot be duplicated with existing db field name in the table."
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "type",
                          "options",
                          "cellValueType",
                          "dbFieldType",
                          "dbFieldName"
                        ]
                      },
                      "description": "The fields of the table."
                    },
                    "views": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "grid",
                              "calendar",
                              "kanban",
                              "form",
                              "gallery",
                              "gantt",
                              "plugin"
                            ]
                          },
                          "description": {
                            "type": "string"
                          },
                          "order": {
                            "type": "number"
                          },
                          "options": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "rowHeight": {
                                    "type": "string",
                                    "enum": [
                                      "short",
                                      "medium",
                                      "tall",
                                      "extraTall",
                                      "autoFit"
                                    ],
                                    "description": "The row height level of row in view"
                                  },
                                  "frozenColumnCount": {
                                    "type": "number",
                                    "minimum": 0,
                                    "description": "The frozen column count in view"
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "stackFieldId": {
                                    "type": "string",
                                    "description": "The field id of the Kanban stack."
                                  },
                                  "coverFieldId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each Kanban card."
                                  },
                                  "isCoverFit": {
                                    "type": "boolean",
                                    "description": "If true, cover images are resized to fit Kanban cards."
                                  },
                                  "isFieldNameHidden": {
                                    "type": "boolean",
                                    "description": "If true, hides field name in the Kanban cards."
                                  },
                                  "isEmptyStackHidden": {
                                    "type": "boolean",
                                    "description": "If true, hides empty stacks in the Kanban."
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "coverFieldId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The cover field id is a designated attachment field id, the contents of which appear at the top of each gallery card."
                                  },
                                  "isCoverFit": {
                                    "type": "boolean",
                                    "description": "If true, cover images are resized to fit gallery cards."
                                  },
                                  "isFieldNameHidden": {
                                    "type": "boolean",
                                    "description": "If true, hides field name in the gallery cards."
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "startDateFieldId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The start date field id."
                                  },
                                  "endDateFieldId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The end date field id."
                                  },
                                  "titleFieldId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The title field id."
                                  },
                                  "colorConfig": {
                                    "type": "object",
                                    "nullable": true,
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "field",
                                          "custom"
                                        ]
                                      },
                                      "fieldId": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "The color field id."
                                      },
                                      "color": {
                                        "type": "string",
                                        "nullable": true,
                                        "enum": [
                                          "blueLight2",
                                          "blueLight1",
                                          "blueBright",
                                          "blue",
                                          "blueDark1",
                                          "cyanLight2",
                                          "cyanLight1",
                                          "cyanBright",
                                          "cyan",
                                          "cyanDark1",
                                          "grayLight2",
                                          "grayLight1",
                                          "grayBright",
                                          "gray",
                                          "grayDark1",
                                          "greenLight2",
                                          "greenLight1",
                                          "greenBright",
                                          "green",
                                          "greenDark1",
                                          "orangeLight2",
                                          "orangeLight1",
                                          "orangeBright",
                                          "orange",
                                          "orangeDark1",
                                          "pinkLight2",
                                          "pinkLight1",
                                          "pinkBright",
                                          "pink",
                                          "pinkDark1",
                                          "purpleLight2",
                                          "purpleLight1",
                                          "purpleBright",
                                          "purple",
                                          "purpleDark1",
                                          "redLight2",
                                          "redLight1",
                                          "redBright",
                                          "red",
                                          "redDark1",
                                          "tealLight2",
                                          "tealLight1",
                                          "tealBright",
                                          "teal",
                                          "tealDark1",
                                          "yellowLight2",
                                          "yellowLight1",
                                          "yellowBright",
                                          "yellow",
                                          "yellowDark1"
                                        ],
                                        "description": "The color."
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "coverUrl": {
                                    "type": "string",
                                    "description": "The cover url of the form"
                                  },
                                  "logoUrl": {
                                    "type": "string",
                                    "description": "The logo url of the form"
                                  },
                                  "submitLabel": {
                                    "type": "string",
                                    "description": "The submit button text of the form"
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "pluginId": {
                                    "type": "string",
                                    "description": "The plugin id"
                                  },
                                  "pluginInstallId": {
                                    "type": "string",
                                    "description": "The plugin install id"
                                  },
                                  "pluginLogo": {
                                    "type": "string",
                                    "description": "The plugin logo"
                                  }
                                },
                                "required": [
                                  "pluginId",
                                  "pluginInstallId",
                                  "pluginLogo"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          },
                          "sort": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "sortObjs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "fieldId": {
                                      "type": "string",
                                      "description": "The id of the field."
                                    },
                                    "order": {
                                      "type": "string",
                                      "enum": [
                                        "asc",
                                        "desc"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "fieldId",
                                    "order"
                                  ]
                                }
                              },
                              "manualSort": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "sortObjs"
                            ]
                          },
                          "filter": {
                            "type": "object",
                            "description": "A filter object used to filter results. It allows complex query conditions based on fields, operators, and values."
                          },
                          "group": {
                            "type": "array",
                            "nullable": true,
                            "items": {
                              "type": "object",
                              "properties": {
                                "fieldId": {
                                  "type": "string",
                                  "description": "The id of the field."
                                },
                                "order": {
                                  "type": "string",
                                  "enum": [
                                    "asc",
                                    "desc"
                                  ]
                                }
                              },
                              "required": [
                                "fieldId",
                                "order"
                              ]
                            }
                          },
                          "isLocked": {
                            "type": "boolean"
                          },
                          "shareId": {
                            "type": "string"
                          },
                          "enableShare": {
                            "type": "boolean"
                          },
                          "shareMeta": {
                            "type": "object",
                            "properties": {
                              "allowCopy": {
                                "type": "boolean"
                              },
                              "includeHiddenField": {
                                "type": "boolean"
                              },
                              "password": {
                                "type": "string",
                                "minLength": 3
                              },
                              "includeRecords": {
                                "type": "boolean"
                              },
                              "submit": {
                                "type": "object",
                                "properties": {
                                  "allow": {
                                    "type": "boolean"
                                  },
                                  "requireLogin": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          },
                          "createdBy": {
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "type": "string"
                          },
                          "createdTime": {
                            "type": "string"
                          },
                          "lastModifiedTime": {
                            "type": "string"
                          },
                          "columnMeta": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "order": {
                                      "type": "number",
                                      "description": "Order is a floating number, column will sort by it in the view."
                                    },
                                    "width": {
                                      "type": "number",
                                      "description": "Column width in the view."
                                    },
                                    "hidden": {
                                      "type": "boolean",
                                      "description": "If column hidden in the view."
                                    },
                                    "statisticFunc": {
                                      "type": "string",
                                      "nullable": true,
                                      "enum": [
                                        "count",
                                        "empty",
                                        "filled",
                                        "unique",
                                        "max",
                                        "min",
                                        "sum",
                                        "average",
                                        "checked",
                                        "unChecked",
                                        "percentEmpty",
                                        "percentFilled",
                                        "percentUnique",
                                        "percentChecked",
                                        "percentUnChecked",
                                        "earliestDate",
                                        "latestDate",
                                        "dateRangeOfDays",
                                        "dateRangeOfMonths",
                                        "totalAttachmentSize"
                                      ],
                                      "description": "Statistic function of the column in the view."
                                    }
                                  },
                                  "required": [
                                    "order"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "order": {
                                      "type": "number",
                                      "description": "Order is a floating number, column will sort by it in the view."
                                    },
                                    "visible": {
                                      "type": "boolean",
                                      "description": "If column visible in the kanban view."
                                    }
                                  },
                                  "required": [
                                    "order"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "order": {
                                      "type": "number",
                                      "description": "Order is a floating number, column will sort by it in the view."
                                    },
                                    "visible": {
                                      "type": "boolean",
                                      "description": "If column visible in the gallery view."
                                    }
                                  },
                                  "required": [
                                    "order"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "order": {
                                      "type": "number",
                                      "description": "Order is a floating number, column will sort by it in the view."
                                    },
                                    "visible": {
                                      "type": "boolean",
                                      "description": "If column visible in the view."
                                    },
                                    "required": {
                                      "type": "boolean",
                                      "description": "If column is required."
                                    }
                                  },
                                  "required": [
                                    "order"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "order": {
                                      "type": "number",
                                      "description": "Order is a floating number, column will sort by it in the view."
                                    },
                                    "hidden": {
                                      "type": "boolean",
                                      "description": "If column hidden in the view."
                                    }
                                  },
                                  "required": [
                                    "order"
                                  ]
                                }
                              ]
                            },
                            "description": "A mapping of view IDs to their corresponding column metadata."
                          },
                          "pluginId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "type",
                          "createdBy",
                          "createdTime",
                          "columnMeta"
                        ]
                      },
                      "description": "The views of the table."
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The record id."
                          },
                          "name": {
                            "type": "string",
                            "description": "primary field value"
                          },
                          "fields": {
                            "type": "object",
                            "additionalProperties": {
                              "nullable": true
                            },
                            "description": "Objects with a fields key mapping fieldId or field name to value for that field."
                          },
                          "autoNumber": {
                            "type": "number",
                            "description": "Auto number, a unique identifier for each record"
                          },
                          "createdTime": {
                            "type": "string",
                            "description": "Created time, date ISO string (new Date().toISOString)."
                          },
                          "lastModifiedTime": {
                            "type": "string",
                            "description": "Last modified time, date ISO string (new Date().toISOString)."
                          },
                          "createdBy": {
                            "type": "string",
                            "description": "Created by, user name"
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "Last modified by, user name"
                          }
                        },
                        "required": [
                          "id",
                          "fields"
                        ]
                      },
                      "description": "The records of the table."
                    },
                    "order": {
                      "type": "number"
                    },
                    "lastModifiedTime": {
                      "type": "string",
                      "description": "The last modified time of the table."
                    },
                    "defaultViewId": {
                      "type": "string",
                      "description": "The default view id of the table."
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "dbTableName",
                    "fields",
                    "views",
                    "records"
                  ],
                  "description": "Complete table structure data and initial record data."
                }
              }
            }
          }
        },
        "operationId": "createCreateTable"
      }
    },
    "/base/{baseId}/table/{tableId}": {
      "delete": {
        "summary": "Delete table",
        "description": "Move a table to trash. The table can be restored within the retention period.",
        "tags": [
          "table"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "baseId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Table successfully moved to trash."
          }
        },
        "operationId": "deleteDeleteTable"
      },
      "get": {
        "summary": "Get table details",
        "description": "Retrieve detailed information about a specific table, including its schema, name, and configuration.",
        "tags": [
          "table"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "baseId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns data about a table.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The id of table."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the table."
                    },
                    "dbTableName": {
                      "type": "string",
                      "pattern": "^[a-z]\\w{0,62}$",
                      "description": "Table name in backend database. Limitation: 1-63 characters, start with letter, can only contain letters, numbers and underscore, case insensitive, cannot be duplicated with existing db table name in the base."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the table."
                    },
                    "icon": {
                      "type": "string",
                      "description": "The emoji icon string of the table."
                    },
                    "order": {
                      "type": "number"
                    },
                    "lastModifiedTime": {
                      "type": "string",
                      "description": "The last modified time of the table."
                    },
                    "defaultViewId": {
                      "type": "string",
                      "description": "The default view id of the table."
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "dbTableName"
                  ]
                }
              }
            }
          }
        },
        "operationId": "getGetTableDetails"
      }
    },
    "/base/{baseId}/table": {
      "get": {
        "summary": "List tables",
        "description": "Retrieve a list of all tables in the specified base, including their basic information and configurations.",
        "tags": [
          "table"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "baseId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of tables.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id of table."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the table."
                      },
                      "dbTableName": {
                        "type": "string",
                        "pattern": "^[a-z]\\w{0,62}$",
                        "description": "Table name in backend database. Limitation: 1-63 characters, start with letter, can only contain letters, numbers and underscore, case insensitive, cannot be duplicated with existing db table name in the base."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the table."
                      },
                      "icon": {
                        "type": "string",
                        "description": "The emoji icon string of the table."
                      },
                      "order": {
                        "type": "number"
                      },
                      "lastModifiedTime": {
                        "type": "string",
                        "description": "The last modified time of the table."
                      },
                      "defaultViewId": {
                        "type": "string",
                        "description": "The default view id of the table."
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "dbTableName"
                    ]
                  },
                  "description": "The list of tables."
                }
              }
            }
          }
        },
        "operationId": "getListTables"
      }
    },
    "/base/{baseId}/table/{tableId}/name": {
      "put": {
        "summary": "Update table name",
        "description": "Update the display name of a table. This will not affect the underlying database table name.",
        "tags": [
          "table"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "baseId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tableId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Table name successfully updated."
          }
        },
        "operationId": "updateUpdateTableName"
      }
    }
  }
}